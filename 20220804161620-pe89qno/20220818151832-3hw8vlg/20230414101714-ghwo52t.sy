{
	"ID": "20230414101714-ghwo52t",
	"Spec": "1",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20230414101714-ghwo52t",
		"title": "国内环境下 Kubernetes 源码编译及运行",
		"updated": "20230414110420"
	},
	"Children": [
		{
			"ID": "20230414101714-y7wlwkr",
			"Type": "NodeThematicBreak",
			"Properties": {
				"id": "20230414101714-y7wlwkr"
			}
		},
		{
			"ID": "20230414101714-yf9eyt8",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20230414101714-yf9eyt8",
				"updated": "20230414110410"
			},
			"Children": [
				{
					"ID": "20230414101714-qoc0rqj",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230414101714-qoc0rqj"
					},
					"Children": [
						{
							"ID": "20230414101714-kscqrsv",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230414101714-kscqrsv"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "a",
									"TextMarkAHref": "https://cloud.tencent.com/developer/article/1433219",
									"TextMarkTextContent": "https://cloud.tencent.com/developer/article/1433219"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230414101714-t9xh3kk",
			"Type": "NodeThematicBreak",
			"Properties": {
				"id": "20230414101714-t9xh3kk"
			}
		},
		{
			"ID": "20230414101714-fj70xgp",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230414101714-fj70xgp"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "文章目录* "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "a",
					"TextMarkAHref": "https://cloud.tencent.com/developer/audit/support-plan/4867113#1kubernete__3",
					"TextMarkTextContent": "1、kubernete 源码编译介绍"
				}
			]
		},
		{
			"ID": "20230414101714-vp4ubj7",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20230414101714-vp4ubj7"
			},
			"Children": [
				{
					"ID": "20230414101714-onjhngw",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230414101714-onjhngw"
					},
					"Children": [
						{
							"ID": "20230414101714-v0ynpax",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230414101714-v0ynpax"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "a",
									"TextMarkAHref": "https://cloud.tencent.com/developer/audit/support-plan/4867113#2_7",
									"TextMarkTextContent": "2、环境、软件准备"
								}
							]
						}
					]
				},
				{
					"ID": "20230414101714-gnfgc80",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230414101714-gnfgc80"
					},
					"Children": [
						{
							"ID": "20230414101714-0diuh5c",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230414101714-0diuh5c"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "a",
									"TextMarkAHref": "https://cloud.tencent.com/developer/audit/support-plan/4867113#3_golangdocker_19",
									"TextMarkTextContent": "3、安装依赖 golang、docker"
								}
							]
						},
						{
							"ID": "20230414101714-prma1iw",
							"Type": "NodeList",
							"ListData": {},
							"Properties": {
								"id": "20230414101714-prma1iw"
							},
							"Children": [
								{
									"ID": "20230414101714-c3irbi4",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20230414101714-c3irbi4"
									},
									"Children": [
										{
											"ID": "20230414101714-lpx9yp5",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20230414101714-lpx9yp5"
											},
											"Children": [
												{
													"Type": "NodeTextMark",
													"TextMarkType": "a",
													"TextMarkAHref": "https://cloud.tencent.com/developer/audit/support-plan/4867113#31_golang_21",
													"TextMarkTextContent": "3.1、安装 golang"
												}
											]
										}
									]
								},
								{
									"ID": "20230414101714-9gubxus",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20230414101714-9gubxus"
									},
									"Children": [
										{
											"ID": "20230414101714-crvmmav",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20230414101714-crvmmav"
											},
											"Children": [
												{
													"Type": "NodeTextMark",
													"TextMarkType": "a",
													"TextMarkAHref": "https://cloud.tencent.com/developer/audit/support-plan/4867113#32_docker_47",
													"TextMarkTextContent": "3.2、安装 docker"
												}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20230414101714-e8c339w",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230414101714-e8c339w"
					},
					"Children": [
						{
							"ID": "20230414101714-exe54mc",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230414101714-exe54mc"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "a",
									"TextMarkAHref": "https://cloud.tencent.com/developer/audit/support-plan/4867113#4_kubernetes_76",
									"TextMarkTextContent": "4、二进制可执行文件编译 kubernetes"
								}
							]
						}
					]
				},
				{
					"ID": "20230414101714-v9gqyvy",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230414101714-v9gqyvy"
					},
					"Children": [
						{
							"ID": "20230414101714-ximf1av",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230414101714-ximf1av"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "a",
									"TextMarkAHref": "https://cloud.tencent.com/developer/audit/support-plan/4867113#5docker__kubernetes_140",
									"TextMarkTextContent": "5、docker 镜像编译 kubernetes"
								}
							]
						}
					]
				},
				{
					"ID": "20230414101714-6bbtmug",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230414101714-6bbtmug"
					},
					"Children": [
						{
							"ID": "20230414101714-f48mhsq",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230414101714-f48mhsq"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "a",
									"TextMarkAHref": "https://cloud.tencent.com/developer/audit/support-plan/4867113#6_234",
									"TextMarkTextContent": "6、如何使用编译产物"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230414101714-o1u1tms",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230414101714-o1u1tms"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "1、kubernete 源码编译介绍"
				}
			]
		},
		{
			"ID": "20230414101714-bpz60la",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20230414101714-bpz60la"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20230414101714-pd1689m",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20230414101714-pd1689m"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "我们知道，kubernetes 源码编译，分为本地二进制可执行文件编译和 "
						},
						{
							"Type": "NodeTextMark",
							"TextMarkType": "a",
							"TextMarkAHref": "https://cloud.tencent.com/product/tke?from=20065\u0026from_column=20065",
							"TextMarkTextContent": "docker"
						},
						{
							"Type": "NodeText",
							"Data": " 镜像编译两种。之前演示的 "
						},
						{
							"Type": "NodeTextMark",
							"TextMarkType": "a",
							"TextMarkAHref": "https://blog.csdn.net/aixiaoyang168/article/details/78331847",
							"TextMarkTextContent": "minikube 方式"
						},
						{
							"Type": "NodeText",
							"Data": "或 "
						},
						{
							"Type": "NodeTextMark",
							"TextMarkType": "a",
							"TextMarkAHref": "https://blog.csdn.net/aixiaoyang168/article/details/78411511",
							"TextMarkTextContent": "kubeadm 方式"
						},
						{
							"Type": "NodeText",
							"Data": "安装，都是基于第二种 docker 镜像方式运行，当然也可以基于二进制文件方式安装，不管哪种方式，都是直接使用并不需要修改任何 k8s 代码。不过当我们有特殊需求时，比如需要修改 kube-proxy 对 service 的代理逻辑，kube-scheduler 对 pod 的调度逻辑等，这个时候就需要修改 k8s 源码了，为了让修改的代码生效，就需要对 k8s 代码执行编译了。当然 k8s 也为我们提供了 CRD 等可扩展插件，在不修改 k8s 源码的基础上实现自定义功能，但是对于一些底层逻辑策略需要修改的话，还是办不到的。"
						}
					]
				}
			]
		},
		{
			"ID": "20230414101714-b64wqj1",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230414101714-b64wqj1"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "2、环境、软件准备"
				}
			]
		},
		{
			"ID": "20230414101714-fwrczak",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230414101714-fwrczak"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "本次演示环境，我是在虚拟机 Linux Centos7 系统上操作，以下是安装的软件及版本："
				}
			]
		},
		{
			"ID": "20230414101714-gql06by",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20230414101714-gql06by"
			},
			"Children": [
				{
					"ID": "20230414101714-ksgs2kg",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230414101714-ksgs2kg"
					},
					"Children": [
						{
							"ID": "20230414101714-1mkgzcc",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230414101714-1mkgzcc"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "Oracle VirtualBox"
								},
								{
									"Type": "NodeText",
									"Data": " : 5.1.20 r114628 (Qt5.6.2)"
								}
							]
						}
					]
				},
				{
					"ID": "20230414101714-o5thjkn",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230414101714-o5thjkn"
					},
					"Children": [
						{
							"ID": "20230414101714-444elol",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230414101714-444elol"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "Linux"
								},
								{
									"Type": "NodeText",
									"Data": " : CentOS Linux release 7.3.1611 (Core)"
								}
							]
						}
					]
				},
				{
					"ID": "20230414101714-bl77o0s",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230414101714-bl77o0s"
					},
					"Children": [
						{
							"ID": "20230414101714-e5r725k",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230414101714-e5r725k"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "Docker"
								},
								{
									"Type": "NodeText",
									"Data": " : 18.06.1-ce"
								}
							]
						}
					]
				},
				{
					"ID": "20230414101714-mp8ldl6",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230414101714-mp8ldl6"
					},
					"Children": [
						{
							"ID": "20230414101714-k4aiqhd",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230414101714-k4aiqhd"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "Golang"
								},
								{
									"Type": "NodeText",
									"Data": " : go1.11.5"
								}
							]
						}
					]
				},
				{
					"ID": "20230414101714-owzt2uw",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230414101714-owzt2uw"
					},
					"Children": [
						{
							"ID": "20230414101714-612zfiu",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230414101714-612zfiu"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "Kubernetes"
								},
								{
									"Type": "NodeText",
									"Data": " : v1.13.5"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230414101714-0y2vrce",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230414101714-0y2vrce"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "注意：因为 kubernetes 源码是由 go 语言编写的，所以要编译其源码，需要安装 go 环境，若我们想基于 docker 镜像编译 kubernetes 的话，那么还需要安装 docker 环境。"
				}
			]
		},
		{
			"ID": "20230414101714-islp27s",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230414101714-islp27s"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "3、安装依赖 golang、docker"
				}
			]
		},
		{
			"ID": "20230414101714-hlnhir6",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230414101714-hlnhir6"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "3.1、安装 golang"
				}
			]
		},
		{
			"ID": "20230414101714-sa0y32o",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230414101714-sa0y32o"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "注意：kubernetes "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "1.13"
				},
				{
					"Type": "NodeText",
					"Data": " 版本需要依赖的 go 版本 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "\u0026gt;= 1.11.1"
				},
				{
					"Type": "NodeText",
					"Data": "，所以安装时需选择该版本以上，否则下边编译时会报错终止，提示需要升级 go 版本，这里提供两种方式安装 golang 环境。"
				}
			]
		},
		{
			"ID": "20230414101714-agsd162",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230414101714-agsd162"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "一、直接下载源码安装（注意此方式需要机器网络可以越过墙）"
				}
			]
		},
		{
			"ID": "20230414101714-0l47mhy",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230414101714-0l47mhy"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YXNjcmlwdA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "$ cd /opt \u0026\u0026 wget -c https://dl.google.com/go/go1.11.5.linux-amd64.tar.gz\n$ tar -C /usr/local -xzf go1.11.4.linux-amd64.tar.gz \n$ echo \"export PATH=$PATH:/usr/local/go/bin\" \u003e\u003e /etc/profile\n$ source /etc/profile\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230414101714-hi3xw4s",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230414101714-hi3xw4s"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "二、通过 rpm 包 yum 安装"
				}
			]
		},
		{
			"ID": "20230414101714-v0yrlcw",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230414101714-v0yrlcw"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YXNjcmlwdA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "$ cd /opt \u0026\u0026 wget http://download-ib01.fedoraproject.org/pub/epel/7/x86_64/Packages/g/golang-1.11.5-1.el7.x86_64.rpm\n$ yum -y install golang-1.11.5-1.el7.x86_64.rpm\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230414101714-8bszxey",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230414101714-8bszxey"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "安装完毕后，执行 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "go version"
				},
				{
					"Type": "NodeText",
					"Data": " 能输出对应的版本号，说明安装没有问题。最后，为了方便编译，最好配置一下 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "GOPATH"
				},
				{
					"Type": "NodeText",
					"Data": " 作为 go 执行的工作路径。"
				}
			]
		},
		{
			"ID": "20230414101714-ixo9rlj",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230414101714-ixo9rlj"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YXNjcmlwdA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "$ echo \"GOPATH=/root/go\" \u003e\u003e /etc/profile\n$ source /etc/profile\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230414101714-vaqj50i",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230414101714-vaqj50i"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "3.2、安装 docker"
				}
			]
		},
		{
			"ID": "20230414101714-32z60ag",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230414101714-32z60ag"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "docker 安装非常方便，针对自己系统参照 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "a",
					"TextMarkAHref": "https://docs.docker.com/install/",
					"TextMarkTextContent": "Docker 官网文档"
				},
				{
					"Type": "NodeText",
					"Data": " 安装即可，这里简单操作一下吧！"
				}
			]
		},
		{
			"ID": "20230414101714-37cl5dx",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230414101714-37cl5dx"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "一键式安装方式："
				}
			]
		},
		{
			"ID": "20230414101714-lezwr11",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230414101714-lezwr11"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YXNjcmlwdA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "$ curl -fsSL https://get.docker.com -o get-docker.sh\n$ sudo sh get-docker.sh\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230414101714-gj0iigp",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230414101714-gj0iigp"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "rpm 包 yum 安装方式："
				}
			]
		},
		{
			"ID": "20230414101714-8eowvvz",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230414101714-8eowvvz"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YXNjcmlwdA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "$ wget https://download.docker.com/linux/centos/7/x86_64/stable/Packages/docker-ce-18.06.1.ce-3.el7.x86_64.rpm\n$ yum -y install docker-ce-18.06.1.ce-3.el7.x86_64.rpm\n$ systemctl enable docker\n$ systemctl start docker\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230414101714-4ran757",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230414101714-4ran757"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "yum 源安装方式："
				}
			]
		},
		{
			"ID": "20230414101714-ol638d9",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230414101714-ol638d9"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YXNjcmlwdA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "$ yum install -y yum-utils device-mapper-persistent-data lvm2\n$ yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo\n$ yum install docker-ce docker-ce-cli containerd.io\n$ systemctl enable docker\n$ systemctl start docker\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230414101714-vi5so72",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230414101714-vi5so72"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "安装完毕后，执行 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "docker -v"
				},
				{
					"Type": "NodeText",
					"Data": " 命令能输出对应版本号，说明安装没问题。"
				}
			]
		},
		{
			"ID": "20230414101714-yvo0w5h",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230414101714-yvo0w5h"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "4、二进制可执行文件编译 kubernetes"
				}
			]
		},
		{
			"ID": "20230414101714-o60tofr",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230414101714-o60tofr"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "开始执行编译前，我们需要将 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "a",
					"TextMarkAHref": "https://github.com/kubernetes/kubernetes",
					"TextMarkTextContent": "kubernetes 源码"
				},
				{
					"Type": "NodeText",
					"Data": " 拉取到本地 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "GOPATH"
				},
				{
					"Type": "NodeText",
					"Data": " 工作路径，并指定好 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "release-1.13"
				},
				{
					"Type": "NodeText",
					"Data": " 稳定分支。"
				}
			]
		},
		{
			"ID": "20230414101714-tliamha",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230414101714-tliamha"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YXNjcmlwdA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "$ mkdir -p $GOPATH/src/k8s.io \u0026\u0026 cd $GOPATH/src/k8s.io\n$ git clone  https://github.com/kubernetes/kubernetes -b release-1.13\n$ cd kubernetes\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230414101714-qs4lc6h",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230414101714-qs4lc6h"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "我们从 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "kubernetes/hack/lib/golang.sh"
				},
				{
					"Type": "NodeText",
					"Data": " 代码中可以看到，该脚本会检测当前系统环境来安装对应的必要的服务，默认不指定 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "KUBE_BUILD_PLATFORMS"
				},
				{
					"Type": "NodeText",
					"Data": "（当前构建平台环境类型）的话，它会分别编译多种环境，编译时间很长，而且没有必要。这里我们可以直接修改文件中 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "KUBE_SERVER_PLATFORMS"
				},
				{
					"Type": "NodeText",
					"Data": " "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "KUBE_NODE_PLATFORMS"
				},
				{
					"Type": "NodeText",
					"Data": " "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "KUBE_CLIENT_PLATFORMS"
				},
				{
					"Type": "NodeText",
					"Data": " "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "KUBE_TEST_PLATFORMS"
				},
				{
					"Type": "NodeText",
					"Data": " 配置，只保留当前系统对应环境，例如我们的系统环境为 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "linux/amd64"
				},
				{
					"Type": "NodeText",
					"Data": "。另一种方式就是在编译时，直接指定 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "KUBE_BUILD_PLATFORMS"
				},
				{
					"Type": "NodeText",
					"Data": " 参数即可。编译命令如下："
				}
			]
		},
		{
			"ID": "20230414101714-trj8ud4",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230414101714-trj8ud4"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YXNjcmlwdA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "$ KUBE_BUILD_PLATFORMS=linux/amd64 make all GOFLAGS=-v GOGCFLAGS=\"-N -l\"\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230414101714-990mzsy",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230414101714-990mzsy"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "对参数简单说明一下："
				}
			]
		},
		{
			"ID": "20230414101714-xtylulm",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20230414101714-xtylulm"
			},
			"Children": [
				{
					"ID": "20230414101714-ro5ei9y",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230414101714-ro5ei9y"
					},
					"Children": [
						{
							"ID": "20230414101714-k7qfzgb",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230414101714-k7qfzgb"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "KUBE_BUILD_PLATFORMS=linux/amd64"
								},
								{
									"Type": "NodeText",
									"Data": " 指定当前编译平台环境类型为 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "linux/amd64"
								},
								{
									"Type": "NodeText",
									"Data": "。"
								}
							]
						}
					]
				},
				{
					"ID": "20230414101714-y46vnea",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230414101714-y46vnea"
					},
					"Children": [
						{
							"ID": "20230414101714-3r8hahe",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230414101714-3r8hahe"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "make all"
								},
								{
									"Type": "NodeText",
									"Data": " 表示在本地环境中编译所有组件。"
								}
							]
						}
					]
				},
				{
					"ID": "20230414101714-ko3eui4",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230414101714-ko3eui4"
					},
					"Children": [
						{
							"ID": "20230414101714-sdo8r47",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230414101714-sdo8r47"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "GOFLAGS=-v"
								},
								{
									"Type": "NodeText",
									"Data": " 编译参数，开启 verbose 日志。"
								}
							]
						}
					]
				},
				{
					"ID": "20230414101714-ftbr5ts",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230414101714-ftbr5ts"
					},
					"Children": [
						{
							"ID": "20230414101714-5egjfx7",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230414101714-5egjfx7"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "GOGCFLAGS=\u0026quot;-N -l\u0026quot;"
								},
								{
									"Type": "NodeText",
									"Data": " 编译参数，禁止编译优化和内联，减小可执行程序大小。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230414101714-69a28wo",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230414101714-69a28wo"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "注意：执行以上命令时，需要机器可用内存在 4G 左右，否则编译时会报内存不够错误。若我们只想编译某个组件，例如，只想编译 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "kube-apiserver"
				},
				{
					"Type": "NodeText",
					"Data": " ，那么可以执行 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "make WHAT=cmd/kube-apiserver"
				},
				{
					"Type": "NodeText",
					"Data": " 命令。这里可选组件有很多，详细可参考 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "kubernetes/cmd/"
				},
				{
					"Type": "NodeText",
					"Data": " 目录下所有组件。"
				}
			]
		},
		{
			"ID": "20230414101714-pg1hc44",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230414101714-pg1hc44"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "稍等片刻，全部组件编译耗时较长，执行完毕后，二进制可执行文件默认生成到 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "kubernetes/_output/bin"
				},
				{
					"Type": "NodeText",
					"Data": " 目录下。"
				}
			]
		},
		{
			"ID": "20230414101714-fssxe4v",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230414101714-fssxe4v"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YXNjcmlwdA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "$ ll _output/bin/\ntotal 1372584\n-rwxr-xr-x 1 root root  39777728 Feb 20 16:32 apiextensions-apiserver\n-rwxr-xr-x 1 root root  89522240 Feb 20 16:32 cloud-controller-manager\n-rwxr-xr-x 1 root root   5800256 Feb 20 16:09 conversion-gen\n-rwxr-xr-x 1 root root   5791968 Feb 20 16:08 deepcopy-gen\n-rwxr-xr-x 1 root root   5783808 Feb 20 16:09 defaulter-gen\n-rwxr-xr-x 1 root root  38382720 Feb 20 16:32 gendocs\n-rwxr-xr-x 1 root root 174569288 Feb 20 16:32 genkubedocs\n-rwxr-xr-x 1 root root 181003752 Feb 20 16:32 genman\n-rwxr-xr-x 1 root root   3901568 Feb 20 16:32 genswaggertypedocs\n-rwxr-xr-x 1 root root  38382720 Feb 20 16:32 genyaml\n-rwxr-xr-x 1 root root   8126240 Feb 20 16:32 ginkgo\n-rwxr-xr-x 1 root root   4460824 Feb 20 16:08 go2make\n-rwxr-xr-x 1 root root   2005984 Feb 20 16:09 go-bindata\n-rwxr-xr-x 1 root root 177541000 Feb 20 16:32 hyperkube\n-rwxr-xr-x 1 root root  36350048 Feb 20 16:32 kubeadm\n-rwxr-xr-x 1 root root 138505440 Feb 20 16:32 kube-apiserver\n-rwxr-xr-x 1 root root 103774080 Feb 20 16:32 kube-controller-manager\n-rwxr-xr-x 1 root root  39189984 Feb 20 16:32 kubectl\n-rwxr-xr-x 1 root root 112883720 Feb 20 16:32 kubelet\n-rwxr-xr-x 1 root root 110770664 Feb 20 16:32 kubemark\n-rwxr-xr-x 1 root root  34775392 Feb 20 16:32 kube-proxy\n-rwxr-xr-x 1 root root  37230848 Feb 20 16:32 kube-scheduler\n-rwxr-xr-x 1 root root   4975168 Feb 20 16:32 linkcheck\n-rwxr-xr-x 1 root root   1599264 Feb 20 16:32 mounter\n-rwxr-xr-x 1 root root  10367840 Feb 20 16:09 openapi-gen\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230414101714-7ye6ixl",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230414101714-7ye6ixl"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "上边讲到单独对某个组件执行编译，除了上述办法之外，还可以进入到 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "kubernetes/cmd/"
				},
				{
					"Type": "NodeText",
					"Data": " 目录下对应组件下执行，例如我们编译 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "kube-apiserver"
				},
				{
					"Type": "NodeText",
					"Data": " 组件。"
				}
			]
		},
		{
			"ID": "20230414101714-se2sxqd",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230414101714-se2sxqd"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YXNjcmlwdA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "$ cd kubernetes/cmd/kube-apiserver\n$ go build -v\n$ ls \napiserver.go  app  kube-apiserver  BUILD  OWNERS\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230414101714-vgw81kf",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230414101714-vgw81kf"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "5、docker 镜像编译 kubernetes"
				}
			]
		},
		{
			"ID": "20230414101714-wc93czz",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230414101714-wc93czz"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "docker 镜像编译 kubernetes，可以编译出各核心组件二进制文件以及对应的镜像文件，这里得提一下，由于国内网络的问题，想顺利的安装 kubernetes，依赖镜像拉取问题比较麻烦，之前文章也提到过，可以通过 Github 配合 DockerHub 的 Auto build 功能，将镜像推送到 DockerHub，然后本地拉取后修改 tag 名称，操作有点麻烦，不过好歹解决了我们镜像拉取不到的问题。现在我们可以本地编译出 kubernetes 依赖的镜像了，那就很方便了，有木有。"
				}
			]
		},
		{
			"ID": "20230414101714-emlet6c",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230414101714-emlet6c"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "具体涉及到的代码目录为 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "kubernetes/build"
				},
				{
					"Type": "NodeText",
					"Data": "，这里主要包含几个核心基础镜像的制作，包括 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "kube-cross"
				},
				{
					"Type": "NodeText",
					"Data": "、"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "pause-amd64"
				},
				{
					"Type": "NodeText",
					"Data": "、"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "debian-iptables-amd64"
				},
				{
					"Type": "NodeText",
					"Data": "、"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "debian-base-amd64"
				},
				{
					"Type": "NodeText",
					"Data": "、"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "debian-hyperkube-base-amd64"
				},
				{
					"Type": "NodeText",
					"Data": "。这里我偷个懒，先不挨个构建了，当然依旧可以通过上边提到的途径解决，直接拿别人构建好的镜像，拉取后修改 tag 即可。"
				}
			]
		},
		{
			"ID": "20230414101714-z5nkl03",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230414101714-z5nkl03"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YXNjcmlwdA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "$ docker pull xiaoxu780/pause-amd64:3.1\n$ docker pull xiaoxu780/kube-cross:v1.11.2-1\n$ docker pull xiaoxu780/debian-base-amd64:0.4.0\n$ docker pull xiaoxu780/debian-iptables-amd64:v11.0\n$ docker pull xiaoxu780/debian-hyperkube-base-amd64:0.12.0\n\n$ docker tag xiaoxu780/pause-amd64:3.1 k8s.gcr.io/pause-amd64:3.1\n$ docker tag xiaoxu780/kube-cross:v1.11.2-1 k8s.gcr.io/kube-cross:v1.11.5-1\n$ docker tag xiaoxu780/debian-base-amd64:0.4.0 k8s.gcr.io/debian-base-amd64:0.4.0\n$ docker tag xiaoxu780/debian-iptables-amd64:v11.0 k8s.gcr.io/debian-iptables-amd64:v11.0\n$ docker tag xiaoxu780/debian-hyperkube-base-amd64:0.12.0 k8s.gcr.io/debian-hyperkube-base-amd64:0.12.0\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230414101714-9f43lr1",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230414101714-9f43lr1"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "注意：这里通过 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "kube-cross"
				},
				{
					"Type": "NodeText",
					"Data": " 组件有指定的版本，可以从 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "kubernetes/build/build-image/cross/VERSION"
				},
				{
					"Type": "NodeText",
					"Data": " 文件得到，我这里显示是 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "v1.11.5-1"
				},
				{
					"Type": "NodeText",
					"Data": "，跟上边提供的版本不一致，不过没关系，直接修改为该版本 tag 亲测没有问题的。"
				}
			]
		},
		{
			"ID": "20230414101714-juo9lml",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230414101714-juo9lml"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "依赖的基础镜像本地已经有了，接下来需要修改构建策略，忽略 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "--pull"
				},
				{
					"Type": "NodeText",
					"Data": " 参数，不然每次构建还是会去外网拉取基础镜像，要让它直接读取本地镜像。修改 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "kubernetes/build/lib/release.sh"
				},
				{
					"Type": "NodeText",
					"Data": " 文件如下："
				}
			]
		},
		{
			"ID": "20230414101714-rsg3lej",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230414101714-rsg3lej"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YXNjcmlwdA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "\"${DOCKER[@]}\" build --pull -q -t \"${docker_image_tag}\" \"${docker_build_path}\" \u003e/dev/null\n修改为\n\"${DOCKER[@]}\" build -q -t \"${docker_image_tag}\" \"${docker_build_path}\" \u003e/dev/null\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230414101714-xgjda73",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230414101714-xgjda73"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "其次修改 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "kubernetes/hack/lib/version.sh"
				},
				{
					"Type": "NodeText",
					"Data": " 文件，将变量 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "KUBE_GIT_TREE_STATE=\u0026quot;dirty\u0026quot;"
				},
				{
					"Type": "NodeText",
					"Data": " 修改为 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "KUBE_GIT_TREE_STATE=\u0026quot;clean\u0026quot;"
				},
				{
					"Type": "NodeText",
					"Data": "，"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "dirty"
				},
				{
					"Type": "NodeText",
					"Data": " 表示 Git 提交 ID 之后的源代码有更改，"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "clean"
				},
				{
					"Type": "NodeText",
					"Data": " 表示 Git 提交 ID 之后没有更改，为了确保版本号干净，都修改为 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "clean"
				},
				{
					"Type": "NodeText",
					"Data": "。"
				}
			]
		},
		{
			"ID": "20230414101714-cp1d48h",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230414101714-cp1d48h"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "接下来直接执行如下编译命令："
				}
			]
		},
		{
			"ID": "20230414101714-mittqu0",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230414101714-mittqu0"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YXNjcmlwdA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "$ KUBE_BUILD_PLATFORMS=linux/amd64 KUBE_BUILD_CONFORMANCE=n KUBE_BUILD_HYPERKUBE=n make release-images GOFLAGS=-v GOGCFLAGS=\"-N -l\"\n+++ [0221 10:48:26] Verifying Prerequisites....\n+++ [0221 10:48:27] Building Docker image kube-build:build-d0824d4b8f-5-v1.11.5-1\n+++ [0221 10:48:49] Creating data container kube-build-data-d0824d4b8f-5-v1.11.5-1\n+++ [0221 10:48:53] Syncing sources to container\n+++ [0221 10:49:11] Running build command...\n......\n+++ [0221 10:56:08] Syncing out of container\n+++ [0221 10:56:13] Building images: linux-amd64\n+++ [0221 10:56:14] Starting docker build for image: cloud-controller-manager-amd64\n+++ [0221 10:56:14] Starting docker build for image: kube-apiserver-amd64\n+++ [0221 10:56:14] Starting docker build for image: kube-controller-manager-amd64\n+++ [0221 10:56:14] Starting docker build for image: kube-scheduler-amd64\n+++ [0221 10:56:14] Starting docker build for image: kube-proxy-amd64\n+++ [0221 10:56:24] Deleting docker image k8s.gcr.io/kube-scheduler:v1.13.4-beta.0.12_4ef32ffb4e7c35\n+++ [0221 10:56:25] Deleting docker image k8s.gcr.io/kube-proxy:v1.13.4-beta.0.12_4ef32ffb4e7c35\n+++ [0221 10:56:32] Deleting docker image k8s.gcr.io/cloud-controller-manager:v1.13.4-beta.0.12_4ef32ffb4e7c35\n+++ [0221 10:56:33] Deleting docker image k8s.gcr.io/kube-controller-manager:v1.13.4-beta.0.12_4ef32ffb4e7c35\n+++ [0221 10:56:33] Deleting docker image k8s.gcr.io/kube-apiserver:v1.13.4-beta.0.12_4ef32ffb4e7c35\n+++ [0221 10:56:33] Docker builds done\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230414101714-yhwx3er",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230414101714-yhwx3er"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "说明一下："
				}
			]
		},
		{
			"ID": "20230414101714-1zrhr68",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20230414101714-1zrhr68"
			},
			"Children": [
				{
					"ID": "20230414101714-wy76bgq",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230414101714-wy76bgq"
					},
					"Children": [
						{
							"ID": "20230414101714-sy1qqw9",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230414101714-sy1qqw9"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "UBE_BUILD_CONFORMANCE=n"
								},
								{
									"Type": "NodeText",
									"Data": " 和 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "KUBE_BUILD_HYPERKUBE=n"
								},
								{
									"Type": "NodeText",
									"Data": " 参数配置是否构建 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "hyperkube-amd64"
								},
								{
									"Type": "NodeText",
									"Data": " 和 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "conformance-amd64"
								},
								{
									"Type": "NodeText",
									"Data": " 镜像，默认是 y 构建，这里设置为 n 暂时不需要构建了。"
								}
							]
						}
					]
				},
				{
					"ID": "20230414101714-i9tg5r5",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230414101714-i9tg5r5"
					},
					"Children": [
						{
							"ID": "20230414101714-ga2gpdz",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230414101714-ga2gpdz"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "make release-images"
								},
								{
									"Type": "NodeText",
									"Data": " 表示执行编译并生成镜像 tar 包。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230414101714-a2abhuk",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230414101714-a2abhuk"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "稍等片刻，编译的 kubernetes 组件 docker 镜像以 tar 包的形式发布在 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "kubernetes/_output/release-tars/amd64"
				},
				{
					"Type": "NodeText",
					"Data": " 目录中。"
				}
			]
		},
		{
			"ID": "20230414101714-81rq28b",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230414101714-81rq28b"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YXNjcmlwdA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "$ ll _output/release-images/amd64/\ntotal 611988\n-rw-r--r-- 2 root root 133416960 Feb 21 10:56 cloud-controller-manager.tar\n-rw-r--r-- 2 root root 182395904 Feb 21 10:56 kube-apiserver.tar\n-rw-r--r-- 2 root root 147664384 Feb 21 10:56 kube-controller-manager.tar\n-rw-r--r-- 2 root root  82071552 Feb 21 10:56 kube-proxy.tar\n-rw-r--r-- 2 root root  81121280 Feb 21 10:56 kube-scheduler.tar\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230414101714-yrklai8",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230414101714-yrklai8"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "生成的核心组件二进制可执行文件以及镜像，在 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "kubernetes/_output/release-stage/server/linux-amd64/kubernetes/server/bin/"
				},
				{
					"Type": "NodeText",
					"Data": " 目录可以找到。"
				}
			]
		},
		{
			"ID": "20230414101714-izt07sv",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230414101714-izt07sv"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YXNjcmlwdA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "$ ll _output/release-stage/server/linux-amd64/kubernetes/server/bin/\ntotal 1006368\n-rwxr-xr-x 1 root root  89526336 Feb 21 10:56 cloud-controller-manager\n-rw-r--r-- 1 root root        33 Feb 21 10:56 cloud-controller-manager.docker_tag\n-rw-r--r-- 2 root root 133416960 Feb 21 10:56 cloud-controller-manager.tar\n-rwxr-xr-x 1 root root 138505472 Feb 21 10:56 kube-apiserver\n-rw-r--r-- 1 root root        33 Feb 21 10:56 kube-apiserver.docker_tag\n-rw-r--r-- 2 root root 182395904 Feb 21 10:56 kube-apiserver.tar\n-rwxr-xr-x 1 root root 103774112 Feb 21 10:56 kube-controller-manager\n-rw-r--r-- 1 root root        33 Feb 21 10:56 kube-controller-manager.docker_tag\n-rw-r--r-- 2 root root 147664384 Feb 21 10:56 kube-controller-manager.tar\n-rwxr-xr-x 1 root root  34775392 Feb 21 10:56 kube-proxy\n-rw-r--r-- 1 root root        33 Feb 21 10:56 kube-proxy.docker_tag\n-rw-r--r-- 2 root root  82071552 Feb 21 10:56 kube-proxy.tar\n-rwxr-xr-x 1 root root  37230848 Feb 21 10:56 kube-scheduler\n-rw-r--r-- 1 root root        33 Feb 21 10:56 kube-scheduler.docker_t\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230414101714-q3lrd1o",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230414101714-q3lrd1o"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "这些镜像 tar 包是可以直接用的，这下再也不用担心镜像拉不下来了。"
				}
			]
		},
		{
			"ID": "20230414101714-awkfuh3",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230414101714-awkfuh3"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "6、如何使用编译产物"
				}
			]
		},
		{
			"ID": "20230414101714-2nbt3dm",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230414101714-2nbt3dm"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "之前我们使用 minikube 或 kubeadm 方式安装 kubernetes，都是基于 docker 镜像方式运行的，现在本地已经有镜像 tar 包了，只需要导入即可。"
				}
			]
		},
		{
			"ID": "20230414101714-n71ljnq",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230414101714-n71ljnq"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YXNjcmlwdA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "$ docker load -i kube-apiserver.tar\n8b4af753a2e6: Loading layer  138.5MB/138.5MB\nLoaded image: k8s.gcr.io/kube-apiserver:v1.13.4-beta.0.12_4ef32ffb4e7c35\n$ docker load -i kube-controller-manager.tar\nb6bc9feeea3e: Loading layer  103.8MB/103.8MB\nLoaded image: k8s.gcr.io/kube-controller-manager:v1.13.4-beta.0.12_4ef32ffb4e7c35\n$ docker load -i kube-proxy.tar\nf809931d55f8: Loading layer  34.78MB/34.78MB\nLoaded image: k8s.gcr.io/kube-proxy:v1.13.4-beta.0.12_4ef32ffb4e7c35\n$ docker load -i kube-scheduler.tar\n08c5e224b023: Loading layer  37.23MB/37.23MB\nLoaded image: k8s.gcr.io/kube-scheduler:v1.13.4-beta.0.12_4ef32ffb4e7c35\n\n$ docker images | grep kube\nREPOSITORY                               TAG                                IMAGE ID            CREATED             SIZE\nk8s.gcr.io/kube-apiserver                v1.13.4-beta.0.12_4ef32ffb4e7c35   478c9f2cf9b0        7 hours ago         181MB\nk8s.gcr.io/kube-controller-manager       v1.13.4-beta.0.12_4ef32ffb4e7c35   2095dd7895ac        7 hours ago         146MB\nk8s.gcr.io/kube-proxy                    v1.13.4-beta.0.12_4ef32ffb4e7c35   b22db5302318        7 hours ago         80.2MB\nk8s.gcr.io/kube-scheduler                v1.13.4-beta.0.12_4ef32ffb4e7c35   d17edffb4bca        7 hours ago         79.6MB\nkube-build                               build-d0824d4b8f-5-v1.11.5-1       1b02b2eeeffd        7 hours ago         2.31GB\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230414101714-2wl7y4f",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230414101714-2wl7y4f"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "对于二进制可执行文件，亦可直接使用，具体可参考 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "a",
					"TextMarkAHref": "https://github.com/gjmzj/kubeasz",
					"TextMarkTextContent": " kubeasz 项目"
				},
				{
					"Type": "NodeText",
					"Data": "，该项目致力于提供快速部署高可用 k8s 集群的工具，它基于二进制可执行程序方式部署和利用 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "ansible-playbook"
				},
				{
					"Type": "NodeText",
					"Data": " 实现自动化安装的。"
				}
			]
		},
		{
			"ID": "20230414101714-7jkxt33",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230414101714-7jkxt33"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "参考资料"
				}
			]
		},
		{
			"ID": "20230414101714-vpt8vk4",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20230414101714-vpt8vk4"
			},
			"Children": [
				{
					"ID": "20230414101714-jb0o9pj",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230414101714-jb0o9pj"
					},
					"Children": [
						{
							"ID": "20230414101714-wwlk4lf",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230414101714-wwlk4lf"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "a",
									"TextMarkAHref": "https://github.com/kubernetes/kubernetes/tree/master/build/",
									"TextMarkTextContent": "kubernetes build"
								}
							]
						}
					]
				},
				{
					"ID": "20230414101714-7mjhqq6",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230414101714-7mjhqq6"
					},
					"Children": [
						{
							"ID": "20230414101714-qds5bwf",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230414101714-qds5bwf"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "a",
									"TextMarkAHref": "https://xuchao918.github.io/2019/01/26/%E7%BC%96%E8%AF%91%E5%92%8C%E8%BF%90%E8%A1%8CKubernetes%E6%BA%90%E7%A0%81/",
									"TextMarkTextContent": "编译和运行Kubernetes源码"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230414102738-3cqou9s",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230414102738-3cqou9s",
				"updated": "20230414102738"
			}
		}
	]
}