{
	"ID": "20230110102554-3to6372",
	"Spec": "1",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20230110102554-3to6372",
		"title": "Containerd 的前世今生和保姆级入门教程 - 米开朗基杨 - 博客园",
		"updated": "20230110102554"
	},
	"Children": [
		{
			"ID": "20230110102554-dx6flea",
			"Type": "NodeThematicBreak",
			"Properties": {
				"id": "20230110102554-dx6flea"
			}
		},
		{
			"ID": "20230110102554-p9pyqef",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20230110102554-p9pyqef"
			},
			"Children": [
				{
					"ID": "20230110102554-u3ea9nx",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230110102554-u3ea9nx"
					},
					"Children": [
						{
							"ID": "20230110102554-5bohhs7",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230110102554-5bohhs7"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "a",
									"TextMarkAHref": "https://www.cnblogs.com/ryanyangcs/p/14168400.html",
									"TextMarkTextContent": "https://www.cnblogs.com/ryanyangcs/p/14168400.html"
								}
							]
						}
					]
				},
				{
					"ID": "20230110102554-c7u8mos",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230110102554-c7u8mos"
					},
					"Children": [
						{
							"ID": "20230110102554-lnyvcry",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230110102554-lnyvcry"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "原文链接：https://fuckcloudnative.io/posts/getting-started-with-containerd/ 1. Containerd 的前世今生 很久以前，Dock"
								}
							]
						}
					]
				},
				{
					"ID": "20230110102554-1dpft5l",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230110102554-1dpft5l"
					},
					"Children": [
						{
							"ID": "20230110102554-sz8vbge",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230110102554-sz8vbge"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "2023-01-10 10:25:54"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230110102554-y6hi3q2",
			"Type": "NodeThematicBreak",
			"Properties": {
				"id": "20230110102554-y6hi3q2"
			}
		},
		{
			"ID": "20230110102554-ejc9tvx",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20230110102554-ejc9tvx"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20230110102554-yier6w0",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20230110102554-yier6w0"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "原文链接："
						},
						{
							"Type": "NodeTextMark",
							"TextMarkType": "a",
							"TextMarkAHref": "https://fuckcloudnative.io/posts/getting-started-with-containerd/",
							"TextMarkTextContent": "https://fuckcloudnative.io/posts/getting-started-with-containerd/"
						}
					]
				}
			]
		},
		{
			"ID": "20230110102554-t3e6gqx",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230110102554-t3e6gqx"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "1. Containerd 的前世今生"
				}
			]
		},
		{
			"ID": "20230110102554-p4yk9ha",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230110102554-p4yk9ha"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "很久以前，Docker 强势崛起，以“镜像”这个大招席卷全球，对其他容器技术进行致命的降维打击，使其毫无招架之力，就连 Google 也不例外。Google 为了不被拍死在沙滩上，被迫拉下脸面（当然，跪舔是不可能的），希望 Docker 公司和自己联合推进一个开源的容器运行时作为 Docker 的核心依赖，不然就走着瞧。Docker 公司觉得自己的智商被侮辱了，走着瞧就走着瞧，谁怕谁啊！"
				}
			]
		},
		{
			"ID": "20230110102554-ugbe9u1",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230110102554-ugbe9u1"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "很明显，Docker 公司的这个决策断送了自己的大好前程，造成了今天的悲剧。"
				}
			]
		},
		{
			"ID": "20230110102554-gseczxf",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230110102554-gseczxf"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "紧接着，Google 联合 Red Hat、IBM 等几位巨佬连哄带骗忽悠 Docker 公司将 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "libcontainer"
				},
				{
					"Type": "NodeText",
					"Data": " 捐给中立的社区（OCI，Open Container Intiative），并改名为 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "runc"
				},
				{
					"Type": "NodeText",
					"Data": "，不留一点 Docker 公司的痕迹~~"
				}
			]
		},
		{
			"ID": "20230110102554-s6sga2e",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230110102554-s6sga2e"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "这还不够，为了彻底扭转 Docker 一家独大的局面，几位大佬又合伙成立了一个基金会叫 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "CNCF"
				},
				{
					"Type": "NodeText",
					"Data": "（Cloud Native Computing Fundation），这个名字想必大家都很熟了，我就不详细介绍了。CNCF 的目标很明确，既然在当前的维度上干不过 Docker，干脆往上爬，升级到大规模容器编排的维度，以此来击败 Docker。"
				}
			]
		},
		{
			"ID": "20230110102554-iz3k4kl",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230110102554-iz3k4kl"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Docker 公司当然不甘示弱，搬出了 Swarm 和 Kubernetes 进行 PK，最后的结局大家都知道了，Swarm 战败。然后 Docker 公司耍了个小聪明，将自己的核心依赖 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "Containerd"
				},
				{
					"Type": "NodeText",
					"Data": " 捐给了 CNCF，以此来标榜 Docker 是一个 PaaS 平台。"
				}
			]
		},
		{
			"ID": "20230110102554-9drbmyd",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230110102554-9drbmyd"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "很明显，这个小聪明又大大加速了自己的灭亡。"
				}
			]
		},
		{
			"ID": "20230110102554-mivocga",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230110102554-mivocga"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://img2020.cnblogs.com/other/1737323/202012/1737323-20201221160751721-2015071930.jpg"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20230110102554-hzqcqpn",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230110102554-hzqcqpn"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "巨佬们心想，想当初想和你合作搞个中立的核心运行时，你死要面子活受罪，就是不同意，好家伙，现在自己搞了一个，还捐出来了，这是什么操作？也罢，这倒省事了，我就直接拿 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "Containerd"
				},
				{
					"Type": "NodeText",
					"Data": " 来做文章吧。"
				}
			]
		},
		{
			"ID": "20230110102554-lwykanu",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230110102554-lwykanu"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "首先呢，为了表示 Kubernetes 的中立性，当然要搞个标准化的容器运行时接口，只要适配了这个接口的容器运行时，都可以和我一起玩耍哦，第一个支持这个接口的当然就是 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "Containerd"
				},
				{
					"Type": "NodeText",
					"Data": " 啦。至于这个接口的名字，大家应该都知道了，它叫 CRI（Container Runntime Interface）。"
				}
			]
		},
		{
			"ID": "20230110102554-0a8y6b1",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230110102554-0a8y6b1"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "这样还不行，为了蛊惑 Docker 公司，Kubernetes 暂时先委屈自己，专门在自己的组件中集成了一个 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "shim"
				},
				{
					"Type": "NodeText",
					"Data": "（你可以理解为垫片），用来将 CRI 的调用翻译成 Docker 的 API，让 Docker 也能和自己愉快地玩耍，温水煮青蛙，养肥了再杀。。。"
				}
			]
		},
		{
			"ID": "20230110102554-8p82rl4",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230110102554-8p82rl4"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "就这样，Kubernetes 一边假装和 Docker 愉快玩耍，一边背地里不断优化 Containerd 的健壮性以及和 CRI 对接的丝滑性。现在 Containerd 的翅膀已经完全硬了，是时候卸下我的伪装，和 Docker say bye bye 了。后面的事情大家也都知道了~~"
				}
			]
		},
		{
			"ID": "20230110102554-ljvm4ey",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230110102554-ljvm4ey"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Docker 这门技术成功了，Docker 这个公司却失败了。"
				}
			]
		},
		{
			"ID": "20230110102554-gkq4hio",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230110102554-gkq4hio"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "2. Containerd 架构"
				}
			]
		},
		{
			"ID": "20230110102554-arrshts",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230110102554-arrshts"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "时至今日，Containerd 已经变成一个工业级的容器运行时了，连口号都有了：超简单！超健壮！可移植性超强！"
				}
			]
		},
		{
			"ID": "20230110102554-ecrgvjj",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230110102554-ecrgvjj"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "当然，为了让 Docker 以为自己不会抢饭碗，Containerd 声称自己的设计目的主要是为了嵌入到一个更大的系统中（暗指 Kubernetes），而不是直接由开发人员或终端用户使用。"
				}
			]
		},
		{
			"ID": "20230110102554-pzvq7oh",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230110102554-pzvq7oh"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "事实上呢，Containerd 现在基本上啥都能干了，开发人员或者终端用户可以在宿主机中管理完整的容器生命周期，包括容器镜像的传输和存储、容器的执行和管理、存储和网络等。大家可以考虑学起来了。"
				}
			]
		},
		{
			"ID": "20230110102554-x713ptt",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230110102554-x713ptt"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "学习 Containerd 最好的时机是关注公众号 云原生实验室 后，其次是现在，看完了再关注公众号也不迟😆。"
				}
			]
		},
		{
			"ID": "20230110102554-an3acz0",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230110102554-an3acz0"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "先来看看 Containerd 的架构："
				}
			]
		},
		{
			"ID": "20230110102554-omffb19",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230110102554-omffb19"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://img2020.cnblogs.com/other/1737323/202012/1737323-20201221160751921-173795697.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20230110102554-htdwn5u",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230110102554-htdwn5u"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "可以看到 Containerd 仍然采用标准的 C/S 架构，服务端通过 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "GRPC"
				},
				{
					"Type": "NodeText",
					"Data": " 协议提供稳定的 API，客户端通过调用服务端的 API 进行高级的操作。"
				}
			]
		},
		{
			"ID": "20230110102554-hhj49by",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230110102554-hhj49by"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "为了解耦，Containerd 将不同的职责划分给不同的组件，每个组件就相当于一个 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "子系统"
				},
				{
					"Type": "NodeText",
					"Data": " （subsystem）。连接不同子系统的组件被称为模块。"
				}
			]
		},
		{
			"ID": "20230110102554-9aam6x9",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230110102554-9aam6x9"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "总体上 Containerd 被划分为两个子系统："
				}
			]
		},
		{
			"ID": "20230110102554-7xs9rxl",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20230110102554-7xs9rxl"
			},
			"Children": [
				{
					"ID": "20230110102554-lbuepn8",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230110102554-lbuepn8"
					},
					"Children": [
						{
							"ID": "20230110102554-fg2h1pf",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230110102554-fg2h1pf"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "Bundle"
								},
								{
									"Type": "NodeText",
									"Data": " : 在 Containerd 中，"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Bundle"
								},
								{
									"Type": "NodeText",
									"Data": " 包含了配置、元数据和根文件系统数据，你可以理解为容器的文件系统。而 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "Bundle 子系统"
								},
								{
									"Type": "NodeText",
									"Data": "允许用户从镜像中提取和打包 Bundles。"
								}
							]
						}
					]
				},
				{
					"ID": "20230110102554-o0fu3p6",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230110102554-o0fu3p6"
					},
					"Children": [
						{
							"ID": "20230110102554-sc53jsa",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230110102554-sc53jsa"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "Runtime"
								},
								{
									"Type": "NodeText",
									"Data": " : Runtime 子系统用来执行 Bundles，比如创建容器。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230110102554-79eppfe",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230110102554-79eppfe"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "其中，每一个子系统的行为都由一个或多个"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "模块"
				},
				{
					"Type": "NodeText",
					"Data": "协作完成（架构图中的 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "Core"
				},
				{
					"Type": "NodeText",
					"Data": " 部分）。每一种类型的模块都以"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "插件"
				},
				{
					"Type": "NodeText",
					"Data": "的形式集成到 Containerd 中，而且插件之间是相互依赖的。例如，上图中的每一个长虚线的方框都表示一种类型的插件，包括 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "Service Plugin"
				},
				{
					"Type": "NodeText",
					"Data": "、"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "Metadata Plugin"
				},
				{
					"Type": "NodeText",
					"Data": "、"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "GC Plugin"
				},
				{
					"Type": "NodeText",
					"Data": "、"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "Runtime Plugin"
				},
				{
					"Type": "NodeText",
					"Data": " 等，其中 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "Service Plugin"
				},
				{
					"Type": "NodeText",
					"Data": " 又会依赖 Metadata Plugin、GC Plugin 和 Runtime Plugin。每一个小方框都表示一个细分的插件，例如 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "Metadata Plugin"
				},
				{
					"Type": "NodeText",
					"Data": " 依赖 Containers Plugin、Content Plugin 等。 总之，万物皆插件，插件就是模块，模块就是插件。"
				}
			]
		},
		{
			"ID": "20230110102554-1dndoj5",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230110102554-1dndoj5"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://img2020.cnblogs.com/other/1737323/202012/1737323-20201221160752165-205512444.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20230110102554-6jp0jki",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230110102554-6jp0jki"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "这里介绍几个常用的插件："
				}
			]
		},
		{
			"ID": "20230110102554-71vits3",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20230110102554-71vits3"
			},
			"Children": [
				{
					"ID": "20230110102554-gd3aqhg",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230110102554-gd3aqhg"
					},
					"Children": [
						{
							"ID": "20230110102554-shz1ug2",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230110102554-shz1ug2"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "Content Plugin"
								},
								{
									"Type": "NodeText",
									"Data": " : 提供对镜像中可寻址内容的访问，所有不可变的内容都被存储在这里。"
								}
							]
						}
					]
				},
				{
					"ID": "20230110102554-663rpb6",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230110102554-663rpb6"
					},
					"Children": [
						{
							"ID": "20230110102554-x7lo0lj",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230110102554-x7lo0lj"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "Snapshot Plugin"
								},
								{
									"Type": "NodeText",
									"Data": " : 用来管理容器镜像的文件系统快照。镜像中的每一个 layer 都会被解压成文件系统快照，类似于 Docker 中的 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "graphdriver"
								},
								{
									"Type": "NodeText",
									"Data": "。"
								}
							]
						}
					]
				},
				{
					"ID": "20230110102554-hrj9iwy",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230110102554-hrj9iwy"
					},
					"Children": [
						{
							"ID": "20230110102554-tca2bcy",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230110102554-tca2bcy"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "Metrics"
								},
								{
									"Type": "NodeText",
									"Data": " : 暴露各个组件的监控指标。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230110102554-jfbktug",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230110102554-jfbktug"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "从总体来看，Containerd 被分为三个大块："
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "Storage"
				},
				{
					"Type": "NodeText",
					"Data": "、"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "Metadata"
				},
				{
					"Type": "NodeText",
					"Data": " 和 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "Runtime"
				},
				{
					"Type": "NodeText",
					"Data": "，可以将上面的架构图提炼一下："
				}
			]
		},
		{
			"ID": "20230110102554-wi3vipy",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230110102554-wi3vipy"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://img2020.cnblogs.com/other/1737323/202012/1737323-20201221160752591-1078673943.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20230110102554-zx2f9st",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230110102554-zx2f9st"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "这是使用 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "a",
					"TextMarkAHref": "https://github.com/estesp/bucketbench",
					"TextMarkTextContent": "bucketbench"
				},
				{
					"Type": "NodeText",
					"Data": " 对 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "Docker"
				},
				{
					"Type": "NodeText",
					"Data": "、"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "crio"
				},
				{
					"Type": "NodeText",
					"Data": " 和 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "Containerd"
				},
				{
					"Type": "NodeText",
					"Data": " 的性能测试结果，包括启动、停止和删除容器，以比较它们所耗的时间："
				}
			]
		},
		{
			"ID": "20230110102554-3rzpd7z",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230110102554-3rzpd7z"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://img2020.cnblogs.com/other/1737323/202012/1737323-20201221160752930-1628301782.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20230110102554-0si3h46",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230110102554-0si3h46"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "可以看到 Containerd 在各个方面都表现良好，总体性能还是优越于 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "Docker"
				},
				{
					"Type": "NodeText",
					"Data": " 和 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "crio"
				},
				{
					"Type": "NodeText",
					"Data": " 的。"
				}
			]
		},
		{
			"ID": "20230110102554-408pa4l",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230110102554-408pa4l"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "3. Containerd 安装"
				}
			]
		},
		{
			"ID": "20230110102554-6vlsa39",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230110102554-6vlsa39"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "了解了 Containerd 的概念后，就可以动手安装体验一把了。本文的演示环境为 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "Ubuntu 18.04"
				},
				{
					"Type": "NodeText",
					"Data": "。"
				}
			]
		},
		{
			"ID": "20230110102554-twe2ers",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230110102554-twe2ers"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "安装依赖"
				}
			]
		},
		{
			"ID": "20230110102554-z7tfj6h",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230110102554-z7tfj6h"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "为 seccomp 安装依赖："
				}
			]
		},
		{
			"ID": "20230110102554-vqqbn3l",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230110102554-vqqbn3l"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YmFzaA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "🐳  → sudo apt-get update\n🐳  → sudo apt-get install libseccomp2\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230110102554-5i093fu",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230110102554-5i093fu"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "下载并解压 Containerd 程序"
				}
			]
		},
		{
			"ID": "20230110102554-x0f409e",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230110102554-x0f409e"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Containerd 提供了两个压缩包，一个叫 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "containerd-${VERSION}.${OS}-${ARCH}.tar.gz"
				},
				{
					"Type": "NodeText",
					"Data": "，另一个叫 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "cri-containerd-${VERSION}.${OS}-${ARCH}.tar.gz"
				},
				{
					"Type": "NodeText",
					"Data": "。其中  "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "cri-containerd-${VERSION}.${OS}-${ARCH}.tar.gz"
				},
				{
					"Type": "NodeText",
					"Data": " 包含了所有 Kubernetes 需要的二进制文件。如果你只是本地测试，可以选择前一个压缩包；如果是作为 Kubernetes 的容器运行时，需要选择后一个压缩包。"
				}
			]
		},
		{
			"ID": "20230110102554-zvs1vub",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230110102554-zvs1vub"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Containerd 是需要调用 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "runc"
				},
				{
					"Type": "NodeText",
					"Data": " 的，而第一个压缩包是不包含 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "runc"
				},
				{
					"Type": "NodeText",
					"Data": " 二进制文件的，如果你选择第一个压缩包，还需要提前安装 runc。所以我建议直接使用 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "cri-containerd"
				},
				{
					"Type": "NodeText",
					"Data": " 压缩包。"
				}
			]
		},
		{
			"ID": "20230110102554-3iwcg8w",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230110102554-3iwcg8w"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "首先从 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "a",
					"TextMarkAHref": "https://github.com/containerd/containerd/releases",
					"TextMarkTextContent": "release 页面"
				},
				{
					"Type": "NodeText",
					"Data": "下载最新版本的压缩包，当前最新版本为 1.4.3："
				}
			]
		},
		{
			"ID": "20230110102554-waijg6m",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230110102554-waijg6m"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YmFzaA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "🐳  → wget https://github.com/containerd/containerd/releases/download/v1.4.3/cri-containerd-cni-1.4.3-linux-amd64.tar.gz\n\n# 也可以替换成下面的 URL 加速下载\n🐳  → wget https://download.fastgit.org/containerd/containerd/releases/download/v1.4.3/cri-containerd-cni-1.4.3-linux-amd64.tar.gz\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230110102554-0wgtfyg",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230110102554-0wgtfyg"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "可以通过 tar 的 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "-t"
				},
				{
					"Type": "NodeText",
					"Data": " 选项直接看到压缩包中包含哪些文件："
				}
			]
		},
		{
			"ID": "20230110102554-17t25be",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230110102554-17t25be"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YmFzaA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "🐳  → tar -tf cri-containerd-cni-1.4.3-linux-amd64.tar.gz\netc/\netc/cni/\netc/cni/net.d/\netc/cni/net.d/10-containerd-net.conflist\netc/crictl.yaml\netc/systemd/\netc/systemd/system/\netc/systemd/system/containerd.service\nusr/\nusr/local/\nusr/local/bin/\nusr/local/bin/containerd-shim-runc-v2\nusr/local/bin/ctr\nusr/local/bin/containerd-shim\nusr/local/bin/containerd-shim-runc-v1\nusr/local/bin/crictl\nusr/local/bin/critest\nusr/local/bin/containerd\nusr/local/sbin/\nusr/local/sbin/runc\nopt/\nopt/cni/\nopt/cni/bin/\nopt/cni/bin/vlan\nopt/cni/bin/host-local\nopt/cni/bin/flannel\nopt/cni/bin/bridge\nopt/cni/bin/host-device\nopt/cni/bin/tuning\nopt/cni/bin/firewall\nopt/cni/bin/bandwidth\nopt/cni/bin/ipvlan\nopt/cni/bin/sbr\nopt/cni/bin/dhcp\nopt/cni/bin/portmap\nopt/cni/bin/ptp\nopt/cni/bin/static\nopt/cni/bin/macvlan\nopt/cni/bin/loopback\nopt/containerd/\nopt/containerd/cluster/\nopt/containerd/cluster/version\nopt/containerd/cluster/gce/\nopt/containerd/cluster/gce/cni.template\nopt/containerd/cluster/gce/configure.sh\nopt/containerd/cluster/gce/cloud-init/\nopt/containerd/cluster/gce/cloud-init/master.yaml\nopt/containerd/cluster/gce/cloud-init/node.yaml\nopt/containerd/cluster/gce/env\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230110102554-jzemqp5",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230110102554-jzemqp5"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "直接将压缩包解压到系统的各个目录中："
				}
			]
		},
		{
			"ID": "20230110102554-xwezo08",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230110102554-xwezo08"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YmFzaA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "🐳  → sudo tar -C / -xzf cri-containerd-cni-1.4.3-linux-amd64.tar.gz\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230110102554-pz1n3t3",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230110102554-pz1n3t3"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "将 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "/usr/local/bin"
				},
				{
					"Type": "NodeText",
					"Data": " 和 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "/usr/local/sbin"
				},
				{
					"Type": "NodeText",
					"Data": " 追加到 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "~/.bashrc"
				},
				{
					"Type": "NodeText",
					"Data": " 文件的 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "$PATH"
				},
				{
					"Type": "NodeText",
					"Data": " 环境变量中："
				}
			]
		},
		{
			"ID": "20230110102554-hsbq7ep",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230110102554-hsbq7ep"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YmFzaA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "export PATH=$PATH:/usr/local/bin:/usr/local/sbin\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230110102554-arqu7kd",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230110102554-arqu7kd"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "立即生效："
				}
			]
		},
		{
			"ID": "20230110102554-qbqf3c0",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230110102554-qbqf3c0"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YmFzaA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "🐳  → source ~/.bashrc\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230110102554-3gwzw83",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230110102554-3gwzw83"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "查看版本："
				}
			]
		},
		{
			"ID": "20230110102554-66b6wpl",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230110102554-66b6wpl"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YmFzaA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "🐳  → ctr version\nClient:\n  Version:  v1.4.3\n  Revision: 269548fa27e0089a8b8278fc4fc781d7f65a939b\n  Go version: go1.15.5\n\nServer:\n  Version:  v1.4.3\n  Revision: 269548fa27e0089a8b8278fc4fc781d7f65a939b\n  UUID: d1724999-91b3-4338-9288-9a54c9d52f70\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230110102554-l1tjeng",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230110102554-l1tjeng"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "生成配置文件"
				}
			]
		},
		{
			"ID": "20230110102554-wuzi0pn",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230110102554-wuzi0pn"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Containerd 的默认配置文件为  "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "/etc/containerd/config.toml"
				},
				{
					"Type": "NodeText",
					"Data": "，我们可以通过命令来生成一个默认的配置："
				}
			]
		},
		{
			"ID": "20230110102554-mxiiwev",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230110102554-mxiiwev"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YmFzaA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "🐳  → mkdir /etc/containerd\n🐳  → containerd config default \u003e /etc/containerd/config.toml\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230110102554-t9205ot",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230110102554-t9205ot"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "镜像加速"
				}
			]
		},
		{
			"ID": "20230110102554-n3c43p3",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230110102554-n3c43p3"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "由于某些不可描述的因素，在国内拉取公共镜像仓库的速度是极慢的，为了节约拉取时间，需要为 Containerd 配置镜像仓库的 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "mirror"
				},
				{
					"Type": "NodeText",
					"Data": "。Containerd 的镜像仓库 mirror 与 Docker 相比有两个区别："
				}
			]
		},
		{
			"ID": "20230110102554-fkxa03m",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20230110102554-fkxa03m"
			},
			"Children": [
				{
					"ID": "20230110102554-rhdolck",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230110102554-rhdolck"
					},
					"Children": [
						{
							"ID": "20230110102554-ddeyvze",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230110102554-ddeyvze"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Containerd 只支持通过 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "CRI"
								},
								{
									"Type": "NodeText",
									"Data": " 拉取镜像的 mirror，也就是说，只有通过 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "crictl"
								},
								{
									"Type": "NodeText",
									"Data": " 或者 Kubernetes 调用时 mirror 才会生效，通过 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "ctr"
								},
								{
									"Type": "NodeText",
									"Data": " 拉取是不会生效的。"
								}
							]
						}
					]
				},
				{
					"ID": "20230110102554-cgmzkuo",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230110102554-cgmzkuo"
					},
					"Children": [
						{
							"ID": "20230110102554-hpacvsb",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230110102554-hpacvsb"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Docker"
								},
								{
									"Type": "NodeText",
									"Data": " 只支持为 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Docker Hub"
								},
								{
									"Type": "NodeText",
									"Data": " 配置 mirror，而 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Containerd"
								},
								{
									"Type": "NodeText",
									"Data": " 支持为任意镜像仓库配置 mirror。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230110102554-uu2v07n",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230110102554-uu2v07n"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "配置镜像加速之前，先来看下 Containerd 的配置结构，乍一看可能会觉得很复杂，复杂就复杂在 plugin 的配置部分："
				}
			]
		},
		{
			"ID": "20230110102554-wix3715",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230110102554-wix3715"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "dG9tbA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "[plugins]\n  [plugins.\"io.containerd.gc.v1.scheduler\"]\n    pause_threshold = 0.02\n    deletion_threshold = 0\n    mutation_threshold = 100\n    schedule_delay = \"0s\"\n    startup_delay = \"100ms\"\n  [plugins.\"io.containerd.grpc.v1.cri\"]\n    disable_tcp_service = true\n    stream_server_address = \"127.0.0.1\"\n    stream_server_port = \"0\"\n    stream_idle_timeout = \"4h0m0s\"\n    enable_selinux = false\n    sandbox_image = \"k8s.gcr.io/pause:3.1\"\n    stats_collect_period = 10\n    systemd_cgroup = false\n    enable_tls_streaming = false\n    max_container_log_line_size = 16384\n    disable_cgroup = false\n    disable_apparmor = false\n    restrict_oom_score_adj = false\n    max_concurrent_downloads = 3\n    disable_proc_mount = false\n    [plugins.\"io.containerd.grpc.v1.cri\".containerd]\n      snapshotter = \"overlayfs\"\n      default_runtime_name = \"runc\"\n      no_pivot = false\n      [plugins.\"io.containerd.grpc.v1.cri\".containerd.default_runtime]\n        runtime_type = \"\"\n        runtime_engine = \"\"\n        runtime_root = \"\"\n        privileged_without_host_devices = false\n      [plugins.\"io.containerd.grpc.v1.cri\".containerd.untrusted_workload_runtime]\n        runtime_type = \"\"\n        runtime_engine = \"\"\n        runtime_root = \"\"\n        privileged_without_host_devices = false\n      [plugins.\"io.containerd.grpc.v1.cri\".containerd.runtimes]\n        [plugins.\"io.containerd.grpc.v1.cri\".containerd.runtimes.runc]\n          runtime_type = \"io.containerd.runc.v1\"\n          runtime_engine = \"\"\n          runtime_root = \"\"\n          privileged_without_host_devices = false\n    [plugins.\"io.containerd.grpc.v1.cri\".cni]\n      bin_dir = \"/opt/cni/bin\"\n      conf_dir = \"/etc/cni/net.d\"\n      max_conf_num = 1\n      conf_template = \"\"\n    [plugins.\"io.containerd.grpc.v1.cri\".registry]\n      [plugins.\"io.containerd.grpc.v1.cri\".registry.mirrors]\n        [plugins.\"io.containerd.grpc.v1.cri\".registry.mirrors.\"docker.io\"]\n          endpoint = [\"https://registry-1.docker.io\"]\n    [plugins.\"io.containerd.grpc.v1.cri\".x509_key_pair_streaming]\n      tls_cert_file = \"\"\n      tls_key_file = \"\"\n  [plugins.\"io.containerd.internal.v1.opt\"]\n    path = \"/opt/containerd\"\n  [plugins.\"io.containerd.internal.v1.restart\"]\n    interval = \"10s\"\n  [plugins.\"io.containerd.metadata.v1.bolt\"]\n    content_sharing_policy = \"shared\"\n  [plugins.\"io.containerd.monitor.v1.cgroups\"]\n    no_prometheus = false\n  [plugins.\"io.containerd.runtime.v1.linux\"]\n    shim = \"containerd-shim\"\n    runtime = \"runc\"\n    runtime_root = \"\"\n    no_shim = false\n    shim_debug = false\n  [plugins.\"io.containerd.runtime.v2.task\"]\n    platforms = [\"linux/amd64\"]\n  [plugins.\"io.containerd.service.v1.diff-service\"]\n    default = [\"walking\"]\n  [plugins.\"io.containerd.snapshotter.v1.devmapper\"]\n    root_path = \"\"\n    pool_name = \"\"\n    base_image_size = \"\"\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230110102554-rf6l3up",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230110102554-rf6l3up"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "每一个顶级配置块的命名都是 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "plugins.\u0026quot;io.containerd.xxx.vx.xxx\u0026quot;"
				},
				{
					"Type": "NodeText",
					"Data": " 这种形式，其实每一个顶级配置块都代表一个插件，其中 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "io.containerd.xxx.vx"
				},
				{
					"Type": "NodeText",
					"Data": " 表示插件的类型，vx 后面的 xxx 表示插件的 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "ID"
				},
				{
					"Type": "NodeText",
					"Data": "。可以通过 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "ctr"
				},
				{
					"Type": "NodeText",
					"Data": " 一览无余："
				}
			]
		},
		{
			"ID": "20230110102554-knq28fl",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230110102554-knq28fl"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YmFzaA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "🐳  → ctr plugin ls\nTYPE                            ID                    PLATFORMS      STATUS\nio.containerd.content.v1        content               -              ok\nio.containerd.snapshotter.v1    btrfs                 linux/amd64    error\nio.containerd.snapshotter.v1    devmapper             linux/amd64    error\nio.containerd.snapshotter.v1    aufs                  linux/amd64    ok\nio.containerd.snapshotter.v1    native                linux/amd64    ok\nio.containerd.snapshotter.v1    overlayfs             linux/amd64    ok\nio.containerd.snapshotter.v1    zfs                   linux/amd64    error\nio.containerd.metadata.v1       bolt                  -              ok\nio.containerd.differ.v1         walking               linux/amd64    ok\nio.containerd.gc.v1             scheduler             -              ok\nio.containerd.service.v1        containers-service    -              ok\nio.containerd.service.v1        content-service       -              ok\nio.containerd.service.v1        diff-service          -              ok\nio.containerd.service.v1        images-service        -              ok\nio.containerd.service.v1        leases-service        -              ok\nio.containerd.service.v1        namespaces-service    -              ok\nio.containerd.service.v1        snapshots-service     -              ok\nio.containerd.runtime.v1        linux                 linux/amd64    ok\nio.containerd.runtime.v2        task                  linux/amd64    ok\nio.containerd.monitor.v1        cgroups               linux/amd64    ok\nio.containerd.service.v1        tasks-service         -              ok\nio.containerd.internal.v1       restart               -              ok\nio.containerd.grpc.v1           containers            -              ok\nio.containerd.grpc.v1           content               -              ok\nio.containerd.grpc.v1           diff                  -              ok\nio.containerd.grpc.v1           events                -              ok\nio.containerd.grpc.v1           healthcheck           -              ok\nio.containerd.grpc.v1           images                -              ok\nio.containerd.grpc.v1           leases                -              ok\nio.containerd.grpc.v1           namespaces            -              ok\nio.containerd.internal.v1       opt                   -              ok\nio.containerd.grpc.v1           snapshots             -              ok\nio.containerd.grpc.v1           tasks                 -              ok\nio.containerd.grpc.v1           version               -              ok\nio.containerd.grpc.v1           cri                   linux/amd64    ok\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230110102554-bh2d6pc",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230110102554-bh2d6pc"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "顶级配置块下面的子配置块表示该插件的各种配置，比如 cri 插件下面就分为 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "containerd"
				},
				{
					"Type": "NodeText",
					"Data": "、"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "cni"
				},
				{
					"Type": "NodeText",
					"Data": " 和 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "registry"
				},
				{
					"Type": "NodeText",
					"Data": " 的配置，而 containerd 下面又可以配置各种 runtime，还可以配置默认的 runtime。"
				}
			]
		},
		{
			"ID": "20230110102554-qsv0np0",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230110102554-qsv0np0"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "镜像加速的配置就在 cri 插件配置块下面的 registry 配置块，所以需要修改的部分如下："
				}
			]
		},
		{
			"ID": "20230110102554-0xp5em5",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230110102554-0xp5em5"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "dG9tbA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "    [plugins.\"io.containerd.grpc.v1.cri\".registry]\n      [plugins.\"io.containerd.grpc.v1.cri\".registry.mirrors]\n        [plugins.\"io.containerd.grpc.v1.cri\".registry.mirrors.\"docker.io\"]\n          endpoint = [\"https://dockerhub.mirrors.nwafu.edu.cn\"]\n        [plugins.\"io.containerd.grpc.v1.cri\".registry.mirrors.\"k8s.gcr.io\"]\n          endpoint = [\"https://registry.aliyuncs.com/k8sxio\"]\n        [plugins.\"io.containerd.grpc.v1.cri\".registry.mirrors.\"gcr.io\"]\n          endpoint = [\"xxx\"]\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230110102554-ek1zrlv",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20230110102554-ek1zrlv"
			},
			"Children": [
				{
					"ID": "20230110102554-8tn3riz",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230110102554-8tn3riz"
					},
					"Children": [
						{
							"ID": "20230110102554-28yzq8f",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230110102554-28yzq8f"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "registry.mirrors.\u0026quot;xxx\u0026quot;"
								},
								{
									"Type": "NodeText",
									"Data": " : 表示需要配置 mirror 的镜像仓库。例如，"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "registry.mirrors.\u0026quot;docker.io\u0026quot;"
								},
								{
									"Type": "NodeText",
									"Data": " 表示配置 docker.io 的 mirror。"
								}
							]
						}
					]
				},
				{
					"ID": "20230110102554-x2rqes5",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230110102554-x2rqes5"
					},
					"Children": [
						{
							"ID": "20230110102554-685ihea",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230110102554-685ihea"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "endpoint"
								},
								{
									"Type": "NodeText",
									"Data": " : 表示提供 mirror 的镜像加速服务。例如，这里推荐使用西北农林科技大学提供的镜像加速服务作为 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "docker.io"
								},
								{
									"Type": "NodeText",
									"Data": " 的 mirror。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230110102554-k6v04pr",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230110102554-k6v04pr"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "至于 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong code",
					"TextMarkTextContent": "gcr.io"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "，目前还没有公共的加速服务。我自己掏钱搭了个加速服务，拉取速度大概是 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong code",
					"TextMarkTextContent": "3M/s"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": " 左右，有加速需求的同学可以通过微信号：cloud-native-yang 加我为好友再详细咨询。"
				}
			]
		},
		{
			"ID": "20230110102554-ephtses",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230110102554-ephtses"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "存储配置"
				}
			]
		},
		{
			"ID": "20230110102554-hrxn26d",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230110102554-hrxn26d"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Containerd 有两个不同的存储路径，一个用来保存持久化数据，一个用来保存运行时状态。"
				}
			]
		},
		{
			"ID": "20230110102554-q266en8",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230110102554-q266en8"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "dG9tbA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "root = \"/var/lib/containerd\"\nstate = \"/run/containerd\"\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230110102554-uc9k42j",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230110102554-uc9k42j"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "root"
				},
				{
					"Type": "NodeText",
					"Data": "用来保存持久化数据，包括 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "Snapshots"
				},
				{
					"Type": "NodeText",
					"Data": ", "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "Content"
				},
				{
					"Type": "NodeText",
					"Data": ", "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "Metadata"
				},
				{
					"Type": "NodeText",
					"Data": " 以及各种插件的数据。每一个插件都有自己单独的目录，Containerd 本身不存储任何数据，它的所有功能都来自于已加载的插件，真是太机智了。"
				}
			]
		},
		{
			"ID": "20230110102554-9ddaley",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230110102554-9ddaley"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YmFzaA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "🐳  → tree -L 2 /var/lib/containerd/\n/var/lib/containerd/\n├── io.containerd.content.v1.content\n│   ├── blobs\n│   └── ingest\n├── io.containerd.grpc.v1.cri\n│   ├── containers\n│   └── sandboxes\n├── io.containerd.metadata.v1.bolt\n│   └── meta.db\n├── io.containerd.runtime.v1.linux\n│   └── k8s.io\n├── io.containerd.runtime.v2.task\n├── io.containerd.snapshotter.v1.aufs\n│   └── snapshots\n├── io.containerd.snapshotter.v1.btrfs\n├── io.containerd.snapshotter.v1.native\n│   └── snapshots\n├── io.containerd.snapshotter.v1.overlayfs\n│   ├── metadata.db\n│   └── snapshots\n└── tmpmounts\n\n18 directories, 2 files\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230110102554-tjjr8xj",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230110102554-tjjr8xj"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "state"
				},
				{
					"Type": "NodeText",
					"Data": " 用来保存临时数据，包括 sockets、pid、挂载点、运行时状态以及不需要持久化保存的插件数据。"
				}
			]
		},
		{
			"ID": "20230110102554-w1ga4xb",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230110102554-w1ga4xb"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YmFzaA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "🐳  → tree -L 2 /run/containerd/\n/run/containerd/\n├── containerd.sock\n├── containerd.sock.ttrpc\n├── io.containerd.grpc.v1.cri\n│   ├── containers\n│   └── sandboxes\n├── io.containerd.runtime.v1.linux\n│   └── k8s.io\n├── io.containerd.runtime.v2.task\n└── runc\n    └── k8s.io\n\n8 directories, 2 files\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230110102554-631inz1",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230110102554-631inz1"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "OOM"
				}
			]
		},
		{
			"ID": "20230110102554-lhgy4c5",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230110102554-lhgy4c5"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "还有一项配置需要留意："
				}
			]
		},
		{
			"ID": "20230110102554-17vmmqw",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230110102554-17vmmqw"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "dG9tbA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "oom_score = 0\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230110102554-5sma3ub",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230110102554-5sma3ub"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Containerd 是容器的守护者，一旦发生内存不足的情况，理想的情况应该是先杀死容器，而不是杀死 Containerd。所以需要调整 Containerd 的 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "OOM"
				},
				{
					"Type": "NodeText",
					"Data": " 权重，减少其被 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "OOM Kill"
				},
				{
					"Type": "NodeText",
					"Data": " 的几率。最好是将 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "oom_score"
				},
				{
					"Type": "NodeText",
					"Data": " 的值调整为比其他守护进程略低的值。这里的 oom_socre 其实对应的是 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "/proc/\u0026lt;pid\u0026gt;/oom_socre_adj"
				},
				{
					"Type": "NodeText",
					"Data": "，在早期的 Linux 内核版本里使用 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "oom_adj"
				},
				{
					"Type": "NodeText",
					"Data": " 来调整权重, 后来改用 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "oom_socre_adj"
				},
				{
					"Type": "NodeText",
					"Data": " 了。该文件描述如下："
				}
			]
		},
		{
			"ID": "20230110102554-qh8alw0",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20230110102554-qh8alw0"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20230110102554-k3tmib4",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20230110102554-k3tmib4"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "The value of "
						},
						{
							"Type": "NodeTextMark",
							"TextMarkType": "code",
							"TextMarkTextContent": "/proc/\u0026lt;pid\u0026gt;/oom_score_adj"
						},
						{
							"Type": "NodeText",
							"Data": " is added to the badness score before it"
						}
					]
				},
				{
					"ID": "20230110102554-iejmti4",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20230110102554-iejmti4"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "is used to determine which task to kill.  Acceptable values range from -1000"
						}
					]
				},
				{
					"ID": "20230110102554-oliw7h8",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20230110102554-oliw7h8"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "(OOM_SCORE_ADJ_MIN) to +1000 (OOM_SCORE_ADJ_MAX).  This allows userspace to"
						}
					]
				},
				{
					"ID": "20230110102554-bj5gzdt",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20230110102554-bj5gzdt"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "polarize the preference for oom killing either by always preferring a certain"
						}
					]
				},
				{
					"ID": "20230110102554-ss2jrw2",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20230110102554-ss2jrw2"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "task or completely disabling it.  The lowest possible value, -1000, is"
						}
					]
				},
				{
					"ID": "20230110102554-cqt2jz5",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20230110102554-cqt2jz5"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "equivalent to disabling oom killing entirely for that task since it will always"
						}
					]
				},
				{
					"ID": "20230110102554-jjsv90p",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20230110102554-jjsv90p"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "report a badness score of 0."
						}
					]
				}
			]
		},
		{
			"ID": "20230110102554-bxrkww2",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230110102554-bxrkww2"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在计算最终的 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "badness score"
				},
				{
					"Type": "NodeText",
					"Data": " 时，会在计算结果是中加上 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "oom_score_adj"
				},
				{
					"Type": "NodeText",
					"Data": " ,这样用户就可以通过该在值来保护某个进程不被杀死或者每次都杀某个进程。其取值范围为 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "-1000"
				},
				{
					"Type": "NodeText",
					"Data": " 到 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "1000"
				},
				{
					"Type": "NodeText",
					"Data": "。"
				}
			]
		},
		{
			"ID": "20230110102554-jpp15lb",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230110102554-jpp15lb"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "如果将该值设置为 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "-1000"
				},
				{
					"Type": "NodeText",
					"Data": "，则进程永远不会被杀死，因为此时 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "badness score"
				},
				{
					"Type": "NodeText",
					"Data": " 永远返回0。"
				}
			]
		},
		{
			"ID": "20230110102554-b3gaagc",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230110102554-b3gaagc"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "建议 Containerd 将该值设置为 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "-999"
				},
				{
					"Type": "NodeText",
					"Data": " 到 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "0"
				},
				{
					"Type": "NodeText",
					"Data": " 之间。如果作为 Kubernetes 的 Worker 节点，可以考虑设置为 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "-999"
				},
				{
					"Type": "NodeText",
					"Data": "。"
				}
			]
		},
		{
			"ID": "20230110102554-nac2016",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230110102554-nac2016"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Systemd 配置"
				}
			]
		},
		{
			"ID": "20230110102554-qjapk4b",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230110102554-qjapk4b"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "建议通过 systemd 配置 Containerd 作为守护进程运行，配置文件在上文已经被解压出来了："
				}
			]
		},
		{
			"ID": "20230110102554-llj4lt6",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230110102554-llj4lt6"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YmFzaA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "🐳  → cat /etc/systemd/system/containerd.service\n# Copyright The containerd Authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n[Unit]\nDescription=containerd container runtime\nDocumentation=https://containerd.io\nAfter=network.target local-fs.target\n\n[Service]\nExecStartPre=-/sbin/modprobe overlay\nExecStart=/usr/local/bin/containerd\n\nType=notify\nDelegate=yes\nKillMode=process\nRestart=always\nRestartSec=5\n# Having non-zero Limit*s causes performance problems due to accounting overhead\n# in the kernel. We recommend using cgroups to do container-local accounting.\nLimitNPROC=infinity\nLimitCORE=infinity\nLimitNOFILE=1048576\n# Comment TasksMax if your systemd version does not supports it.\n# Only systemd 226 and above support this version.\nTasksMax=infinity\nOOMScoreAdjust=-999\n\n[Install]\nWantedBy=multi-user.target\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230110102554-d7j0pib",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230110102554-d7j0pib"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "这里有两个重要的参数："
				}
			]
		},
		{
			"ID": "20230110102554-z9cdjmb",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20230110102554-z9cdjmb"
			},
			"Children": [
				{
					"ID": "20230110102554-1leonqg",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230110102554-1leonqg"
					},
					"Children": [
						{
							"ID": "20230110102554-8i6wvs5",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230110102554-8i6wvs5"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "Delegate"
								},
								{
									"Type": "NodeText",
									"Data": " : 这个选项允许 Containerd 以及运行时自己管理自己创建的容器的 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "cgroups"
								},
								{
									"Type": "NodeText",
									"Data": "。如果不设置这个选项，systemd 就会将进程移到自己的 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "cgroups"
								},
								{
									"Type": "NodeText",
									"Data": " 中，从而导致 Containerd 无法正确获取容器的资源使用情况。"
								}
							]
						}
					]
				},
				{
					"ID": "20230110102554-ufjz3ds",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230110102554-ufjz3ds"
					},
					"Children": [
						{
							"ID": "20230110102554-4akk6lz",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230110102554-4akk6lz"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "KillMode"
								},
								{
									"Type": "NodeText",
									"Data": " : 这个选项用来处理 Containerd 进程被杀死的方式。默认情况下，systemd 会在进程的 cgroup 中查找并杀死 Containerd 的所有子进程，这肯定不是我们想要的。"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "KillMode"
								},
								{
									"Type": "NodeText",
									"Data": "字段可以设置的值如下。"
								}
							]
						},
						{
							"ID": "20230110102554-i4eunp5",
							"Type": "NodeList",
							"ListData": {},
							"Properties": {
								"id": "20230110102554-i4eunp5"
							},
							"Children": [
								{
									"ID": "20230110102554-7wbb8ff",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20230110102554-7wbb8ff"
									},
									"Children": [
										{
											"ID": "20230110102554-uikwoiw",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20230110102554-uikwoiw"
											},
											"Children": [
												{
													"Type": "NodeTextMark",
													"TextMarkType": "strong",
													"TextMarkTextContent": "control-group"
												},
												{
													"Type": "NodeText",
													"Data": " （默认值）：当前控制组里面的所有子进程，都会被杀掉"
												}
											]
										}
									]
								},
								{
									"ID": "20230110102554-2isb8y3",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20230110102554-2isb8y3"
									},
									"Children": [
										{
											"ID": "20230110102554-ti54wem",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20230110102554-ti54wem"
											},
											"Children": [
												{
													"Type": "NodeTextMark",
													"TextMarkType": "strong",
													"TextMarkTextContent": "process"
												},
												{
													"Type": "NodeText",
													"Data": " ：只杀主进程"
												}
											]
										}
									]
								},
								{
									"ID": "20230110102554-6rdlqta",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20230110102554-6rdlqta"
									},
									"Children": [
										{
											"ID": "20230110102554-btf0mm0",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20230110102554-btf0mm0"
											},
											"Children": [
												{
													"Type": "NodeTextMark",
													"TextMarkType": "strong",
													"TextMarkTextContent": "mixed"
												},
												{
													"Type": "NodeText",
													"Data": " ：主进程将收到 SIGTERM 信号，子进程收到 SIGKILL 信号"
												}
											]
										}
									]
								},
								{
									"ID": "20230110102554-9gxqzme",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20230110102554-9gxqzme"
									},
									"Children": [
										{
											"ID": "20230110102554-9rdnfb6",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20230110102554-9rdnfb6"
											},
											"Children": [
												{
													"Type": "NodeTextMark",
													"TextMarkType": "strong",
													"TextMarkTextContent": "none"
												},
												{
													"Type": "NodeText",
													"Data": " ：没有进程会被杀掉，只是执行服务的 stop 命令。"
												}
											]
										}
									]
								}
							]
						},
						{
							"ID": "20230110102554-tkwkkk8",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230110102554-tkwkkk8"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "我们需要将 KillMode 的值设置为 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "process"
								},
								{
									"Type": "NodeText",
									"Data": "，这样可以确保升级或重启 Containerd 时不杀死现有的容器。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230110102554-qtqisza",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230110102554-qtqisza"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "现在到了最关键的一步：启动 Containerd。执行一条命令就完事："
				}
			]
		},
		{
			"ID": "20230110102554-n3ekuzz",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230110102554-n3ekuzz"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YmFzaA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "🐳  → systemctl enable containerd --now\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230110102554-kszstbk",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230110102554-kszstbk"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "接下来进入本文最后一部分：Containerd 的基本使用方式。本文只会介绍 Containerd 的本地使用方法，即本地客户端 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "ctr"
				},
				{
					"Type": "NodeText",
					"Data": " 的使用方法，不会涉及到 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "crictl"
				},
				{
					"Type": "NodeText",
					"Data": "，后面有机会再介绍 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "crictl"
				},
				{
					"Type": "NodeText",
					"Data": "。"
				}
			]
		},
		{
			"ID": "20230110102554-0dlatnj",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230110102554-0dlatnj"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "4. Containerd 快速安装"
				}
			]
		},
		{
			"ID": "20230110102554-ze1clxg",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230110102554-ze1clxg"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "如果你想在一分钟内快速装好 Kubernetes 和 Containerd，可以使用 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "a",
					"TextMarkAHref": "https://github.com/fanux/sealos",
					"TextMarkTextContent": "Sealos"
				},
				{
					"Type": "NodeText",
					"Data": " 来部署。该项目旨在做一个简单干净轻量级稳定的 kubernetes 安装工具，一条命令，离线安装，包含所有依赖，内核负载不依赖 haproxy keepalived,纯 golang 开发,99 年证书。1.12.0 版本的离线包搭载了最新版本的 Containerd，还支持 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "arm64"
				},
				{
					"Type": "NodeText",
					"Data": " 架构，简直就是简直了。"
				}
			]
		},
		{
			"ID": "20230110102554-njiuaur",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230110102554-njiuaur"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "部署方法特别简单，首先下载并安装 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "sealos"
				},
				{
					"Type": "NodeText",
					"Data": ", "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "sealos"
				},
				{
					"Type": "NodeText",
					"Data": " 是个 golang 的二进制工具，直接下载拷贝到 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "bin"
				},
				{
					"Type": "NodeText",
					"Data": " 目录即可, "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "release"
				},
				{
					"Type": "NodeText",
					"Data": " 页面也可下载："
				}
			]
		},
		{
			"ID": "20230110102554-1wwxn6q",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230110102554-1wwxn6q"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YmFzaA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "🐳  → wget -c https://sealyun.oss-cn-beijing.aliyuncs.com/latest/sealos\n🐳  → chmod +x sealos \u0026\u0026 mv sealos /usr/bin\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230110102554-vkr3sr5",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230110102554-vkr3sr5"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "下载离线资源包："
				}
			]
		},
		{
			"ID": "20230110102554-q4xu80n",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230110102554-q4xu80n"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YmFzaA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "🐳  → wget -c https://sealyun.oss-cn-beijing.aliyuncs.com/7b6af025d4884fdd5cd51a674994359c-1.18.0/kube1.18.0.tar.gz\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230110102554-3k7mcnm",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230110102554-3k7mcnm"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "安装一个三 master 的高可用 Kubernetes 集群："
				}
			]
		},
		{
			"ID": "20230110102554-4nw9469",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230110102554-4nw9469"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YmFzaA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "🐳  → sealos init --passwd 123456 \n--master 192.168.0.2  --master 192.168.0.3  --master 192.168.0.4  \n--node 192.168.0.5 \n--pkg-url /root/kube1.18.0.tar.gz \n--version v1.18.0\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230110102554-wj4vdqj",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230110102554-wj4vdqj"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "然后就完事了。。。"
				}
			]
		},
		{
			"ID": "20230110102554-tb3tg7b",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230110102554-tb3tg7b"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "5. ctr 使用"
				}
			]
		},
		{
			"ID": "20230110102554-fnvxd2h",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230110102554-fnvxd2h"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "ctr 目前很多功能做的还没有 docker 那么完善，但基本功能已经具备了。下面将围绕"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "镜像"
				},
				{
					"Type": "NodeText",
					"Data": "和"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "容器"
				},
				{
					"Type": "NodeText",
					"Data": "这两个方面来介绍其使用方法。"
				}
			]
		},
		{
			"ID": "20230110102554-hrnjjtx",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230110102554-hrnjjtx"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "镜像"
				}
			]
		},
		{
			"ID": "20230110102554-bpdrj1y",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230110102554-bpdrj1y"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "镜像下载："
				}
			]
		},
		{
			"ID": "20230110102554-k92jqx1",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230110102554-k92jqx1"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YmFzaA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "🐳  → ctr i pull docker.io/library/nginx:alpine\ndocker.io/library/nginx:alpine:                                                   resolved       |++++++++++++++++++++++++++++++++++++++|\nindex-sha256:efc93af57bd255ffbfb12c89ec0714dd1a55f16290eb26080e3d1e7e82b3ea66:    done           |++++++++++++++++++++++++++++++++++++++|\nmanifest-sha256:6ceeeab513f7d15cea38c1f8dfe5455323b5a1bfd568516b3b0ee70406f75247: done           |++++++++++++++++++++++++++++++++++++++|\nconfig-sha256:0fde4fb87e476fd1655b3f04f55aa5b4b3ef7de7c701eb46573bb5a5dcf66fd2:   done           |++++++++++++++++++++++++++++++++++++++|\nlayer-sha256:abaddf4965e5e9ce9953f2e136b3bf9cc15365adbcf0c68b108b1cc26c12b1be:    done           |++++++++++++++++++++++++++++++++++++++|\nlayer-sha256:05e7bc50f07f000e9993ec0d264b9ffcbb9a01a4d69c68f556d25e9811a8f7f4:    done           |++++++++++++++++++++++++++++++++++++++|\nlayer-sha256:c78f7f670e47cf98494e7dbe08e463d34c160bf6a5939a2155ff4438cb8b0e80:    done           |++++++++++++++++++++++++++++++++++++++|\nlayer-sha256:ce77cf6a2ede66c463dcdd39f1a43cfbac3723a99e94f697bc20faee0f7cce1b:    done           |++++++++++++++++++++++++++++++++++++++|\nlayer-sha256:3080fd9f46494247c9298a6a3d9694f03f6a32898a07ffbe1c17a0752bae5c4e:    done           |++++++++++++++++++++++++++++++++++++++|\nelapsed: 17.3s                                                                    total:  8.7 Mi (513.8 KiB/s)\nunpacking linux/amd64 sha256:efc93af57bd255ffbfb12c89ec0714dd1a55f16290eb26080e3d1e7e82b3ea66...\ndone\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230110102554-fwwf5tt",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230110102554-fwwf5tt"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "本地镜像列表查询："
				}
			]
		},
		{
			"ID": "20230110102554-e1b184z",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230110102554-e1b184z"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YmFzaA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "🐳  → ctr i ls\nREF                                                               TYPE                                                      DIGEST                                                                  SIZE      PLATFORMS                                                                                LABELS\ndocker.io/library/nginx:alpine                                    application/vnd.docker.distribution.manifest.list.v2+json sha256:efc93af57bd255ffbfb12c89ec0714dd1a55f16290eb26080e3d1e7e82b3ea66 9.3 MiB   linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64/v8,linux/ppc64le,linux/s390x -\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230110102554-xdwv3jf",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230110102554-xdwv3jf"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "这里需要注意PLATFORMS，它是镜像的能够运行的平台标识。"
				}
			]
		},
		{
			"ID": "20230110102554-q03k86b",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230110102554-q03k86b"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "将镜像挂载到主机目录："
				}
			]
		},
		{
			"ID": "20230110102554-ytf1625",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230110102554-ytf1625"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YmFzaA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "🐳  → ctr i mount docker.io/library/nginx:alpine /mnt\n\n🐳  → tree -L 1 /mnt\n/mnt\n├── bin\n├── dev\n├── docker-entrypoint.d\n├── docker-entrypoint.sh\n├── etc\n├── home\n├── lib\n├── media\n├── mnt\n├── opt\n├── proc\n├── root\n├── run\n├── sbin\n├── srv\n├── sys\n├── tmp\n├── usr\n└── var\n\n18 directories, 1 file\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230110102554-s9er1rr",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230110102554-s9er1rr"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "将镜像从主机目录上卸载："
				}
			]
		},
		{
			"ID": "20230110102554-hgxo33g",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230110102554-hgxo33g"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YmFzaA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "🐳  → ctr i unmount /mnt\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230110102554-3x03pu1",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230110102554-3x03pu1"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "将镜像导出为压缩包："
				}
			]
		},
		{
			"ID": "20230110102554-vfd56kz",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230110102554-vfd56kz"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YmFzaA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "🐳  → ctr i export nginx.tar.gz docker.io/library/nginx:alpine\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230110102554-8z7tfxb",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230110102554-8z7tfxb"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "从压缩包导入镜像："
				}
			]
		},
		{
			"ID": "20230110102554-yxj8tsa",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230110102554-yxj8tsa"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YmFzaA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "🐳  → ctr i import nginx.tar.gz\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230110102554-mhx91un",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230110102554-mhx91un"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "其他操作可以自己查看帮助："
				}
			]
		},
		{
			"ID": "20230110102554-u7xatyd",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230110102554-u7xatyd"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YmFzaA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "🐳  → ctr i --help\nNAME:\n   ctr images - manage images\n\nUSAGE:\n   ctr images command [command options] [arguments...]\n\nCOMMANDS:\n   check       check that an image has all content available locally\n   export      export images\n   import      import images\n   list, ls    list images known to containerd\n   mount       mount an image to a target path\n   unmount     unmount the image from the target\n   pull        pull an image from a remote\n   push        push an image to a remote\n   remove, rm  remove one or more images by reference\n   tag         tag an image\n   label       set and clear labels for an image\n\nOPTIONS:\n   --help, -h  show help\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230110102554-gfmvawy",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230110102554-gfmvawy"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "对镜像的更高级操作可以使用子命令 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "content"
				},
				{
					"Type": "NodeText",
					"Data": "，例如在线编辑镜像的 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "blob"
				},
				{
					"Type": "NodeText",
					"Data": " 并生成一个新的 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "digest"
				},
				{
					"Type": "NodeText",
					"Data": "："
				}
			]
		},
		{
			"ID": "20230110102554-aosv4o1",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230110102554-aosv4o1"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YmFzaA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "🐳  → ctr content ls\nDIGEST\t\t\t\t\t\t\t\t\tSIZE\tAGE\t\tLABELS\n...\n...\nsha256:fdd7fff110870339d34cf071ee90fbbe12bdbf3d1d9a14156995dfbdeccd7923\t740B\t7 days\t\tcontainerd.io/gc.ref.content.2=sha256:4e537e26e21bf61836f827e773e6e6c3006e3c01c6d59f4b058b09c2753bb929,containerd.io/gc.ref.content.1=sha256:188c0c94c7c576fff0792aca7ec73d67a2f7f4cb3a6e53a84559337260b36964,containerd.io/gc.ref.content.0=sha256:b7199797448c613354489644be1f60aa2d8e9c2278989100c72ede3001334f7b,containerd.io/distribution.source.ghcr.fuckcloudnative.io=yangchuansheng/grafana-backup-tool\n\n🐳  → ctr content edit --editor vim sha256:fdd7fff110870339d34cf071ee90fbbe12bdbf3d1d9a14156995dfbdeccd7923\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230110102554-577gyx6",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230110102554-577gyx6"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "容器"
				}
			]
		},
		{
			"ID": "20230110102554-1ej79bp",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230110102554-1ej79bp"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "创建容器："
				}
			]
		},
		{
			"ID": "20230110102554-j7qs1a0",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230110102554-j7qs1a0"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YmFzaA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "🐳  → ctr c create docker.io/library/nginx:alpine nginx\n\n🐳  → ctr c ls\nCONTAINER    IMAGE                             RUNTIME\nnginx        docker.io/library/nginx:alpine    io.containerd.runc.v2\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230110102554-ir8pye2",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230110102554-ir8pye2"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "查看容器的详细配置："
				}
			]
		},
		{
			"ID": "20230110102554-30av5fa",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230110102554-30av5fa"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YmFzaA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "# 和 docker inspect 类似\n🐳  → ctr c info nginx\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230110102554-b26iphx",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230110102554-b26iphx"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "其他操作可以自己查看帮助："
				}
			]
		},
		{
			"ID": "20230110102554-h13exor",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230110102554-h13exor"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YmFzaA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "🐳  → ctr c --help\nNAME:\n   ctr containers - manage containers\n\nUSAGE:\n   ctr containers command [command options] [arguments...]\n\nCOMMANDS:\n   create           create container\n   delete, del, rm  delete one or more existing containers\n   info             get info about a container\n   list, ls         list containers\n   label            set and clear labels for a container\n   checkpoint       checkpoint a container\n   restore          restore a container from checkpoint\n\nOPTIONS:\n   --help, -h  show help\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230110102554-aic7c6q",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230110102554-aic7c6q"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "任务"
				}
			]
		},
		{
			"ID": "20230110102554-46g2ckj",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230110102554-46g2ckj"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "上面 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "create"
				},
				{
					"Type": "NodeText",
					"Data": " 的命令创建了容器后，并没有处于运行状态，只是一个静态的容器。一个 container 对象只是包含了运行一个容器所需的资源及配置的数据结构，这意味着 namespaces、rootfs 和容器的配置都已经初始化成功了，只是用户进程(这里是 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "nginx"
				},
				{
					"Type": "NodeText",
					"Data": ")还没有启动。"
				}
			]
		},
		{
			"ID": "20230110102554-sd6p6y8",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230110102554-sd6p6y8"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "然而一个容器真正的运行起来是由 Task 对象实现的，"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "task"
				},
				{
					"Type": "NodeText",
					"Data": " 代表任务的意思，可以为容器设置网卡，还可以配置工具来对容器进行监控等。"
				}
			]
		},
		{
			"ID": "20230110102554-n6iiok4",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230110102554-n6iiok4"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "所以还需要通过 Task 启动容器："
				}
			]
		},
		{
			"ID": "20230110102554-c6ax17t",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230110102554-c6ax17t"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YmFzaA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "🐳  → ctr task start -d nginx\n\n🐳  → ctr task ls\nTASK     PID       STATUS\nnginx    131405    RUNNING\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230110102554-3cwgmby",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230110102554-3cwgmby"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "当然，也可以一步到位直接创建并运行容器："
				}
			]
		},
		{
			"ID": "20230110102554-agts628",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230110102554-agts628"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YmFzaA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "🐳  → ctr run -d docker.io/library/nginx:alpine nginx\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230110102554-galiii8",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230110102554-galiii8"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "进入容器："
				}
			]
		},
		{
			"ID": "20230110102554-mfhm3le",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230110102554-mfhm3le"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YmFzaA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "# 和 docker 的操作类似，但必须要指定 --exec-id，这个 id 可以随便写，只要唯一就行\n🐳  → ctr task exec --exec-id 0 -t nginx sh\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230110102554-uapyxwl",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230110102554-uapyxwl"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "暂停容器："
				}
			]
		},
		{
			"ID": "20230110102554-tsc79jn",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230110102554-tsc79jn"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YmFzaA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "# 和 docker pause 类似\n🐳  → ctr task pause nginx\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230110102554-8ss0uhf",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230110102554-8ss0uhf"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "容器状态变成了 PAUSED："
				}
			]
		},
		{
			"ID": "20230110102554-f2yoyr7",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230110102554-f2yoyr7"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YmFzaA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "🐳  → ctr task ls\nTASK     PID       STATUS\nnginx    149857    PAUSED\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230110102554-37t2bqf",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230110102554-37t2bqf"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "恢复容器："
				}
			]
		},
		{
			"ID": "20230110102554-lkvvma5",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230110102554-lkvvma5"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YmFzaA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "🐳  → ctr task resume nginx\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230110102554-n2x4img",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230110102554-n2x4img"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "ctr 没有 stop 容器的功能，只能暂停或者杀死容器。"
				}
			]
		},
		{
			"ID": "20230110102554-00xrfdl",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230110102554-00xrfdl"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "杀死容器："
				}
			]
		},
		{
			"ID": "20230110102554-iwo0tti",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230110102554-iwo0tti"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YmFzaA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "🐳  → ctr task kill nginx\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230110102554-4jq5x67",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230110102554-4jq5x67"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "获取容器的 cgroup 信息："
				}
			]
		},
		{
			"ID": "20230110102554-4urilgo",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230110102554-4urilgo"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YmFzaA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "# 这个命令用来获取容器的内存、CPU 和 PID 的限额与使用量。\n🐳  → ctr task metrics nginx\nID       TIMESTAMP\nnginx    2020-12-15 09:15:13.943447167 +0000 UTC\n\nMETRIC                   VALUE\nmemory.usage_in_bytes    77131776\nmemory.limit_in_bytes    9223372036854771712\nmemory.stat.cache        6717440\ncpuacct.usage            194187935\ncpuacct.usage_percpu     [0 335160 0 5395642 3547200 58559242 0 0 0 0 0 0 6534104 5427871 3032481 2158941 8513633 4620692 8261063 3885961 3667830 0 4367411 356280 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1585841 0 7754942 5818102 21430929 0 0 0 0 0 0 1811840 2241260 2673960 6041161 8210604 2991221 10073713 1111020 3139751 0 640080 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\npids.current             97\npids.limit               0\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230110102554-y9h9zii",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230110102554-y9h9zii"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "查看容器中所有进程的 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "PID"
				},
				{
					"Type": "NodeText",
					"Data": "："
				}
			]
		},
		{
			"ID": "20230110102554-kx9kha3",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230110102554-kx9kha3"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YmFzaA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "🐳  → ctr task ps nginx\nPID       INFO\n149857    -\n149921    -\n149922    -\n149923    -\n149924    -\n149925    -\n149926    -\n149928    -\n149929    -\n149930    -\n149932    -\n149933    -\n149934    -\n...\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230110102554-tl7nn3q",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230110102554-tl7nn3q"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "注意：这里的 PID 是宿主机看到的 PID，不是容器中看到的 PID。"
				}
			]
		},
		{
			"ID": "20230110102554-9w6ok03",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230110102554-9w6ok03"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "命名空间"
				}
			]
		},
		{
			"ID": "20230110102554-ixr6gla",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230110102554-ixr6gla"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "除了 k8s 有命名空间以外，Containerd 也支持命名空间。"
				}
			]
		},
		{
			"ID": "20230110102554-e8l7hsj",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230110102554-e8l7hsj"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YmFzaA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "🐳  → ctr ns ls\nNAME    LABELS\ndefault\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230110102554-xsq1qbn",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230110102554-xsq1qbn"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "如果不指定，"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "ctr"
				},
				{
					"Type": "NodeText",
					"Data": " 默认是 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "default"
				},
				{
					"Type": "NodeText",
					"Data": " 空间。"
				}
			]
		},
		{
			"ID": "20230110102554-6jxfsaz",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230110102554-6jxfsaz"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "目前 Containerd 的定位还是解决运行时，所以目前他还不能完全替代 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "dockerd"
				},
				{
					"Type": "NodeText",
					"Data": "，例如使用 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "Dockerfile"
				},
				{
					"Type": "NodeText",
					"Data": " 来构建镜像。其实这不是什么大问题，我再给大家介绍一个大招："
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "Containerd 和 Docker 一起用！"
				}
			]
		},
		{
			"ID": "20230110102554-y4ms1sm",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230110102554-y4ms1sm"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Containerd + Docker"
				}
			]
		},
		{
			"ID": "20230110102554-3gudmg9",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230110102554-3gudmg9"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "事实上，Docker 和 Containerd 是可以同时使用的，只不过 Docker 默认使用的 Containerd 的命名空间不是 default，而是 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "moby"
				},
				{
					"Type": "NodeText",
					"Data": "。下面就是见证奇迹的时刻。"
				}
			]
		},
		{
			"ID": "20230110102554-g7vll58",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230110102554-g7vll58"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "首先从其他装了 Docker 的机器或者 GitHub 上下载 Docker 相关的二进制文件，然后使用下面的命令启动 Docker："
				}
			]
		},
		{
			"ID": "20230110102554-9p72j6p",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230110102554-9p72j6p"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YmFzaA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "🐳  → dockerd --containerd /run/containerd/containerd.sock --cri-containerd\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230110102554-nx92772",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230110102554-nx92772"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "接着用 Docker 运行一个容器："
				}
			]
		},
		{
			"ID": "20230110102554-hmezrtz",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230110102554-hmezrtz"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YmFzaA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "🐳  → docker run -d --name nginx nginx:alpine\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230110102554-67reko0",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230110102554-67reko0"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "现在再回过头来查看 Containerd 的命名空间："
				}
			]
		},
		{
			"ID": "20230110102554-1kzguvc",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230110102554-1kzguvc"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YmFzaA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "🐳  → ctr ns ls\nNAME    LABELS\ndefault\nmoby\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230110102554-jf06n71",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230110102554-jf06n71"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "查看该命名空间下是否有容器："
				}
			]
		},
		{
			"ID": "20230110102554-1dy2lka",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230110102554-1dy2lka"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YmFzaA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "🐳  → ctr -n moby c ls\nCONTAINER                                                           IMAGE    RUNTIME\nb7093d7aaf8e1ae161c8c8ffd4499c14ba635d8e174cd03711f4f8c27818e89a    -        io.containerd.runtime.v1.linux\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230110102554-6sj2eer",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230110102554-6sj2eer"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "我艹，还可以酱紫？看来以后用 Containerd 不耽误我 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "docker build"
				},
				{
					"Type": "NodeText",
					"Data": " 了~~"
				}
			]
		},
		{
			"ID": "20230110102554-dlm0ulz",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230110102554-dlm0ulz"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "最后提醒一句：Kubernetes 用户不用惊慌，Kubernetes 默认使用的是 Containerd 的 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "k8s.io"
				},
				{
					"Type": "NodeText",
					"Data": " 命名空间，所以 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "ctr -n k8s.io"
				},
				{
					"Type": "NodeText",
					"Data": " 就能看到 Kubernetes 创建的所有容器啦，也不用担心 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "crictl"
				},
				{
					"Type": "NodeText",
					"Data": " 不支持 load 镜像了，因为 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "ctr -n k8s.io"
				},
				{
					"Type": "NodeText",
					"Data": " 可以 load 镜像啊，嘻嘻😬"
				}
			]
		},
		{
			"ID": "20230110102554-081k7e0",
			"Type": "NodeThematicBreak",
			"Properties": {
				"id": "20230110102554-081k7e0"
			}
		},
		{
			"ID": "20230110102554-34igc62",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230110102554-34igc62"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Kubernetes  1.18.2 1.17.5 1.16.9 1.15.12离线安装包发布地址http://store.lameleg.com ，欢迎体验。 使用了最新的sealos v3.3.6版本。 作了主机名解析配置优化，lvscare 挂载/lib/module解决开机启动ipvs加载问题， 修复lvscare社区netlink与3.10内核不兼容问题,sealos生成百年证书等特性。更多特性  "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "a",
					"TextMarkAHref": "https://github.com/fanux/sealos",
					"TextMarkTextContent": "https://github.com/fanux/sealos"
				},
				{
					"Type": "NodeText",
					"Data": " 。欢迎扫描下方的二维码加入钉钉群 ，钉钉群已经集成sealos的机器人实时可以看到sealos的动态。"
				}
			]
		},
		{
			"ID": "20230110102554-8rcxz5c",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230110102554-8rcxz5c"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://img2020.cnblogs.com/other/1737323/202012/1737323-20201221160753091-1088599171.jpg"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		}
	]
}