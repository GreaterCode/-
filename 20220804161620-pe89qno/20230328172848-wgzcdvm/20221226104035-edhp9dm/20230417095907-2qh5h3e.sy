{
	"ID": "20230417095907-2qh5h3e",
	"Spec": "1",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20230417095907-2qh5h3e",
		"scroll": "{\u0026quot;startId\u0026quot;:\u0026quot;20230417095907-c8pbeb5\u0026quot;,\u0026quot;endId\u0026quot;:\u0026quot;20230417095907-jo1c84u\u0026quot;,\u0026quot;scrollTop\u0026quot;:9807,\u0026quot;focusId\u0026quot;:\u0026quot;20230417095907-jo1c84u\u0026quot;,\u0026quot;focusStart\u0026quot;:19,\u0026quot;focusEnd\u0026quot;:19}",
		"title": "k8s 监控（一）安装 Prometheus - 掘金",
		"updated": "20230418010201"
	},
	"Children": [
		{
			"ID": "20230417095907-x4cvv6v",
			"Type": "NodeThematicBreak",
			"Properties": {
				"id": "20230417095907-x4cvv6v",
				"updated": "20230417095907"
			}
		},
		{
			"ID": "20230417095951-0fx9b82",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230417095951-0fx9b82"
			}
		},
		{
			"ID": "20230417095907-vdml3jp",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20230417095907-vdml3jp",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"ID": "20230417095907-u2hqhyr",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230417095907-u2hqhyr",
						"updated": "20230417095907"
					},
					"Children": [
						{
							"ID": "20230417095907-eeoxvag",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230417095907-eeoxvag",
								"updated": "20230417095907"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "a",
									"TextMarkAHref": "https://juejin.cn/post/6844903908251451406",
									"TextMarkTextContent": "https://juejin.cn/post/6844903908251451406"
								}
							]
						}
					]
				},
				{
					"ID": "20230417095907-wnqjvjl",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230417095907-wnqjvjl",
						"updated": "20230417095907"
					},
					"Children": [
						{
							"ID": "20230417095907-ypnybnd",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230417095907-ypnybnd",
								"updated": "20230417095907"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "自定义的监控，包括 jmx 等。 和 k8s metrics-server 进行结合。 目前而言，k8s 的监控业界公认的标准就是使用 Prometheus，Prometheus 也能很好的完成 k8s 的监控工作。只不过如果使用原生 Prometheus 进行监控的话，还要完…"
								}
							]
						}
					]
				},
				{
					"ID": "20230417095907-v6fbfe2",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230417095907-v6fbfe2",
						"updated": "20230417095907"
					},
					"Children": [
						{
							"ID": "20230417095907-cuewc8v",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230417095907-cuewc8v",
								"updated": "20230417095907"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "2023-04-17 09:59:07"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230417095907-nr447kc",
			"Type": "NodeThematicBreak",
			"Properties": {
				"id": "20230417095907-nr447kc",
				"updated": "20230417095907"
			}
		},
		{
			"ID": "20230417095907-fcec5hx",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230417095907-fcec5hx",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "本文属于 k8s 监控系列，其余文章为："
				}
			]
		},
		{
			"ID": "20230417095907-f2w8eyk",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20230417095907-f2w8eyk",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"ID": "20230417095907-n1f8caz",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20230417095907-n1f8caz",
						"updated": "20230417095907"
					},
					"Children": [
						{
							"ID": "20230417095907-1q6b0mp",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230417095907-1q6b0mp",
								"updated": "20230417095907"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "a",
									"TextMarkAHref": "https://juejin.cn/post/6844903921207492621",
									"TextMarkATitle": "https://juejin.cn/post/6844903921207492621",
									"TextMarkTextContent": "k8s 监控（二）监控集群组件和 pod"
								}
							]
						}
					]
				},
				{
					"ID": "20230417095907-cbbosr0",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20230417095907-cbbosr0",
						"updated": "20230417095907"
					},
					"Children": [
						{
							"ID": "20230417095907-xq76loi",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230417095907-xq76loi",
								"updated": "20230417095907"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "a",
									"TextMarkAHref": "https://juejin.cn/post/6844903967218991117",
									"TextMarkATitle": "https://juejin.cn/post/6844903967218991117",
									"TextMarkTextContent": "k8s 监控（三）prometheus-adapter"
								}
							]
						}
					]
				},
				{
					"ID": "20230417095907-dflc98o",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "My4=",
						"Num": 3
					},
					"Properties": {
						"id": "20230417095907-dflc98o",
						"updated": "20230417095907"
					},
					"Children": [
						{
							"ID": "20230417095907-trsubx9",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230417095907-trsubx9",
								"updated": "20230417095907"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "a",
									"TextMarkAHref": "https://juejin.cn/post/6844904057098731534",
									"TextMarkATitle": "https://juejin.cn/post/6844904057098731534",
									"TextMarkTextContent": "k8s 监控（四）监控宿主机"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230417095907-nvw9k4p",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230417095907-nvw9k4p",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "k8s 监控我们要完成以下几点："
				}
			]
		},
		{
			"ID": "20230417095907-56k85h9",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20230417095907-56k85h9",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"ID": "20230417095907-0tb16eg",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230417095907-0tb16eg",
						"updated": "20230417095907"
					},
					"Children": [
						{
							"ID": "20230417095907-6s1bzq5",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230417095907-6s1bzq5",
								"updated": "20230417095907"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "监控 master/node 本身；"
								}
							]
						}
					]
				},
				{
					"ID": "20230417095907-vbeg5p6",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230417095907-vbeg5p6",
						"updated": "20230417095907"
					},
					"Children": [
						{
							"ID": "20230417095907-6b3yklw",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230417095907-6b3yklw",
								"updated": "20230417095907"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "监控集群组件 apiServer、etcd 等；"
								}
							]
						}
					]
				},
				{
					"ID": "20230417095907-0s8x4a9",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230417095907-0s8x4a9",
						"updated": "20230417095907"
					},
					"Children": [
						{
							"ID": "20230417095907-drj7vzr",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230417095907-drj7vzr",
								"updated": "20230417095907"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "监控需要关注的 pod；"
								}
							]
						}
					]
				},
				{
					"ID": "20230417095907-pnye2pf",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230417095907-pnye2pf",
						"updated": "20230417095907"
					},
					"Children": [
						{
							"ID": "20230417095907-taxitc1",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230417095907-taxitc1",
								"updated": "20230417095907"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "自定义的监控，包括 jmx 等。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230417095907-rvc33rk",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230417095907-rvc33rk",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "有了这些监控指标之后，我们还需要做到以下几点："
				}
			]
		},
		{
			"ID": "20230417095907-kvyhrz1",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20230417095907-kvyhrz1",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"ID": "20230417095907-uywt8dd",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20230417095907-uywt8dd",
						"updated": "20230417095907"
					},
					"Children": [
						{
							"ID": "20230417095907-14y9x6y",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230417095907-14y9x6y",
								"updated": "20230417095907"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "制定相应的告警规则；"
								}
							]
						}
					]
				},
				{
					"ID": "20230417095907-d4vp1rs",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20230417095907-d4vp1rs",
						"updated": "20230417095907"
					},
					"Children": [
						{
							"ID": "20230417095907-su580hx",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230417095907-su580hx",
								"updated": "20230417095907"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "提供对应的 webhook 发出告警；"
								}
							]
						}
					]
				},
				{
					"ID": "20230417095907-luoeifx",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "My4=",
						"Num": 3
					},
					"Properties": {
						"id": "20230417095907-luoeifx",
						"updated": "20230417095907"
					},
					"Children": [
						{
							"ID": "20230417095907-1rzy1oa",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230417095907-1rzy1oa",
								"updated": "20230417095907"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "部署 grafana 进行图形展示；"
								}
							]
						}
					]
				},
				{
					"ID": "20230417095907-2sp3zx0",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "NC4=",
						"Num": 4
					},
					"Properties": {
						"id": "20230417095907-2sp3zx0",
						"updated": "20230417095907"
					},
					"Children": [
						{
							"ID": "20230417095907-m6ipve7",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230417095907-m6ipve7",
								"updated": "20230417095907"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "监控相关组件的高可用；"
								}
							]
						}
					]
				},
				{
					"ID": "20230417095907-7iqcyqp",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "NS4=",
						"Num": 5
					},
					"Properties": {
						"id": "20230417095907-7iqcyqp",
						"updated": "20230417095907"
					},
					"Children": [
						{
							"ID": "20230417095907-nz9gguo",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230417095907-nz9gguo",
								"updated": "20230417095907"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "和 k8s metrics-server 进行结合。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230417095907-p21in9z",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230417095907-p21in9z",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "目前而言，k8s 的监控业界公认的标准就是使用 Prometheus，Prometheus 也能很好的完成 k8s 的监控工作。只不过如果使用原生 Prometheus 进行监控的话，还要完成上述操作，需要做的工作非常多，需要对 k8s 以及 Prometheus 本身有一定的理解。"
				}
			]
		},
		{
			"ID": "20230417095907-nyzkdcn",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230417095907-nyzkdcn",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "为什么不使用 prometheus-operator"
				}
			]
		},
		{
			"ID": "20230417095907-iyhggl1",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230417095907-iyhggl1",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "为了方便操作，coreos 提供了 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "a",
					"TextMarkAHref": "https://link.juejin.cn/?target=https%3A%2F%2Fgithub.com%2Fcoreos%2Fprometheus-operator",
					"TextMarkATitle": "https://github.com/coreos/prometheus-operator",
					"TextMarkTextContent": "prometheus-operator"
				},
				{
					"Type": "NodeText",
					"Data": " 这样一个产品，它包装了 Prometheus，并且还提供了四个自定义的 k8s 类型（CustomResourceDefinitions），让你通过定义 manifest 的方式还完成新监控（job）以及告警规则的添加，而无需手动操作 Prometheus 的配置文件，让整个过程更 k8s。"
				}
			]
		},
		{
			"ID": "20230417095907-mq9360p",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230417095907-mq9360p",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "并且在此基础之上，coreos 还有推出了 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "a",
					"TextMarkAHref": "https://link.juejin.cn/?target=https%3A%2F%2Fgithub.com%2Fcoreos%2Fkube-prometheus",
					"TextMarkATitle": "https://github.com/coreos/kube-prometheus",
					"TextMarkTextContent": "kube-prometheus"
				},
				{
					"Type": "NodeText",
					"Data": " 这样的升级版，它在 prometheus-operator 的基础之上高可用了 Prometheus 和 Alertmanager，提供了 node-exporter 用于宿主机的监控，还有 Kubernetes Metrics APIs 的 Prometheus 适配器和 grafana，让你实现一键部署。"
				}
			]
		},
		{
			"ID": "20230417095907-ozp4f8y",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230417095907-ozp4f8y",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "老外喜欢这么搞，是不是一定合适我不知道，但是肯定是存在问题的，毕竟这个 prometheus-operator 依然处于 bate 状态。并且它里面多出的很多组件都只是为了避免让你直接操作配置文件，而这些组件都是额外的消耗。"
				}
			]
		},
		{
			"ID": "20230417095907-g5qy3xk",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230417095907-g5qy3xk",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "同时也是因为你不能直接操纵配置文件，所以一旦你想修改配置文件就非常困难了，因为配置文件是自动生成的，一旦你想要修改它的 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "relabel_config"
				},
				{
					"Type": "NodeText",
					"Data": "​ 配置，你只能在它生成的规则后面添加。"
				}
			]
		},
		{
			"ID": "20230417095907-x1xe3mu",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230417095907-x1xe3mu",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "这样会出现一种情况，就是你可能想删掉它为你自动生成的标签，但是这个标签本来就没有，是它为你生成的，但是生成之后你又想删除，这样就平白多了两台规则。并且一旦你配置定义错了，因为是 prometheus-operator 帮你 reload 的，因此就算有错误你也收不到。"
				}
			]
		},
		{
			"ID": "20230417095907-kbf7u01",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230417095907-kbf7u01",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "如果你只是简单使用的话可以直接使用 kube-prometheus。但是只要你想要了解其中的原理部分，或者有自己定制化的需求，那就搞原生的吧，所有 prometheus-operator 能够实现的，原生都能实现。"
				}
			]
		},
		{
			"ID": "20230417095907-tldjc34",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230417095907-tldjc34",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "怎么做"
				}
			]
		},
		{
			"ID": "20230417095907-no0bg18",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230417095907-no0bg18",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "本文会从 0 开始，一点一点完成一开始的监控需求。即使你还是想用 kube-prometheus，等你看完我的所有文章之后，你使用起来也就没有丝毫的障碍了。"
				}
			]
		},
		{
			"ID": "20230417095907-p3w7hgx",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230417095907-p3w7hgx",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "我们要做的就是将 Prometheus 镜像部署到 k8s 中，然后使用 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "kubernetes_sd_config"
				},
				{
					"Type": "NodeText",
					"Data": "​ 对 k8s 进行完成监控。当然，prometheus-operator 也是这么做的。"
				}
			]
		},
		{
			"ID": "20230417095907-3fc20yk",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230417095907-3fc20yk",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "虽然 Prometheus 可以做到对 k8s 集群中所有 pod 的发现，但是 pod 的 ip 会随时改变，而且你进行所有 pod 的发现让你无从对它们进行分类管理，这样就会非常乱。"
				}
			]
		},
		{
			"ID": "20230417095907-rnb5xsx",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230417095907-rnb5xsx",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "因此，我这里会和 prometheus-operator 一样，只对 endpoint 进行发现。因为创建 service 就会创建对应的 endpoint，所以我们完全可以通过 service 对 pod 进行分类，然后针对一类 pod 我们使用一个 Prometheus 的 job，这样就非常简洁明了了。"
				}
			]
		},
		{
			"ID": "20230417095907-77gy9id",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230417095907-77gy9id",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "文章中所有的文件我都已上传到 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "a",
					"TextMarkAHref": "https://link.juejin.cn/?target=https%3A%2F%2Fgithub.com%2Fmaxadd%2Fk8s-prometheus.git",
					"TextMarkATitle": "https://github.com/maxadd/k8s-prometheus.git",
					"TextMarkTextContent": "GitHub"
				},
				{
					"Type": "NodeText",
					"Data": "，你可以直接 clone 下来，而不需要频繁的复制粘贴。"
				}
			]
		},
		{
			"ID": "20230417095907-551c0ng",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20230417095907-551c0ng",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20230417095907-pua61c1",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20230417095907-pua61c1",
						"updated": "20230417095907"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "本文中 k8s 版本为 1.14.2，采用 kubeadm 安装。此外，本文不会对 Prometheus 进行过多的介绍，也就是说你需要有一定的 Prometheus 基础。"
						}
					]
				}
			]
		},
		{
			"ID": "20230417095907-w9weylv",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230417095907-w9weylv",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "查询 kubelet 指标页面"
				}
			]
		},
		{
			"ID": "20230417095907-j925n0v",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230417095907-j925n0v",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "大家应该清楚，应用如果想要被 Prometheus 监控，就应该提供一个 url，一旦访问这个 url，那么所有监控项就会以文本的形式一行行打印出来，Prometheus 就通过访问这个 url 来获得所有的监控数据，这个 uri 默认为 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "http[s]://IP:PORT/metrics"
				},
				{
					"Type": "NodeText",
					"Data": "​。"
				}
			]
		},
		{
			"ID": "20230417095907-iw804zl",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230417095907-iw804zl",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "因为 Prometheus 已经成为了一个标准，因此 k8s 的所有组件都提供了 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "/metrics"
				},
				{
					"Type": "NodeText",
					"Data": "​ 这个 url。对于一些主机层面或者没有提供这个 url 应用的监控，可以使用一个中间产品，这个产品收集应用相关的监控指标，然后提供这个 url，让 Prometheus 进行采集。"
				}
			]
		},
		{
			"ID": "20230417095907-bpgkute",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230417095907-bpgkute",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "这种产品称为 XXX_exporter，比如 node_exporter、jmx_exporter 等，官方"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "a",
					"TextMarkAHref": "https://link.juejin.cn/?target=https%3A%2F%2Fprometheus.io%2Fdocs%2Finstrumenting%2Fexporters%2F",
					"TextMarkATitle": "https://prometheus.io/docs/instrumenting/exporters/",
					"TextMarkTextContent": "收录了"
				},
				{
					"Type": "NodeText",
					"Data": "很多的 exporter，有官方和非官方的，你也可以通过它们提供的客户端库自己实现一个。"
				}
			]
		},
		{
			"ID": "20230417095907-grpd1z6",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230417095907-grpd1z6",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "既然 Prometheus 能够通过 http 收集，那通过 curl 一样也行。因此在使用 Prometheus 收集之前，我会使用 curl 命令将所有要收集的指标数据先输出出来，以便大家心中有数。"
				}
			]
		},
		{
			"ID": "20230417095907-84rwhrp",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230417095907-84rwhrp",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "当然，因为是在 k8s 环境，监控指标在收取之后会附加上一些标签，比如它所在的名称空间、所属的 service、pod 名称，以及 ip 端口等，这些标签你也可以选择加还是不加。"
				}
			]
		},
		{
			"ID": "20230417095907-o6ebyec",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230417095907-o6ebyec",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "话不多说，我们先看看 kubelet 的指标数据。先创建一个目录，用于存放后续所有的 manifest 文件："
				}
			]
		},
		{
			"ID": "20230417095907-tynovz5",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230417095907-tynovz5",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YmFzaA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "mkdir -p /opt/kube/prometheus\n复制代码\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230417095907-ngwhyp3",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230417095907-ngwhyp3",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "首先创建一个名称空间，所有监控相关的资源都放在这个名称空间之下："
				}
			]
		},
		{
			"ID": "20230417095907-vadltno",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230417095907-vadltno",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "dmJuZXQ="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "# vim 00namespace.yml\napiVersion: v1\nkind: Namespace\nmetadata:\n  name: monitoring\n\n# kubectl apply -f 00namespace.yml\n复制代码\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230417095907-46uavd5",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230417095907-46uavd5",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "我们知道，pod 都是由 kubelet 创建的，因此 pod 的相关指标（包括使用的 cpu、内存、流量等）是由 kubelet 提供的，我们现在就可以访问 kubelet 的指标页面，看看有哪些指标数据。"
				}
			]
		},
		{
			"ID": "20230417095907-orew8ve",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230417095907-orew8ve",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "作为一个守护进程，kubelet 默认监听 10250 端口，因此可以在 master 或者 node 上直接访问："
				}
			]
		},
		{
			"ID": "20230417095907-2zsrcg0",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230417095907-2zsrcg0",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YXJkdWlubw=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "# curl https://127.0.0.1:10250/metrics/cadvisor -k\nUnauthorized\n复制代码\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230417095907-rjwauom",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230417095907-rjwauom",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "其中："
				}
			]
		},
		{
			"ID": "20230417095907-8qt3b6w",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20230417095907-8qt3b6w",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"ID": "20230417095907-gx0pawb",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230417095907-gx0pawb",
						"updated": "20230417095907"
					},
					"Children": [
						{
							"ID": "20230417095907-cc9bsvd",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230417095907-cc9bsvd",
								"updated": "20230417095907"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "必须使用 https；"
								}
							]
						}
					]
				},
				{
					"ID": "20230417095907-zwkoma5",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230417095907-zwkoma5",
						"updated": "20230417095907"
					},
					"Children": [
						{
							"ID": "20230417095907-gshwbym",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230417095907-gshwbym",
								"updated": "20230417095907"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "metrics/cadvisor"
								},
								{
									"Type": "NodeText",
									"Data": "​ 是 kubelet pod 相关的监控指标，它还有一个 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "metrics"
								},
								{
									"Type": "NodeText",
									"Data": "​，这是 kubelet 自身的监控指标；"
								}
							]
						}
					]
				},
				{
					"ID": "20230417095907-bx6sm70",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230417095907-bx6sm70",
						"updated": "20230417095907"
					},
					"Children": [
						{
							"ID": "20230417095907-yzi3alu",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230417095907-yzi3alu",
								"updated": "20230417095907"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "-k"
								},
								{
									"Type": "NodeText",
									"Data": "​ 表示不验证 kubelet 证书，因为整个集群都是使用自签署证书，因此没必要验证；"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230417095907-71g7o0w",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230417095907-71g7o0w",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "上面提示我们没有认证，看不到指标数据。认证很简单，使用 token 即可，那么我们首先要创建这个 token。大家应该清楚，当我们创建一个 serviceAccount 之后，k8s 会自动为其生成一个 secret，这个 secret 中就有 token 信息。"
				}
			]
		},
		{
			"ID": "20230417095907-ysftqvb",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230417095907-ysftqvb",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "因此我们需要创建了一个 clusterRole，并创建一个 clusterrolebinding 将权限绑定到一个 serviceAccount 上，那么我们就拿到了这个权限的 token 了。"
				}
			]
		},
		{
			"ID": "20230417095907-zfb0mer",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230417095907-zfb0mer",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "那我们需要创建 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "prometheus-clusterRole.yml"
				},
				{
					"Type": "NodeText",
					"Data": "​、"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "prometheus-clusterRoleBinding.yml"
				},
				{
					"Type": "NodeText",
					"Data": "​ 和 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "prometheus-serviceAccount.yml"
				},
				{
					"Type": "NodeText",
					"Data": "​ 这三个文件，它们的内容如下。"
				}
			]
		},
		{
			"ID": "20230417095907-9ao9ixj",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230417095907-9ao9ixj",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "prometheus-clusterRole.yml："
				}
			]
		},
		{
			"ID": "20230417095907-rlj3wvh",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230417095907-rlj3wvh",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "eWFtbA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "apiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n  name: prometheus-k8s\nrules:\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes/metrics\n    verbs:\n      - get\n  - nonResourceURLs:\n      - /metrics\n    verbs:\n      - get\n复制代码\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230417095907-dz9nlvd",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230417095907-dz9nlvd",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "prometheus-clusterRoleBinding.yml："
				}
			]
		},
		{
			"ID": "20230417095907-4nlupyj",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230417095907-4nlupyj",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "eWFtbA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "apiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  name: prometheus-k8s\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: prometheus-k8s\nsubjects:\n  - kind: ServiceAccount\n    name: prometheus-k8s\n    namespace: monitoring\n复制代码\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230417095907-nfnl8e8",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230417095907-nfnl8e8",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "prometheus-serviceAccount.yml："
				}
			]
		},
		{
			"ID": "20230417095907-7ps3bi6",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230417095907-7ps3bi6",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "eWFtbA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: prometheus-k8s\n  namespace: monitoring\n复制代码\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230417095907-5e8mmcj",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230417095907-5e8mmcj",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "这样我们就创建了一个 ServiceAccount，名为 prometheus-k8s，这个 ServiceAccount 不仅现在可以用来获取 kubelet 的监控指标，后续 Prometheus 也会使用这个 serviceAccount 启动。"
				}
			]
		},
		{
			"ID": "20230417095907-rnqxioj",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230417095907-rnqxioj",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "kubectl apply -f prometheus-clusterRole.yml\nkubectl apply -f prometheus-clusterRoleBinding.yml\nkubectl apply -f prometheus-serviceAccount.yml\n复制代码\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230417095907-zt9iqov",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230417095907-zt9iqov",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "创建完成后，会自动在生成一个 secret，里面包含了 token："
				}
			]
		},
		{
			"ID": "20230417095907-oia26rk",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230417095907-oia26rk",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YmFzaA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "# kubectl -n monitoring get secret\nNAME                         TYPE                                  DATA   AGE\nprometheus-k8s-token-xmkd4   kubernetes.io/service-account-token   3      3h26m\n复制代码\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230417095907-7pnkbih",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230417095907-7pnkbih",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "获取 token："
				}
			]
		},
		{
			"ID": "20230417095907-c98621w",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230417095907-c98621w",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "aW5p"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "token=`kubectl -n monitoring get secret prometheus-k8s-token-xmkd4 -o jsonpath={.data.token} | base64 -d`\n复制代码\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230417095907-rnaqkk7",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230417095907-rnaqkk7",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "然后使用这个 token 访问 kubelet 的指标页面："
				}
			]
		},
		{
			"ID": "20230417095907-pajkj94",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230417095907-pajkj94",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YmFzaA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "curl https://127.0.0.1:10250/metrics/cadvisor -k -H \"Authorization: Bearer $token\"\n复制代码\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230417095907-m80r00g",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230417095907-m80r00g",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "只需要将这个 token 放到请求头中就行，然后就可以看到所有的监控指标了。"
				}
			]
		},
		{
			"ID": "20230417095907-m06lgfl",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230417095907-m06lgfl",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "可以看到里面有很多这样的标签的指标存在："
				}
			]
		},
		{
			"ID": "20230417095907-17q9wt3",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230417095907-17q9wt3",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YXJkdWlubw=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "{container=\"\",container_name=\"\",id=\"/system.slice/tuned.service\",image=\"\",name=\"\",namespace=\"\",pod=\"\",pod_name=\"\",state=\"stopped\"}\n复制代码\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230417095907-w9b8j14",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230417095907-w9b8j14",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "我完全没有搞懂这些是干啥的，不知道有没有用，反正我是准备全删除的。使用 Prometheus 就是有这样的问题，什么样的指标数据都有，恨不得把所有的都暴露出来，如果你是默认使用而没有管里面到底有什么指标数据的话，你可能接收了几倍的无用数据（对于很多人来讲，确实是没用的，因为从来都不会关注），造成了大量的资源浪费。"
				}
			]
		},
		{
			"ID": "20230417095907-7o8fani",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230417095907-7o8fani",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "kubelet 除了 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "/metrics/cadvisor"
				},
				{
					"Type": "NodeText",
					"Data": "​ 这个 url 之外，还有一个 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "/metrics"
				},
				{
					"Type": "NodeText",
					"Data": "​，这是它本身的监控指标而非 pod 的。说实话，里面的数据我都看不懂，我在考虑要不要接收。"
				}
			]
		},
		{
			"ID": "20230417095907-f7eie58",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230417095907-f7eie58",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "通过这种方式，其他几个 k8s 组件你应该都能够访问了，但是 etcd 不行，它需要验证客户端证书。"
				}
			]
		},
		{
			"ID": "20230417095907-cfahxl2",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230417095907-cfahxl2",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "查询 etcd 指标页面"
				}
			]
		},
		{
			"ID": "20230417095907-kg3g4t4",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230417095907-kg3g4t4",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "etcd 的指标页面的 url 也是 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "/metrics"
				},
				{
					"Type": "NodeText",
					"Data": "​，但是你想要访问它需要提供证书，因为它会验证客户端证书。当然你可以在它的启动参数中通过 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "--listen-metrics-urls http://ip:port"
				},
				{
					"Type": "NodeText",
					"Data": "​ 让监控指标页使用 http 而非 https，这样就不用提供证书了。"
				}
			]
		},
		{
			"ID": "20230417095907-tt1c5g7",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230417095907-tt1c5g7",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "etcd 虽然部署在容器中，但是由于使用了 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "hostNetwork"
				},
				{
					"Type": "NodeText",
					"Data": "​，所以我们可以通过直接访问 master 的 2379 端口访问它。默认它会采用了 https，因此我们需要提供它的 peer 证书。如果 k8s 是使用 kubeadm 安装的，etcd 的证书在 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "/etc/kubernetes/pki/etcd/"
				},
				{
					"Type": "NodeText",
					"Data": "​ 目录下。"
				}
			]
		},
		{
			"ID": "20230417095907-t6owgq9",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230417095907-t6owgq9",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "因此访问 etcd 的命令为："
				}
			]
		},
		{
			"ID": "20230417095907-tznnoay",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230417095907-tznnoay",
				"updated": "20230418010127"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YmFzaA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "curl https://127.0.0.1:2379/metrics --cacert /etc/kubernetes/pki/etcd/ca.crt --cert /etc/kubernetes/pki/etcd/healthcheck-client.crt --key /etc/kubernetes/pki/etcd/healthcheck-client.key\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230417095907-zyw622z",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230417095907-zyw622z",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "后面我们需要将这三个文件挂载到 Prometheus 容器中，以便它能收集 etcd 监控数据。"
				}
			]
		},
		{
			"ID": "20230417095907-6hxekrn",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230417095907-6hxekrn",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "安装 Prometheus"
				}
			]
		},
		{
			"ID": "20230417095907-72ma989",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230417095907-72ma989",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Prometheus 本身会依赖一些东西，因此在安装之前我们必须做一些准备工作。"
				}
			]
		},
		{
			"ID": "20230417095907-jtgr11l",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230417095907-jtgr11l",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "我们先创建两个 configmap，一个是 Prometheus 的配置文件，另一个是告警的规则文件。配置文件一定要使用 configmap 进行保存，不能直接放在容器中，不然容器挂了配置文件就没了。"
				}
			]
		},
		{
			"ID": "20230417095907-ivw9rxf",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230417095907-ivw9rxf",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Prometheus 配置文件"
				}
			]
		},
		{
			"ID": "20230417095907-6mupyti",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230417095907-6mupyti",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "先创建 Prometheus 配置文件 configmap "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "prometheus-config.yml"
				},
				{
					"Type": "NodeText",
					"Data": "​，它的内容如下："
				}
			]
		},
		{
			"ID": "20230417095907-2utkd94",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230417095907-2utkd94",
				"updated": "20230418010134"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "dmJuZXQ="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "apiVersion: v1\ndata:\n  prometheus.yml: |\n    global:\n      evaluation_interval: 30s\n      scrape_interval: 30s\n      external_labels:\n        prometheus: monitoring/k8s\n    rule_files:\n    - /etc/prometheus/rules/*.yml\n    scrape_configs:\n    - job_name: prometheus\n      honor_labels: false\n      kubernetes_sd_configs:\n      - role: endpoints\n        namespaces:\n          names:\n          - monitoring\n      scrape_interval: 30s\n      relabel_configs:\n      - action: keep\n        source_labels:\n        - __meta_kubernetes_service_label_prometheus\n        regex: k8s\n      - source_labels:\n        - __meta_kubernetes_endpoint_address_target_kind\n        - __meta_kubernetes_endpoint_address_target_name\n        separator: ;\n        regex: Pod;(.*)\n        replacement: ${1}\n        target_label: pod\n      - source_labels:\n        - __meta_kubernetes_namespace\n        target_label: namespace\n      - source_labels:\n        - __meta_kubernetes_service_name\n        target_label: service\n      - source_labels:\n        - __meta_kubernetes_pod_name\n        target_label: pod\n      - source_labels:\n        - __meta_kubernetes_service_name\n        target_label: job\n        replacement: ${1}\n      - target_label: endpoint\n        replacement: web\nkind: ConfigMap\nmetadata:\n  name: prometheus\n  namespace: monitoring\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230417095907-c8pbeb5",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230417095907-c8pbeb5",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "简单的说明下这个配置文件的内容：这个配置文件只是一个初版，可以看到里面只有一个 job，就是监控 Prometheus 本身。可以看到，这里使用了 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "kubernetes_sd_configs"
				},
				{
					"Type": "NodeText",
					"Data": "​，使用这个配置可以自动发现 k8s 中 node、service、pod、endpoint、ingress，并为其添加监控，更多的内容可以直接查看"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "a",
					"TextMarkAHref": "https://link.juejin.cn/?target=https%3A%2F%2Fprometheus.io%2Fdocs%2Fprometheus%2Flatest%2Fconfiguration%2Fconfiguration%2F%23kubernetes_sd_config",
					"TextMarkATitle": "https://prometheus.io/docs/prometheus/latest/configuration/configuration/#kubernetes_sd_config",
					"TextMarkTextContent": "官方文档"
				},
				{
					"Type": "NodeText",
					"Data": "。"
				}
			]
		},
		{
			"ID": "20230417095907-zbuzjma",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230417095907-zbuzjma",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "这里使用的是 endpoint 的方式对 Prometheus 本身进行发现，你可以有疑问了，为什么不直接对自身的 127.0.0.1:9090 进行采集呢？因为考虑到 Prometheus 可能会有多台，这样即使有多台，它们也都在一个 job 下面。"
				}
			]
		},
		{
			"ID": "20230417095907-du7prli",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230417095907-du7prli",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "当然，你如果嫌麻烦也可以直接对自身进行采集，没有任何问题。然后下面就是一堆的 relabel_configs 配置了，我一个个解释这些配置是干啥的。"
				}
			]
		},
		{
			"ID": "20230417095907-bwuyzlb",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230417095907-bwuyzlb",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "首先看第一个配置："
				}
			]
		},
		{
			"ID": "20230417095907-5lib3eh",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230417095907-5lib3eh",
				"updated": "20230418010137"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "eWFtbA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "- action: keep\n  source_labels:\n    - __meta_kubernetes_service_label_prometheus\n  regex: k8s\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230417095907-175nmr8",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230417095907-175nmr8",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "大家应该知道，每创建一个 service 就会创建一个对应的 endpoint，但是 prometheus 的 endpoint 的发现会对 k8s 指定名称空间下所有 endpoint 进行发现，那么怎么保证 Prometheus 只发现我们需要的 endpoint 呢？答案是通过 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "relabel_configs"
				},
				{
					"Type": "NodeText",
					"Data": "​，这里 keep 就是干这个的。"
				}
			]
		},
		{
			"ID": "20230417095907-qt6o1qp",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230417095907-qt6o1qp",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "上面配置的意思是只有 service 的标签包含 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "prometheus=k8s"
				},
				{
					"Type": "NodeText",
					"Data": "​，k8s 才会对其对应的 endpoint 进行采集。所以我们后面要为 Prometheus 创建一个 service，并且要为这个 service 加上 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "prometheus: k8s"
				},
				{
					"Type": "NodeText",
					"Data": "​ 这样的标签。"
				}
			]
		},
		{
			"ID": "20230417095907-0beqdt1",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230417095907-0beqdt1",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "这里没有指定 url，Prometheus 会采集默认的 url "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "/metrics"
				},
				{
					"Type": "NodeText",
					"Data": "​。"
				}
			]
		},
		{
			"ID": "20230417095907-1puvyee",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230417095907-1puvyee",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "接着看下一段配置："
				}
			]
		},
		{
			"ID": "20230417095907-nwbcive",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230417095907-nwbcive",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "eWFtbA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "- source_labels:\n    - __meta_kubernetes_endpoint_address_target_kind\n    - __meta_kubernetes_endpoint_address_target_name\n  separator: ;\n  regex: Pod;(.*)\n  replacement: ${1}\n  target_label: pod\n复制代码\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230417095907-rwldhvk",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230417095907-rwldhvk",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "如果 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "__meta_kubernetes_endpoint_address_target_kind"
				},
				{
					"Type": "NodeText",
					"Data": "​ 的值为 Pod，"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "__meta_kubernetes_endpoint_address_target_name"
				},
				{
					"Type": "NodeText",
					"Data": "​ 的值为 prometheus-0，在它们之间加上一个 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": ";"
				},
				{
					"Type": "NodeText",
					"Data": "​ 之后，它们合起来就是 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "Pod;prometheus-0"
				},
				{
					"Type": "NodeText",
					"Data": "​。使用正则表达式 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "Pod;(.*)"
				},
				{
					"Type": "NodeText",
					"Data": "​ 对其进行匹配，那么 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "${1}"
				},
				{
					"Type": "NodeText",
					"Data": "​ 就是取第一个分组，它值就是 prometheus-0，最后将这个值交给 pod 这个标签。"
				}
			]
		},
		{
			"ID": "20230417095907-6oxijpu",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230417095907-6oxijpu",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "因此这一段配置就是为所有采集到的监控指标增加一个 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "pod=prometheus-0"
				},
				{
					"Type": "NodeText",
					"Data": "​ 的标签。"
				}
			]
		},
		{
			"ID": "20230417095907-vc9t3a1",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20230417095907-vc9t3a1",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20230417095907-tevyav4",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20230417095907-tevyav4",
						"updated": "20230417095907"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "如果 "
						},
						{
							"Type": "NodeTextMark",
							"TextMarkType": "code",
							"TextMarkTextContent": "__meta_kubernetes_endpoint_address_target_kind"
						},
						{
							"Type": "NodeText",
							"Data": "​ 的值不是 Pod，那么不会添加任何标签。"
						}
					]
				}
			]
		},
		{
			"ID": "20230417095907-32h55fg",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230417095907-32h55fg",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "后面的配置我想就不用多说了，无非就是将指定的元标签转换为指定的标签，因为不转换的话，元标签会在 relabel 之后都会被干掉。"
				}
			]
		},
		{
			"ID": "20230417095907-4h1cq18",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230417095907-4h1cq18",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "创建它："
				}
			]
		},
		{
			"ID": "20230417095907-wdb63lp",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230417095907-wdb63lp",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YXJkdWlubw=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "kubectl apply -f prometheus-config.yml\n复制代码\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230417095907-6bukqxq",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230417095907-6bukqxq",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Prometheus 规则文件"
				}
			]
		},
		{
			"ID": "20230417095907-ji2msf1",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230417095907-ji2msf1",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "我们目前不需要任何规则文件，但是由于会将对应 configmap 挂载进容器中，所以我们创建一个空的规则文件。"
				}
			]
		},
		{
			"ID": "20230417095907-hxetesb",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230417095907-hxetesb",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "先创建一个 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "prometheus-config-rulefiles.yml"
				},
				{
					"Type": "NodeText",
					"Data": "​ 文件，它的内容如下："
				}
			]
		},
		{
			"ID": "20230417095907-whqbq21",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230417095907-whqbq21",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "eWFtbA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "apiVersion: v1\ndata:\n  k8s.yml: \"\"\nkind: ConfigMap\nmetadata:\n  name: prometheus-rulefiles\n  namespace: monitoring\n复制代码\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230417095907-l1whfu6",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230417095907-l1whfu6",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "创建："
				}
			]
		},
		{
			"ID": "20230417095907-2br042x",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230417095907-2br042x",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YXJkdWlubw=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "kubectl apply -f prometheus-config-rulefiles.yml\n复制代码\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230417095907-iczxmwb",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230417095907-iczxmwb",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "role 和 roleBinding"
				}
			]
		},
		{
			"ID": "20230417095907-0dll3b6",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230417095907-0dll3b6",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "因为 Prometheus 会使用之前创建的 sa（serviceAccount）prometheus-k8s 运行，那么光现在 prometheus-k8s 这个 sa 的权限是没有办法查看 service 以及 endpoint 的。"
				}
			]
		},
		{
			"ID": "20230417095907-s19m1m9",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230417095907-s19m1m9",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "我们使用 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "a",
					"TextMarkAHref": "https://link.juejin.cn/?target=https%3A%2F%2Fprometheus.io%2Fdocs%2Fprometheus%2Flatest%2Fconfiguration%2Fconfiguration%2F%23kubernetes_sd_config",
					"TextMarkATitle": "https://prometheus.io/docs/prometheus/latest/configuration/configuration/#kubernetes_sd_config",
					"TextMarkTextContent": "kubernetes_sd_config"
				},
				{
					"Type": "NodeText",
					"Data": " 主要会使用 endpoint 进行发现，因此 prometheus-k8s 必须具备更多的权限。"
				}
			]
		},
		{
			"ID": "20230417095907-zhhboi3",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230417095907-zhhboi3",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "我们需要创建更多的 role，并通过 roleBinding 将这些权限绑定到 prometheus-k8s 这个 sa 上，之所以不使用 clusterRole 是为了权限最小化。"
				}
			]
		},
		{
			"ID": "20230417095907-ihwovgw",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230417095907-ihwovgw",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "这里会创建 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "prometheus-roleConfig.yml"
				},
				{
					"Type": "NodeText",
					"Data": "​、"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "prometheus-roleBindingConfig.yml"
				},
				{
					"Type": "NodeText",
					"Data": "​、"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "prometheus-roleSpecificNamespaces.yml"
				},
				{
					"Type": "NodeText",
					"Data": "​、"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "prometheus-roleBindingSpecificNamespaces.yml"
				},
				{
					"Type": "NodeText",
					"Data": "​ 这四个文件，它们的内容如下。"
				}
			]
		},
		{
			"ID": "20230417095907-6dan7mq",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230417095907-6dan7mq",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "prometheus-roleConfig.yml："
				}
			]
		},
		{
			"ID": "20230417095907-c270wel",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230417095907-c270wel",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "eWFtbA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "apiVersion: rbac.authorization.k8s.io/v1\nkind: Role\nmetadata:\n  name: prometheus-k8s-config\n  namespace: monitoring\nrules:\n  - apiGroups:\n      - \"\"\n    resources:\n      - configmaps\n    verbs:\n      - get\n复制代码\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230417095907-uiru437",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230417095907-uiru437",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "prometheus-roleBindingConfig.yml："
				}
			]
		},
		{
			"ID": "20230417095907-zn2wrl9",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230417095907-zn2wrl9",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "eWFtbA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "apiVersion: rbac.authorization.k8s.io/v1\nkind: RoleBinding\nmetadata:\n  name: prometheus-k8s-config\n  namespace: monitoring\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: Role\n  name: prometheus-k8s-config\nsubjects:\n  - kind: ServiceAccount\n    name: prometheus-k8s\n    namespace: monitoring\n复制代码\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230417095907-6gnz8yk",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230417095907-6gnz8yk",
				"updated": "20230417105126"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "prometheus-roleSpecificNamespaces.yml："
				}
			]
		},
		{
			"ID": "20230417095907-7dpwcd2",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230417095907-7dpwcd2",
				"updated": "20230418010156"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "eWFtbA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "apiVersion: rbac.authorization.k8s.io/v1\nitems:\n  - apiVersion: rbac.authorization.k8s.io/v1\n    kind: Role\n    metadata:\n      name: prometheus-k8s\n      namespace: default\n    rules:\n      - apiGroups:\n          - \"\"\n        resources:\n          - services\n          - endpoints\n          - pods\n        verbs:\n          - get\n          - list\n          - watch\n  - apiVersion: rbac.authorization.k8s.io/v1\n    kind: Role\n    metadata:\n      name: prometheus-k8s\n      namespace: kube-system\n    rules:\n      - apiGroups:\n          - \"\"\n        resources:\n          - services\n          - endpoints\n          - pods\n        verbs:\n          - get\n          - list\n          - watch\n  - apiVersion: rbac.authorization.k8s.io/v1\n    kind: Role\n    metadata:\n      name: prometheus-k8s\n      namespace: monitoring\n    rules:\n      - apiGroups:\n          - \"\"\n        resources:\n          - services\n          - endpoints\n          - pods\n        verbs:\n          - get\n          - list\n          - watch\nkind: RoleList\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230417095907-t7rlah9",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230417095907-t7rlah9",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "prometheus-roleBindingSpecificNamespaces.yml："
				}
			]
		},
		{
			"ID": "20230417095907-b5th2a8",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230417095907-b5th2a8",
				"updated": "20230418010201"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "eWFtbA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "apiVersion: rbac.authorization.k8s.io/v1\nitems:\n  - apiVersion: rbac.authorization.k8s.io/v1\n    kind: RoleBinding\n    metadata:\n      name: prometheus-k8s\n      namespace: default\n    roleRef:\n      apiGroup: rbac.authorization.k8s.io\n      kind: Role\n      name: prometheus-k8s\n    subjects:\n      - kind: ServiceAccount\n        name: prometheus-k8s\n        namespace: monitoring\n  - apiVersion: rbac.authorization.k8s.io/v1\n    kind: RoleBinding\n    metadata:\n      name: prometheus-k8s\n      namespace: kube-system\n    roleRef:\n      apiGroup: rbac.authorization.k8s.io\n      kind: Role\n      name: prometheus-k8s\n    subjects:\n      - kind: ServiceAccount\n        name: prometheus-k8s\n        namespace: monitoring\n  - apiVersion: rbac.authorization.k8s.io/v1\n    kind: RoleBinding\n    metadata:\n      name: prometheus-k8s\n      namespace: monitoring\n    roleRef:\n      apiGroup: rbac.authorization.k8s.io\n      kind: Role\n      name: prometheus-k8s\n    subjects:\n      - kind: ServiceAccount\n        name: prometheus-k8s\n        namespace: monitoring\nkind: RoleBindingList\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230417095907-gmrejea",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230417095907-gmrejea",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "上面的权限中，config 是用来读 configmap 的，后面的就是 Prometheus 用来进行 k8s 发现时必须要的权限了，最后使用 rulebinding 将这些所有的权限都绑定到 prometheus-k8s 这个 sa 上。"
				}
			]
		},
		{
			"ID": "20230417095907-scvojgg",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230417095907-scvojgg",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "这样后续 Prometheus 容器访问 api server 以及集群内的组件时，就会使用这些权限访问。"
				}
			]
		},
		{
			"ID": "20230417095907-ix1pp8e",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230417095907-ix1pp8e",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "最后应用："
				}
			]
		},
		{
			"ID": "20230417095907-9udsu61",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230417095907-9udsu61",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "kubectl apply -f prometheus-roleBindingConfig.yml\nkubectl apply -f prometheus-roleBindingSpecificNamespaces.yml\nkubectl apply -f prometheus-roleConfig.yml\nkubectl apply -f prometheus-roleSpecificNamespaces.yml\n复制代码\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230417095907-ksj32mz",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230417095907-ksj32mz",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "创建 pv"
				}
			]
		},
		{
			"ID": "20230417095907-6osf2fp",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230417095907-6osf2fp",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Prometheus 因为会将数据存储到磁盘上，因此我们必须使用 statefulset，这样就需要一个存储了，我这里就直接使用 nfs 了，你可能需要搭建一个，这里就不多提了。"
				}
			]
		},
		{
			"ID": "20230417095907-xkyu8ms",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230417095907-xkyu8ms",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "先创建 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "prometheus-pv.yml"
				},
				{
					"Type": "NodeText",
					"Data": "​："
				}
			]
		},
		{
			"ID": "20230417095907-odi5i8e",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230417095907-odi5i8e",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "eWFtbA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "apiVersion: v1\nkind: PersistentVolume\nmetadata:\n  name: prometheus\n  labels:\n    name: prometheus\nspec:\n  nfs:\n    path: /data/prometheus\n    server: 10.1.1.3\n  accessModes: [\"ReadWriteMany\", \"ReadWriteOnce\"]\n  capacity:\n    storage: 1Ti\n复制代码\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230417095907-m8rqyl5",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230417095907-m8rqyl5",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "然后应用："
				}
			]
		},
		{
			"ID": "20230417095907-afl9miv",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230417095907-afl9miv",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "kubectl apply -f prometheus-pv.yml\n复制代码\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230417095907-isxckba",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230417095907-isxckba",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "创建 service"
				}
			]
		},
		{
			"ID": "20230417095907-opu9ada",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230417095907-opu9ada",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "statefulset 必须要一个无头的 service，同时我们要进行 endpoint 发现也需要创建 service，创建一个 service 正好满足它们，不过要为这个 service 添加 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "prometheus=k8s"
				},
				{
					"Type": "NodeText",
					"Data": "​ 这个标签。"
				}
			]
		},
		{
			"ID": "20230417095907-npcolyx",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230417095907-npcolyx",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "因此创建文件 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "prometheus-service.yml"
				},
				{
					"Type": "NodeText",
					"Data": "​，它的内容如下："
				}
			]
		},
		{
			"ID": "20230417095907-7xky023",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230417095907-7xky023",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "eWFtbA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "apiVersion: v1\nkind: Service\nmetadata:\n  name: prometheus\n  namespace: monitoring\n  labels:\n    prometheus: k8s\nspec:\n  clusterIP: None\n  ports:\n    - name: web\n      port: 9090\n      protocol: TCP\n      targetPort: web\n  selector:\n    app: prometheus\n  type: ClusterIP\n复制代码\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230417095907-drz6bdz",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230417095907-drz6bdz",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "上面定义了 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "app=prometheus"
				},
				{
					"Type": "NodeText",
					"Data": "​ 这样的标签选择器，因此 Prometheus 容器必须存在这个标签。"
				}
			]
		},
		{
			"ID": "20230417095907-k6qlnns",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230417095907-k6qlnns",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "创建："
				}
			]
		},
		{
			"ID": "20230417095907-fsppcz3",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230417095907-fsppcz3",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "kubectl apply -f prometheus-service.yml\n复制代码\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230417095907-8ld7nll",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230417095907-8ld7nll",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "创建 etcd secret"
				}
			]
		},
		{
			"ID": "20230417095907-5otgo08",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230417095907-5otgo08",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "如果你不打算监控 etcd，那么可以直接跳过，并且将下面 Prometheus yml 文件中的 secret 相关的挂载删掉。"
				}
			]
		},
		{
			"ID": "20230417095907-rdkutjg",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230417095907-rdkutjg",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "直接创建一个 secret 就行："
				}
			]
		},
		{
			"ID": "20230417095907-v4wldhv",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230417095907-v4wldhv",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YXNjcmlwdA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "kubectl -n monitoring create secret generic etcd-client-cert --from-file=/etc/kubernetes/pki/etcd/ca.crt --from-file=/etc/kubernetes/pki/etcd/healthcheck-client.crt --from-file=/etc/kubernetes/pki/etcd/healthcheck-client.key\n复制代码\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230417095907-ybtocau",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230417095907-ybtocau",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "为了方便后续使用，建议你在这个命令之后加上 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "--dry-run -o yaml"
				},
				{
					"Type": "NodeText",
					"Data": "​，然后将输出的内容保存在 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "prometheus-secret.yml"
				},
				{
					"Type": "NodeText",
					"Data": "​ 中。因为加了 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "--dry-run"
				},
				{
					"Type": "NodeText",
					"Data": "​ 之后不会执行，你还需要手动创建："
				}
			]
		},
		{
			"ID": "20230417095907-8xtx3mw",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230417095907-8xtx3mw",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "kubectl apply -f prometheus-secret.yml\n复制代码\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230417095907-q85f5zg",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230417095907-q85f5zg",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "部署 Prometheus"
				}
			]
		},
		{
			"ID": "20230417095907-4ayqcpa",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230417095907-4ayqcpa",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "到此所有前置工作完成，接下来就可以直接部署 prometheus 了。先创建文件 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "prometheus.yml"
				},
				{
					"Type": "NodeText",
					"Data": "​，它的内容如下："
				}
			]
		},
		{
			"ID": "20230417095907-g343uzr",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230417095907-g343uzr",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "eWFtbA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "apiVersion: apps/v1\nkind: StatefulSet\nmetadata:\n  labels:\n    app: prometheus\n    prometheus: k8s\n  name: prometheus\n  namespace: monitoring\nspec:\n  replicas: 1\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: prometheus\n      prometheus: k8s\n  serviceName: prometheus\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: prometheus\n        prometheus: k8s\n    spec:\n      serviceAccount: prometheus-k8s\n      containers:\n        - args:\n            - --web.console.templates=/etc/prometheus/consoles\n            - --web.console.libraries=/etc/prometheus/console_libraries\n            - --config.file=/etc/prometheus/config/prometheus.yml\n            - --storage.tsdb.path=/prometheus\n            - --web.enable-admin-api\n            - --storage.tsdb.retention.time=20d\n            - --web.enable-lifecycle\n            - --storage.tsdb.no-lockfile\n            - --web.external-url=http://example.com/\n            - --web.route-prefix=/\n          image: prom/prometheus:v2.11.1\n          imagePullPolicy: IfNotPresent\n          livenessProbe:\n            failureThreshold: 6\n            httpGet:\n              path: /-/healthy\n              port: web\n              scheme: HTTP\n            periodSeconds: 5\n            successThreshold: 1\n            timeoutSeconds: 3\n          name: prometheus\n          ports:\n            - containerPort: 9090\n              name: web\n              protocol: TCP\n          readinessProbe:\n            failureThreshold: 120\n            httpGet:\n              path: /-/ready\n              port: web\n              scheme: HTTP\n            periodSeconds: 5\n            successThreshold: 1\n            timeoutSeconds: 3\n          resources:\n            requests:\n              memory: 400Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n          volumeMounts:\n            - mountPath: /etc/prometheus/config\n              name: config\n              readOnly: true\n            - mountPath: /prometheus\n              name: prometheus-data\n              #subPath: prometheus-db\n            - mountPath: /etc/prometheus/rules/\n              name: prometheus-rulefiles\n            - mountPath: /etc/prometheus/secrets/etcd-client-cert\n              name: secret-etcd-client-cert\n              readOnly: true\n      volumes:\n        - name: config\n          configMap:\n            defaultMode: 420\n            name: prometheus\n        - name: prometheus-rulefiles\n          configMap:\n            defaultMode: 420\n            name: prometheus-rulefiles\n        - name: secret-etcd-client-cert\n          secret:\n            defaultMode: 420\n            secretName: etcd-client-cert\n  updateStrategy:\n    type: RollingUpdate\n  volumeClaimTemplates:\n    - metadata:\n        name: prometheus-data\n      spec:\n        accessModes:\n          - ReadWriteOnce\n        resources:\n          requests:\n            storage: 1Ti\n        volumeMode: Filesystem\n复制代码\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230417095907-ez8sw1a",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230417095907-ez8sw1a",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "基础的 statfulset 相关的知识我就不多提了，说几个重点吧："
				}
			]
		},
		{
			"ID": "20230417095907-021z46u",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20230417095907-021z46u",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"ID": "20230417095907-znotbq2",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230417095907-znotbq2",
						"updated": "20230417095907"
					},
					"Children": [
						{
							"ID": "20230417095907-st54rjo",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230417095907-st54rjo",
								"updated": "20230417095907"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "--storage.tsdb.retention.time=20d"
								},
								{
									"Type": "NodeText",
									"Data": "​ 这个启动选项表示 Prometheus 所收集的监控数据只保留 20 天，这个值最好不要太大。如果历史数据保存很久，建议写到持久存储中，比如 VictoriaMetrics、thanos、influxdb、opentsdb 等；"
								}
							]
						}
					]
				},
				{
					"ID": "20230417095907-wr3kgp3",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230417095907-wr3kgp3",
						"updated": "20230417095907"
					},
					"Children": [
						{
							"ID": "20230417095907-c7i0c13",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230417095907-c7i0c13",
								"updated": "20230417095907"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "--web.enable-admin-api"
								},
								{
									"Type": "NodeText",
									"Data": "​ 这个启动选项表示启动管理员 api，你可以通过 api 对监控数据进行删除等；"
								}
							]
						}
					]
				},
				{
					"ID": "20230417095907-a07bl9d",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230417095907-a07bl9d",
						"updated": "20230417095907"
					},
					"Children": [
						{
							"ID": "20230417095907-hupgyyp",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230417095907-hupgyyp",
								"updated": "20230417095907"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "serviceAccount"
								},
								{
									"Type": "NodeText",
									"Data": "​ 它的值必须是 prometheus-k8s，不然前面的赋权操作都白干了；"
								}
							]
						}
					]
				},
				{
					"ID": "20230417095907-bvewqas",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230417095907-bvewqas",
						"updated": "20230417095907"
					},
					"Children": [
						{
							"ID": "20230417095907-n9lek1q",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230417095907-n9lek1q",
								"updated": "20230417095907"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "pod 必须存在 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "app: prometheus"
								},
								{
									"Type": "NodeText",
									"Data": "​ 这个标签，不然无法被前面创建的 service 选择到；"
								}
							]
						}
					]
				},
				{
					"ID": "20230417095907-8uy2i6z",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230417095907-8uy2i6z",
						"updated": "20230417095907"
					},
					"Children": [
						{
							"ID": "20230417095907-lcggrqz",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230417095907-lcggrqz",
								"updated": "20230417095907"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "挂载了两个 configmap、一个 secret 还有一个存储卷。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230417095907-1zikbwd",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230417095907-1zikbwd",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "其他没有什么好说的了，直接干吧："
				}
			]
		},
		{
			"ID": "20230417095907-vf8ijtn",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230417095907-vf8ijtn",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "kubectl apply -f prometheus.yml\n复制代码\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230417095907-mgqiil0",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230417095907-mgqiil0",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "然后等待 Prometheus 启动成功："
				}
			]
		},
		{
			"ID": "20230417095907-8synmqg",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230417095907-8synmqg",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YXJkdWlubw=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "kubectl -n monitoring get pod -w\n复制代码\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230417095907-8ssej3n",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230417095907-8ssej3n",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "访问 Prometheus"
				}
			]
		},
		{
			"ID": "20230417095907-wdeshst",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230417095907-wdeshst",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "启动成功之后就可以直接访问了，我们先不创建 ingress，而是将 pod 的端口绑定到宿主机上："
				}
			]
		},
		{
			"ID": "20230417095907-g9eqsph",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230417095907-g9eqsph",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YmFzaA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "kubectl -n monitoring port-forward --address 0.0.0.0 pod/prometheus-0 9090:9090\n复制代码\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230417095907-mzp8e0f",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230417095907-mzp8e0f",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "然后通过访问当前主机的 9090 端口就可以打开 Prometheus 页面。我们点开 Status，然后选择 Targets 就可以发现 Prometheus 自身已经被监控了。"
				}
			]
		},
		{
			"ID": "20230417095907-p0xcnrb",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230417095907-p0xcnrb",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/16c6c3051bd41e30tplv-t2oaga2asx-zoom-in-crop-mark4536000-20230417095907-xrukefn.awebp"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20230417095907-nxzou57",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230417095907-nxzou57",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "可以看到，它显示了额外的 6 个标签，这些都是我们前面通过 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "relabel_configs"
				},
				{
					"Type": "NodeText",
					"Data": "​ 配置附加上去的，你现在只要在 Prometheus 查询任意一条监控指标，都会有这 6 个标签。如果你觉得这些标签中有你不需要的，只需要在前面的配置中删除对应的配置即可。"
				}
			]
		},
		{
			"ID": "20230417095907-d6xj6rn",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230417095907-d6xj6rn",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "然后你将鼠标悬浮在这些标签之上，就能看到所有 relabel 之前所有的元标签，如果有你需要的，可以在前面的配置文件中添加响应的配置，将对应的标签加上去。"
				}
			]
		},
		{
			"ID": "20230417095907-t01o8bd",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230417095907-t01o8bd",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "你可以选择点击左上角的 Prometheus 回到主页，然后在下面的查询框中，随便输入一个字母，然后在出现的所有监控指标中随便点击一个，就可以看到它的所有标签和其对应的值了。"
				}
			]
		},
		{
			"ID": "20230417095907-l48clkk",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230417095907-l48clkk",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/16c6c3089e2f8e18tplv-t2oaga2asx-zoom-in-crop-mark4536000-20230417095907-2aig9dp.awebp"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20230417095907-1dxjixe",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230417095907-1dxjixe",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "可以看到，额外的 6 个标签都存在，今后你可以通过这些标签来进行查询了。"
				}
			]
		},
		{
			"ID": "20230417095907-85yyptr",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230417095907-85yyptr",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "最后，给 Prometheus 创建一个 ingress，文件名为 prometheus-ingress："
				}
			]
		},
		{
			"ID": "20230417095907-xvjdrv7",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230417095907-xvjdrv7",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "eWFtbA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "apiVersion: extensions/v1beta1\nkind: Ingress\nmetadata:\n  name: prometheus\n  namespace: monitoring\nspec:\n  rules:\n    - host: example.com\n      http:\n        paths:\n          - path: /\n            backend:\n              serviceName: prometheus\n              servicePort: 9090\n复制代码\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230417095907-jo1c84u",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230417095907-jo1c84u",
				"updated": "20230417095907"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "注意将上面的 example.com 替换成你 Prometheus 的域名。"
				}
			]
		}
	]
}