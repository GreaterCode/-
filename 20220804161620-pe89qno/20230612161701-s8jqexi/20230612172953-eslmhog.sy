{
	"ID": "20230612172953-eslmhog",
	"Spec": "1",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20230612172953-eslmhog",
		"scroll": "{\u0026quot;startId\u0026quot;:\u0026quot;20230612172953-qkkg63q\u0026quot;,\u0026quot;endId\u0026quot;:\u0026quot;20230612172953-690i7mt\u0026quot;,\u0026quot;scrollTop\u0026quot;:1879,\u0026quot;focusId\u0026quot;:\u0026quot;20230612172953-690i7mt\u0026quot;,\u0026quot;focusStart\u0026quot;:0,\u0026quot;focusEnd\u0026quot;:0}",
		"title": "【runC】04-runC-源码分析-[pause, resume] ",
		"updated": "20230613111600"
	},
	"Children": [
		{
			"ID": "20230612172953-qkkg63q",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230612172953-qkkg63q",
				"updated": "20230612172953"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "runc 比较重要的容器启动流程前面已经基本分析完毕了，今天是最后一章主要分析runc的pause/resume；然后顺带Q一下cgroup;"
				}
			]
		},
		{
			"ID": "20230612172953-rw2e7cd",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230612172953-rw2e7cd",
				"updated": "20230612172953"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "技术点"
				}
			]
		},
		{
			"ID": "20230612172953-19hn1jv",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20230612172953-19hn1jv",
				"updated": "20230612172953"
			},
			"Children": [
				{
					"ID": "20230612172953-b3igfm3",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230612172953-b3igfm3",
						"updated": "20230612172953"
					},
					"Children": [
						{
							"ID": "20230612172953-8va3adf",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230612172953-8va3adf",
								"updated": "20230612172953"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "pause/resume 的作用是挂起与恢复进程组。大致原理主要使用cgroup 的 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "freeze"
								},
								{
									"Type": "NodeText",
									"Data": "​ 对进程信号拦截处理；在信号处理的开始挂了一个类似于钩子的东西，把挂起进程交给信号处理来做，freeze框架要做的就是设置一些标志位来指示信号处理要冻结它了，然后设置此进程的信号附着位，这样该进程在返回用户空间的时候就乖乖进入到冻结状态了。"
								}
							]
						}
					]
				},
				{
					"ID": "20230612172953-qwjgcy2",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230612172953-qwjgcy2",
						"updated": "20230612172953"
					},
					"Children": [
						{
							"ID": "20230612172953-ulkmbi8",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230612172953-ulkmbi8",
								"updated": "20230612172953"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "下面的链接有 freezer 在linux中设置的方法，freezer 分为3个状态: "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "THAWEDFREEZINGFROZEN"
								},
								{
									"Type": "NodeText",
									"Data": "​"
								}
							]
						},
						{
							"ID": "20230612172953-yy9w61x",
							"Type": "NodeBlockquote",
							"Properties": {
								"id": "20230612172953-yy9w61x",
								"updated": "20230612172953"
							},
							"Children": [
								{
									"Type": "NodeBlockquoteMarker",
									"Data": "\u003e"
								},
								{
									"ID": "20230612172953-uuoyftu",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20230612172953-uuoyftu",
										"updated": "20230612172953"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "参考: "
										},
										{
											"Type": "NodeTextMark",
											"TextMarkType": "a",
											"TextMarkAHref": "https://link.juejin.cn/?target=https%3A%2F%2Fwww.kernel.org%2Fdoc%2FDocumentation%2Fcgroup-v1%2Ffreezer-subsystem.txt",
											"TextMarkATitle": "https://www.kernel.org/doc/Documentation/cgroup-v1/freezer-subsystem.txt",
											"TextMarkTextContent": "www.kernel.org/doc/Documen…"
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230612172953-v94tg3o",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230612172953-v94tg3o",
				"updated": "20230612172953"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "pause 命令"
				}
			]
		},
		{
			"ID": "20230612172953-9r6zpck",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20230612172953-9r6zpck",
				"updated": "20230612172953"
			},
			"Children": [
				{
					"ID": "20230612172953-k0sf9ec",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230612172953-k0sf9ec",
						"updated": "20230612172953"
					},
					"Children": [
						{
							"ID": "20230612172953-l4bnt5v",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230612172953-l4bnt5v",
								"updated": "20230612172953"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "runc/libcontainer/container_linux.go\n通过cgroup manager 去管理所有类型的cgroup子系统，而且已经支持cgroupV2版本了；通过一点判定机制选用cgroupV1 还是 cgroupV2"
								}
							]
						},
						{
							"ID": "20230612172953-jizy6ww",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20230612172953-jizy6ww",
								"updated": "20230612172953"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "Z28="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "func (c *linuxContainer) Pause() error {\n    c.m.Lock()\n    defer c.m.Unlock()\n    status, err := c.currentStatus()\n    if err != nil {\n        return err\n    }\n    switch status {\n    case Running, Created:\n    \t// 设置进程的cgroup为 Frozen 冻结进程\n        if err := c.cgroupManager.Freeze(configs.Frozen); err != nil {\n            return err\n        }\n        return c.state.transition(\u0026pausedState{\n            c: c,\n        })\n    }\n    return newGenericError(fmt.Errorf(\"container not running or created: %s\", status), ContainerNotRunning)\n}\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				},
				{
					"ID": "20230612172953-72m6msd",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230612172953-72m6msd",
						"updated": "20230612172953"
					},
					"Children": [
						{
							"ID": "20230612172953-fz63ybv",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230612172953-fz63ybv",
								"updated": "20230612172953"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "runc/libcontainer/cgroups/fs/freezer.go\n写入cgroup文件"
								}
							]
						},
						{
							"ID": "20230612172953-u4wlesj",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20230612172953-u4wlesj",
								"updated": "20230612172953"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "Z28="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "func (s *FreezerGroup) Set(path string, cgroup *configs.Cgroup) error {\n    switch cgroup.Resources.Freezer {\n    case configs.Frozen, configs.Thawed:\n        for {\n\t// 最终可以看到是通过写文件进行设置freezer的状态\n            if err := fscommon.WriteFile(path, \"freezer.state\", string(cgroup.Resources.Freezer)); err != nil {\n                return err\n            }\n\n            state, err := s.GetState(path)\n            if err != nil {\n                return err\n            }\n            if state == cgroup.Resources.Freezer {\n                break\n            }\n\n            time.Sleep(1 * time.Millisecond)\n        }\n    case configs.Undefined:\n        return nil\n    default:\n        return fmt.Errorf(\"Invalid argument '%s' to freezer.state\", string(cgroup.Resources.Freezer))\n    }\n\n    return nil\n}\n\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230612172953-qcn948i",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230612172953-qcn948i",
				"updated": "20230612172953"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "resume 命令"
				}
			]
		},
		{
			"ID": "20230612172953-t2wg0xi",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20230612172953-t2wg0xi",
				"updated": "20230612172953"
			},
			"Children": [
				{
					"ID": "20230612172953-i8pxqbg",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230612172953-i8pxqbg",
						"updated": "20230612172953"
					},
					"Children": [
						{
							"ID": "20230612172953-y34fppu",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230612172953-y34fppu",
								"updated": "20230612172953"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "/runc/libcontainer/container_linux.go\n设置进程的cgroup为 Thawed 解冻进程, 最终也是调用上面的freezer.go写入文件"
								}
							]
						},
						{
							"ID": "20230612172953-h3xtnif",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20230612172953-h3xtnif",
								"updated": "20230612172953"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "Z28="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "func (c *linuxContainer) Resume() error {\n    c.m.Lock()\n    defer c.m.Unlock()\n    status, err := c.currentStatus()\n    if err != nil {\n        return err\n    }\n    if status != Paused {\n        return newGenericError(fmt.Errorf(\"container not paused\"), ContainerNotPaused)\n    }\n    // 设置进程的cgroup为 Thawed 解冻进程, 最终也是调用上面\n    if err := c.cgroupManager.Freeze(configs.Thawed); err != nil {\n        return err\n    }\n    return c.state.transition(\u0026runningState{\n        c: c,\n    })\n}\n\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230612172953-v6wjlsv",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230612172953-v6wjlsv",
				"updated": "20230612172953"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "cgroups 推荐文章"
				}
			]
		},
		{
			"ID": "20230612172953-63ljskq",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20230612172953-63ljskq",
				"updated": "20230612172953"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20230612172953-up13cu5",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20230612172953-up13cu5",
						"updated": "20230612172953"
					},
					"Children": [
						{
							"Type": "NodeTextMark",
							"TextMarkType": "a",
							"TextMarkAHref": "https://juejin.cn/post/6844903849602334728",
							"TextMarkATitle": "https://juejin.cn/post/6844903849602334728",
							"TextMarkTextContent": "深入理解 Linux Cgroup 系列（一）：基本概念"
						}
					]
				}
			]
		},
		{
			"ID": "20230612172953-hfyy4r5",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20230612172953-hfyy4r5",
				"updated": "20230612172953"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20230612172953-841m22j",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20230612172953-841m22j",
						"updated": "20230612172953"
					},
					"Children": [
						{
							"Type": "NodeTextMark",
							"TextMarkType": "a",
							"TextMarkAHref": "https://juejin.cn/post/6844903858116755463",
							"TextMarkATitle": "https://juejin.cn/post/6844903858116755463",
							"TextMarkTextContent": "深入理解 Linux Cgroup 系列（二）：玩转 CPU"
						}
					]
				}
			]
		},
		{
			"ID": "20230612172953-0gca8b2",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20230612172953-0gca8b2",
				"updated": "20230612172953"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20230612172953-nsg00hh",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20230612172953-nsg00hh",
						"updated": "20230612172953"
					},
					"Children": [
						{
							"Type": "NodeTextMark",
							"TextMarkType": "a",
							"TextMarkAHref": "https://juejin.cn/post/6844903909358567431",
							"TextMarkATitle": "https://juejin.cn/post/6844903909358567431",
							"TextMarkTextContent": "深入理解 Linux Cgroup 系列（三）：内存"
						}
					]
				}
			]
		},
		{
			"ID": "20230612172953-gjr9oua",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20230612172953-gjr9oua",
				"updated": "20230612172953"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20230612172953-ryqhgz9",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20230612172953-ryqhgz9",
						"updated": "20230612172953"
					},
					"Children": [
						{
							"Type": "NodeTextMark",
							"TextMarkType": "a",
							"TextMarkAHref": "https://juejin.cn/post/6844904110639054861",
							"TextMarkATitle": "https://juejin.cn/post/6844904110639054861",
							"TextMarkTextContent": "Linux Cgroup 入门教程：cpuset"
						}
					]
				}
			]
		},
		{
			"ID": "20230612172953-690i7mt",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230612172953-690i7mt",
				"updated": "20230613111600"
			}
		}
	]
}