{
	"ID": "20240927114737-y85qe5s",
	"Spec": "1",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20240927114737-y85qe5s",
		"scroll": "{\u0026quot;startId\u0026quot;:\u0026quot;20240927114737-5j6z03f\u0026quot;,\u0026quot;endId\u0026quot;:\u0026quot;20240927114737-btq60q8\u0026quot;,\u0026quot;scrollTop\u0026quot;:0,\u0026quot;focusId\u0026quot;:\u0026quot;20240927114737-5j6z03f\u0026quot;,\u0026quot;focusStart\u0026quot;:0,\u0026quot;focusEnd\u0026quot;:0}",
		"title": "Harbor系列之3：使用docker环境安装Harbor仓库-https部署",
		"updated": "20240927114737"
	},
	"Children": [
		{
			"ID": "20240927114737-5j6z03f",
			"Type": "NodeThematicBreak",
			"Properties": {
				"id": "20240927114737-5j6z03f",
				"updated": "20240927114737"
			}
		},
		{
			"ID": "20240927114737-lu2eovd",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20240927114737-lu2eovd",
				"updated": "20240927114737"
			},
			"Children": [
				{
					"ID": "20240927114737-qxoitwe",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20240927114737-qxoitwe",
						"updated": "20240927114737"
					},
					"Children": [
						{
							"ID": "20240927114737-13emp61",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240927114737-13emp61",
								"updated": "20240927114737"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "a",
									"TextMarkAHref": "https://mp.weixin.qq.com/s?__biz=Mzg5MzAxMTk0NQ==\u0026mid=2247486152\u0026idx=1\u0026sn=10f0c173ca3a72ed0d8758dcfb23fd6e\u0026chksm=c034184ef74391580e25e4384a3bb1bc2874175c2ab22778681e92a31956a7ae1a885311c70f\u0026cur_album_id=3558534029073104905\u0026scene=189#wechat_redirect",
									"TextMarkTextContent": "https://mp.weixin.qq.com/s?__biz=Mzg5MzAxMTk0NQ==\u0026amp;mid=2247486152\u0026amp;idx=1\u0026amp;sn=10f0c173ca3a72ed0d8758dcfb23fd6e\u0026amp;chksm=c034184ef74391580e25e4384a3bb1bc2874175c2ab22778681e92a31956a7ae1a885311c70f\u0026amp;cur_album_id=3558534029073104905\u0026amp;scene=189#wechat_redirect - 微信公众平台"
								}
							]
						}
					]
				},
				{
					"ID": "20240927114737-nr4comi",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20240927114737-nr4comi",
						"updated": "20240927114737"
					},
					"Children": [
						{
							"ID": "20240927114737-f2hprs9",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240927114737-f2hprs9",
								"updated": "20240927114737"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Harbor部署，使用https协议"
								}
							]
						}
					]
				},
				{
					"ID": "20240927114737-hhrvsut",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20240927114737-hhrvsut",
						"updated": "20240927114737"
					},
					"Children": [
						{
							"ID": "20240927114737-xt482d3",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240927114737-xt482d3",
								"updated": "20240927114737"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "2024-09-27 11:47:37"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20240927114737-dne3agn",
			"Type": "NodeThematicBreak",
			"Properties": {
				"id": "20240927114737-dne3agn",
				"updated": "20240927114737"
			}
		},
		{
			"ID": "20240927114737-m4rt5q5",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240927114737-m4rt5q5",
				"updated": "20240927114737"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "使用docker环境安装Harbor仓库-https部署"
				}
			]
		},
		{
			"ID": "20240927114737-30ipn6f",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240927114737-30ipn6f",
				"updated": "20240927114737"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Harbor 是一个开源的云原生镜像仓库，用于存储和分发容器镜像的企业级Registry服务器，通过添加一些企业必需的功能特性，例如安全、标识和管理等，扩展了开源 Docker Distribution。作为一个企业级私有 Registry 服务器，Harbor 提供了更好的性能和安全。"
				}
			]
		},
		{
			"ID": "20240927114737-g7crfoj",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240927114737-g7crfoj",
				"updated": "20240927114737"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "本文记录使用docker环境安装部署Harbor仓库，使用https协议，采用自签名证书。"
				}
			]
		},
		{
			"ID": "20240927114737-kn22qq7",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240927114737-kn22qq7",
				"updated": "20240927114737"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "本文时间部署Harbor v2.11.0版本，采用离线部署安装包。最新的官方安装步骤参考：https://goharbor.io/docs/latest/install-config/"
				}
			]
		},
		{
			"ID": "20240927114737-1j46yt7",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240927114737-1j46yt7",
				"updated": "20240927114737"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "1. 准备工作"
				}
			]
		},
		{
			"ID": "20240927114737-l2cr4ll",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20240927114737-l2cr4ll",
				"updated": "20240927114737"
			},
			"Children": [
				{
					"ID": "20240927114737-rfbv0x4",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20240927114737-rfbv0x4",
						"updated": "20240927114737"
					},
					"Children": [
						{
							"ID": "20240927114737-7ztgz0g",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240927114737-7ztgz0g",
								"updated": "20240927114737"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "下载 Harbor 离线安装包"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20240927114737-9i3p1zv",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240927114737-9i3p1zv",
				"updated": "20240927114737"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "从 Harbor GitHub releases 页面下载离线安装包，例如 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "harbor-offline-installer-v2.11.0.tgz"
				},
				{
					"Type": "NodeText",
					"Data": "​。"
				}
			]
		},
		{
			"ID": "20240927114737-mv6108x",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20240927114737-mv6108x",
				"updated": "20240927114737"
			},
			"Children": [
				{
					"ID": "20240927114737-ym1emei",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20240927114737-ym1emei",
						"updated": "20240927114737"
					},
					"Children": [
						{
							"ID": "20240927114737-duw5rg1",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240927114737-duw5rg1",
								"updated": "20240927114737"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "安装 Docker 和 Docker Compose"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20240927114737-gy5tbpg",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240927114737-gy5tbpg",
				"updated": "20240927114737"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "确保目标机器上已经安装了 Docker 和 Docker Compose。"
				}
			]
		},
		{
			"ID": "20240927114737-rq3fyyj",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240927114737-rq3fyyj",
				"updated": "20240927114737"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在 Linux 主机上：需要 Docker 20.10.10-ce 及以上版本和 Docker Compose 1.18.0 及以上版本。"
				}
			]
		},
		{
			"ID": "20240927114737-ep2apgn",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20240927114737-ep2apgn",
				"updated": "20240927114737"
			},
			"Children": [
				{
					"ID": "20240927114737-jq0ylxe",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "My4=",
						"Num": 3
					},
					"Properties": {
						"id": "20240927114737-jq0ylxe",
						"updated": "20240927114737"
					},
					"Children": [
						{
							"ID": "20240927114737-3ao0iot",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240927114737-3ao0iot",
								"updated": "20240927114737"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "证书相关"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20240927114737-5gxbobq",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240927114737-5gxbobq",
				"updated": "20240927114737"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "生成证书颁发机构证书及私钥："
				}
			]
		},
		{
			"ID": "20240927114737-7xjtvrm",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240927114737-7xjtvrm",
				"updated": "20240927114737"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "# 修改主机名\nroot@ubuntu-svr:~# hostnamectl set-hostname harborroot@harbor:~# mkdir -p /data/harbor/certs\nroot@harbor:~# cd /data/harbor/certs/\nroot@harbor:/data/harbor/certs# openssl genrsa -out ca.key 4096root@harbor:/data/harbor/certs# openssl req -x509 -new -nodes -sha512 -days 3650  -subj \"/C=CN/ST=Beijing/L=Beijing/O=matrix/OU=test/CN=harbor.test.com\"  -key ca.key  -out ca.crt\nroot@harbor:/data/harbor/certs# ls\nca.crt  ca.key\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240927114737-3zma9mi",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240927114737-3zma9mi",
				"updated": "20240927114737"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "生成服务器私钥及证书签名请求（CSR）:"
				}
			]
		},
		{
			"ID": "20240927114737-577q6wa",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240927114737-577q6wa",
				"updated": "20240927114737"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "root@harbor:/data/harbor/certs# openssl genrsa -out harbor.test.com.key 4096\n# 生成证书签名请求\nroot@harbor:/data/harbor/certs# openssl req -sha512 -new -subj \"/C=CN/ST=Beijing/L=Beijing/O=matrix/OU=test/CN=harbor.test.com\" -key harbor.test.com.key  -out harbor.test.com.csr\nroot@harbor:/data/harbor/certs# ls\nca.crt  ca.key  harbor.test.com.csr  harbor.test.com.key\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240927114737-1qles9q",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240927114737-1qles9q",
				"updated": "20240927114737"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "生成 x509 v3 扩展文件:"
				}
			]
		},
		{
			"ID": "20240927114737-p38ecs9",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240927114737-p38ecs9",
				"updated": "20240927114737"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "root@harbor:/data/harbor/certs# cat v3.ext\nauthorityKeyIdentifier=keyid,issuer\nbasicConstraints=CA:FALSE\nkeyUsage = digitalSignature, nonRepudiation, keyEncipherment, dataEncipherment\nextendedKeyUsage = serverAuth\nsubjectAltName = @alt_names[alt_names]\nDNS.1=harbor.test.com\nDNS.2=test.com\nDNS.3=harbor\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240927114737-x2oz52r",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240927114737-x2oz52r",
				"updated": "20240927114737"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "使用该v3.ext文件为 Harbor 服务器生成证书:"
				}
			]
		},
		{
			"ID": "20240927114737-s8z02ht",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240927114737-s8z02ht",
				"updated": "20240927114737"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "root@harbor:/data/harbor/certs# openssl x509 -req -sha512 -days 3650 -extfile v3.ext -CA ca.crt -CAkey ca.key -CAcreateserial -in harbor.test.com.csr -out harbor.test.com.crt\nCertificate request self-signature ok\nsubject=C = CN, ST = Beijing, L = Beijing, O = matrix, OU = test, CN = harbor.test.com\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240927114737-e1rglht",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240927114737-e1rglht",
				"updated": "20240927114737"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "将 harbor.snow.com.crt 转换为 harbor.snow.com.cert , 供 Docker 使用。Docker 守护进程将.crt文件解释为 CA 证书，.cert将文件解释为客户端证书:"
				}
			]
		},
		{
			"ID": "20240927114737-c9j8atl",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240927114737-c9j8atl",
				"updated": "20240927114737"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "root@harbor:/data/harbor/certs# openssl x509 -inform PEM -in harbor.test.com.crt -out harbor.test.com.cert\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240927114737-1j92c3b",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240927114737-1j92c3b",
				"updated": "20240927114737"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "2. 安装部署"
				}
			]
		},
		{
			"ID": "20240927114737-jy9fq9b",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240927114737-jy9fq9b",
				"updated": "20240927114737"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "将 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "harbor-offline-installer-v2.11.0.tgz"
				},
				{
					"Type": "NodeText",
					"Data": "​ 上传到待部署机器并解压："
				}
			]
		},
		{
			"ID": "20240927114737-cmrxay7",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240927114737-cmrxay7",
				"updated": "20240927114737"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "root@harbor:~# tar xf harbor-offline-installer-v2.11.0.tgz\nroot@harbor:~# cd harbor/\nroot@harbor:~/harbor# ls\ncommon.sh  harbor.v2.11.0.tar.gz  harbor.yml.tmpl  install.sh  LICENSE  prepare\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240927114737-sy22ewh",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240927114737-sy22ewh",
				"updated": "20240927114737"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "配置 Harbor："
				}
			]
		},
		{
			"ID": "20240927114737-rsdy0nc",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240927114737-rsdy0nc",
				"updated": "20240927114737"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "root@harbor:~/harbor# cp harbor.yml.tmpl harbor.yml\nroot@harbor:~/harbor# vi harbor.yml\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240927114737-uxck30t",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240927114737-uxck30t",
				"updated": "20240927114737"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "编辑 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "harbor.yml"
				},
				{
					"Type": "NodeText",
					"Data": "​ 文件，根据实际需求进行配置:"
				}
			]
		},
		{
			"ID": "20240927114737-pfyd9z7",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240927114737-pfyd9z7",
				"updated": "20240927114737"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "hostname: harbor.test.com   # 使用域名\n...\nhttp:\n  port: 80  # http端口\n...\nharbor_admin_password: Harbor12345  # web界面admin密码\n...\ndatabase:\n  password: root123 # 后端数据库root密码\n...\ndata_volume: /data/harbor  # 数据存放路径...\nhttps:\n  # https port for harbor, default is 443\n  port: 443     # https端口\n  # The path of cert and key files for nginx\n  certificate: /data/harbor/certs/harbor.test.com.cert\n  private_key: /data/harbor/certs/harbor.test.com.key\n  # enable strong ssl ciphers (default: false)\n  # strong_ssl_ciphers: false...\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240927114737-1gzhv1j",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240927114737-1gzhv1j",
				"updated": "20240927114737"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "加载镜像和启动 Harbor:"
				}
			]
		},
		{
			"ID": "20240927114737-54ad3ra",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240927114737-54ad3ra",
				"updated": "20240927114737"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "# 执行安装\nroot@harbor:~/harbor# bash install.sh[Step 0]: checking if docker is installed ...Note: docker version: 26.1.3[Step 1]: checking docker-compose is installed ...Note: Docker Compose version v2.27.0[Step 2]: loading Harbor images ...\nLoaded image: goharbor/harbor-core:v2.11.0\nLoaded image: goharbor/harbor-db:v2.11.0\nLoaded image: goharbor/nginx-photon:v2.11.0\nLoaded image: goharbor/trivy-adapter-photon:v2.11.0\nLoaded image: goharbor/redis-photon:v2.11.0\nLoaded image: goharbor/registry-photon:v2.11.0\nLoaded image: goharbor/prepare:v2.11.0\nLoaded image: goharbor/harbor-portal:v2.11.0\nLoaded image: goharbor/harbor-log:v2.11.0\nLoaded image: goharbor/harbor-jobservice:v2.11.0\nLoaded image: goharbor/harbor-registryctl:v2.11.0\nLoaded image: goharbor/harbor-exporter:v2.11.0[Step 3]: preparing environment ...[Step 4]: preparing harbor configs ...\nprepare base dir is set to /root/harbor\nClearing the configuration file: /config/log/rsyslog_docker.conf\nClearing the configuration file: /config/log/logrotate.conf\nClearing the configuration file: /config/db/env\nClearing the configuration file: /config/registry/config.yml\nClearing the configuration file: /config/registry/root.crt\nClearing the configuration file: /config/registry/passwd\nClearing the configuration file: /config/core/env\nClearing the configuration file: /config/core/app.conf\nClearing the configuration file: /config/jobservice/config.yml\nClearing the configuration file: /config/jobservice/env\nClearing the configuration file: /config/portal/nginx.conf\nClearing the configuration file: /config/registryctl/config.yml\nClearing the configuration file: /config/registryctl/env\nClearing the configuration file: /config/nginx/nginx.conf\nGenerated configuration file: /config/portal/nginx.conf\nGenerated configuration file: /config/log/logrotate.conf\nGenerated configuration file: /config/log/rsyslog_docker.conf\nGenerated configuration file: /config/nginx/nginx.conf\nGenerated configuration file: /config/core/env\nGenerated configuration file: /config/core/app.conf\nGenerated configuration file: /config/registry/config.yml\nGenerated configuration file: /config/registryctl/env\nGenerated configuration file: /config/registryctl/config.yml\nGenerated configuration file: /config/db/env\nGenerated configuration file: /config/jobservice/env\nGenerated configuration file: /config/jobservice/config.yml\nloaded secret from file: /data/secret/keys/secretkey\nGenerated configuration file: /compose_location/docker-compose.yml\nClean up the input dirNote: stopping existing Harbor instance ...\nWARN[0000] /root/harbor/docker-compose.yml: `version` is obsolete\n[+] Running 10/10\n ✔ Container registryctl        Removed                                                                                                                                                                                                                      0.3s\n ✔ Container harbor-jobservice  Removed                                                                                                                                                                                                                      0.4s\n ✔ Container nginx              Removed                                                                                                                                                                                                                      0.0s\n ✔ Container harbor-portal      Removed                                                                                                                                                                                                                      0.3s\n ✔ Container harbor-core        Removed                                                                                                                                                                                                                      3.1s\n ✔ Container registry           Removed                                                                                                                                                                                                                      0.2s\n ✔ Container redis              Removed                                                                                                                                                                                                                      0.3s\n ✔ Container harbor-db          Removed                                                                                                                                                                                                                      0.2s\n ✔ Container harbor-log         Removed                                                                                                                                                                                                                     10.2s\n ✔ Network harbor_harbor        Removed                                                                                                                                                                                                                      0.2s[Step 5]: starting Harbor ...\nWARN[0000] /root/harbor/docker-compose.yml: `version` is obsolete\n[+] Running 10/10\n ✔ Network harbor_harbor        Created                                                                                                                                                                                                                      0.1s\n ✔ Container harbor-log         Started                                                                                                                                                                                                                      0.3s\n ✔ Container harbor-db          Started                                                                                                                                                                                                                      1.0s\n ✔ Container redis              Started                                                                                                                                                                                                                      0.9s\n ✔ Container harbor-portal      Started                                                                                                                                                                                                                      0.9s\n ✔ Container registry           Started                                                                                                                                                                                                                      1.0s\n ✔ Container registryctl        Started                                                                                                                                                                                                                      1.3s\n ✔ Container harbor-core        Started                                                                                                                                                                                                                      1.4s\n ✔ Container nginx              Started                                                                                                                                                                                                                      2.0s\n ✔ Container harbor-jobservice  Started                                                                                                                                                                                                                      1.9s\n✔ ----Harbor has been installed and started successfully.----\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240927114737-x1awp8a",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20240927114737-x1awp8a",
				"updated": "20240927114737"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20240927114737-ede15f8",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20240927114737-ede15f8",
						"updated": "20240927114737"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "说明："
						}
					]
				},
				{
					"ID": "20240927114737-koq3luz",
					"Type": "NodeList",
					"ListData": {
						"Typ": 1
					},
					"Properties": {
						"id": "20240927114737-koq3luz",
						"updated": "20240927114737"
					},
					"Children": [
						{
							"ID": "20240927114737-qb4ahd7",
							"Type": "NodeListItem",
							"ListData": {
								"Typ": 1,
								"Delimiter": 46,
								"Marker": "MS4=",
								"Num": 1
							},
							"Properties": {
								"id": "20240927114737-qb4ahd7",
								"updated": "20240927114737"
							},
							"Children": [
								{
									"ID": "20240927114737-ln81v0w",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20240927114737-ln81v0w",
										"updated": "20240927114737"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "当前机器如果存在同名的容器，也会导致harbor部署失败，例如"
										},
										{
											"Type": "NodeTextMark",
											"TextMarkType": "code",
											"TextMarkTextContent": "redis"
										},
										{
											"Type": "NodeText",
											"Data": "​,"
										},
										{
											"Type": "NodeTextMark",
											"TextMarkType": "code",
											"TextMarkTextContent": "nginx"
										},
										{
											"Type": "NodeText",
											"Data": "​等，部署之前停止可能冲突的容器。"
										}
									]
								}
							]
						},
						{
							"ID": "20240927114737-gdbuxcj",
							"Type": "NodeListItem",
							"ListData": {
								"Typ": 1,
								"Delimiter": 46,
								"Marker": "Mi4=",
								"Num": 2
							},
							"Properties": {
								"id": "20240927114737-gdbuxcj",
								"updated": "20240927114737"
							},
							"Children": [
								{
									"ID": "20240927114737-htems53",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20240927114737-htems53",
										"updated": "20240927114737"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "注意端口冲突，如果本地已经部署nginx或者httpd等web服务器，注意修改端口。"
										}
									]
								}
							]
						},
						{
							"ID": "20240927114737-183deqj",
							"Type": "NodeListItem",
							"ListData": {
								"Typ": 1,
								"Delimiter": 46,
								"Marker": "My4=",
								"Num": 3
							},
							"Properties": {
								"id": "20240927114737-183deqj",
								"updated": "20240927114737"
							},
							"Children": [
								{
									"ID": "20240927114737-h3z82ue",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20240927114737-h3z82ue",
										"updated": "20240927114737"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "安装trivy扫描工具： "
										},
										{
											"Type": "NodeTextMark",
											"TextMarkType": "code",
											"TextMarkTextContent": "./install.sh --with-trivy"
										},
										{
											"Type": "NodeText",
											"Data": "​"
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20240927114737-zb5w7c2",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240927114737-zb5w7c2",
				"updated": "20240927114737"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "3. 检查部署情况"
				}
			]
		},
		{
			"ID": "20240927114737-fpxit97",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20240927114737-fpxit97",
				"updated": "20240927114737"
			},
			"Children": [
				{
					"ID": "20240927114737-knyiv3r",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20240927114737-knyiv3r",
						"updated": "20240927114737"
					},
					"Children": [
						{
							"ID": "20240927114737-b6229cj",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240927114737-b6229cj",
								"updated": "20240927114737"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "查看 Harbor 服务状态"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20240927114737-z07x0ii",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240927114737-z07x0ii",
				"updated": "20240927114737"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "[root@harbor harbor]# docker ps\nCONTAINER ID   IMAGE                                               COMMAND                  CREATED          STATUS                   PORTS                                   NAMES\ncb5c79df4e4c   goharbor/harbor-jobservice:v2.11.0                  \"/harbor/entrypoint.…\"   3 minutes ago    Up 3 minutes (healthy)                                           harbor-jobservice\n39486ae87f17   goharbor/nginx-photon:v2.11.0                       \"nginx -g 'daemon of…\"   3 minutes ago    Up 3 minutes (healthy)   0.0.0.0:80-\u003e8080/tcp, :::80-\u003e8080/tcp   nginx\n09098205ec51   goharbor/harbor-core:v2.11.0                        \"/harbor/entrypoint.…\"   3 minutes ago    Up 3 minutes (healthy)                                           harbor-core\n0e968a41d58c   goharbor/redis-photon:v2.11.0                       \"redis-server /etc/r…\"   3 minutes ago    Up 3 minutes (healthy)                                           redis\n8552f9919837   goharbor/harbor-db:v2.11.0                          \"/docker-entrypoint.…\"   3 minutes ago    Up 3 minutes (healthy)                                           harbor-db\n4985901e00f5   goharbor/harbor-portal:v2.11.0                      \"nginx -g 'daemon of…\"   3 minutes ago    Up 3 minutes (healthy)                                           harbor-portal\n9c297f67dd64   goharbor/harbor-registryctl:v2.11.0                 \"/home/harbor/start.…\"   3 minutes ago    Up 3 minutes (healthy)                                           registryctl\ne0d91f7bfd29   goharbor/registry-photon:v2.11.0                    \"/home/harbor/entryp…\"   3 minutes ago    Up 3 minutes (healthy)                                           registry\n3c06f80eb9f0   goharbor/harbor-log:v2.11.0                         \"/bin/sh -c /usr/loc…\"   3 minutes ago    Up 3 minutes (healthy)   127.0.0.1:1514-\u003e10514/tcp               harbor-log\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240927114737-hi61icj",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20240927114737-hi61icj",
				"updated": "20240927114737"
			},
			"Children": [
				{
					"ID": "20240927114737-sbhd2q8",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20240927114737-sbhd2q8",
						"updated": "20240927114737"
					},
					"Children": [
						{
							"ID": "20240927114737-60u995f",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240927114737-60u995f",
								"updated": "20240927114737"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "访问 Harbor Web 界面"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20240927114737-rdosf1s",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240927114737-rdosf1s",
				"updated": "20240927114737"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "打开浏览器，访问 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "https://harbor.test.com"
				},
				{
					"Type": "NodeText",
					"Data": "​，或"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "https://ip"
				},
				{
					"Type": "NodeText",
					"Data": "​，使用配置文件中设置的管理员用户名（默认是 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "admin"
				},
				{
					"Type": "NodeText",
					"Data": "​）和密码登录。"
				}
			]
		},
		{
			"ID": "20240927114737-7s81s6t",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20240927114737-7s81s6t",
				"updated": "20240927114737"
			},
			"Children": [
				{
					"ID": "20240927114737-0xpdnyh",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "My4=",
						"Num": 3
					},
					"Properties": {
						"id": "20240927114737-0xpdnyh",
						"updated": "20240927114737"
					},
					"Children": [
						{
							"ID": "20240927114737-9n1chw6",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240927114737-9n1chw6",
								"updated": "20240927114737"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "推送镜像测试"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20240927114737-yehxh56",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240927114737-yehxh56",
				"updated": "20240927114737"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "配置docker客户端："
				}
			]
		},
		{
			"ID": "20240927114737-3aplobr",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240927114737-3aplobr",
				"updated": "20240927114737"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "root@harbor:~# mkdir -p /etc/docker/certs.d/harbor.test.com\nroot@harbor:~# cp /data/harbor/certs/harbor.test.com.cert /etc/docker/certs.d/harbor.test.com/\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240927114737-4xae0at",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240927114737-4xae0at",
				"updated": "20240927114737"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "修改docker的daemon.json文件，使其信任harbor.test.com仓库："
				}
			]
		},
		{
			"ID": "20240927114737-8k7khi4",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240927114737-8k7khi4",
				"updated": "20240927114737"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "[root@k8s ~]# cat /etc/docker/daemon.json\n{  \"exec-opts\": [\"native.cgroupdriver=systemd\"],\n  \"registry-mirrors\": [\n        \"https://registry.docker-cn.com\",\n        \"https://registry-1.docker.io\",\n        \"https://registry.hub.docker.com\",\n        \"https://mirror.baidubce.com\",\n        \"https://ccr.ccs.tencentyun.com\",\n        \"https://wnsrsn9i.mirror.aliyuncs.com\"\n    ],\n   \"insecure-registries\": [\"192.168.0.159\", \"harbor.test.com\"]\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240927114737-81vzuu4",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240927114737-81vzuu4",
				"updated": "20240927114737"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "修改完成后重启docker服务生效。"
				}
			]
		},
		{
			"ID": "20240927114737-h3s59hr",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240927114737-h3s59hr",
				"updated": "20240927114737"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "测试登录："
				}
			]
		},
		{
			"ID": "20240927114737-9hys3vq",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240927114737-9hys3vq",
				"updated": "20240927114737"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "[root@k8s ~]# docker login -u admin -p Harbor12345 harbor.test.com\nWARNING! Using --password via the CLI is insecure. Use --password-stdin.\nWARNING! Your password will be stored unencrypted in /root/.docker/config.json.\nConfigure a credential helper to remove this warning. See\nhttps://docs.docker.com/engine/reference/commandline/login/#credentials-storeLogin Succeeded\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240927114737-b2de2gr",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240927114737-b2de2gr",
				"updated": "20240927114737"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "推送镜像测试："
				}
			]
		},
		{
			"ID": "20240927114737-qtly359",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240927114737-qtly359",
				"updated": "20240927114737"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "[root@k8s ~]# docker tag 192.168.0.159/library/nginx:1.27.0 harbor.test.com/library/nginx:1.27.0\n[root@k8s ~]# docker push harbor.test.com/library/nginx:1.27.0\nThe push refers to repository [harbor.test.com/library/nginx]\n3cf30c944fca: Pushed\n16d40ad06803: Pushed\ncf1614267117: Pushed\ne5ec4dd3995c: Pushed\ne8186e892c11: Pushed\na9a1ca1cae25: Pushed\n1387079e86ad: Pushed\n1.27.0: digest: sha256:9d1cac272a1ff8c4f4d6607940f179c9716b28c956231e61ae40a63990400c15 size: 1778\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240927114737-6wk22ti",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20240927114737-6wk22ti",
				"updated": "20240927114737"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20240927114737-kag9chv",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20240927114737-kag9chv",
						"updated": "20240927114737"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "说明："
						}
					]
				},
				{
					"ID": "20240927114737-btufe29",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20240927114737-btufe29",
						"updated": "20240927114737"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "library为harbor默认自带的项目，根据自己使用需求创建自定义的项目存放容器镜像。"
						}
					]
				}
			]
		},
		{
			"ID": "20240927114737-zmhsm42",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240927114737-zmhsm42",
				"updated": "20240927114737"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "4. 常见问题排查"
				}
			]
		},
		{
			"ID": "20240927114737-3chqnx0",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20240927114737-3chqnx0",
				"updated": "20240927114737"
			},
			"Children": [
				{
					"ID": "20240927114737-vhuif59",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20240927114737-vhuif59",
						"updated": "20240927114737"
					},
					"Children": [
						{
							"ID": "20240927114737-zigtl4a",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240927114737-zigtl4a",
								"updated": "20240927114737"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "确保防火墙允许 Harbor 端口"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20240927114737-5ptk4v1",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240927114737-5ptk4v1",
				"updated": "20240927114737"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "sudo ufw allow 80/tcp\nsudo ufw allow 443/tcp\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240927114737-9m0vmk1",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20240927114737-9m0vmk1",
				"updated": "20240927114737"
			},
			"Children": [
				{
					"ID": "20240927114737-n8zsg0m",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20240927114737-n8zsg0m",
						"updated": "20240927114737"
					},
					"Children": [
						{
							"ID": "20240927114737-hasj3f5",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240927114737-hasj3f5",
								"updated": "20240927114737"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "检查 Docker 和 Docker Compose 版本"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20240927114737-fyz8d9f",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240927114737-fyz8d9f",
				"updated": "20240927114737"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "确保安装的 Docker 和 Docker Compose 版本满足 Harbor 的最低要求。"
				}
			]
		},
		{
			"ID": "20240927114737-cs73vqm",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20240927114737-cs73vqm",
				"updated": "20240927114737"
			},
			"Children": [
				{
					"ID": "20240927114737-qysp47b",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "My4=",
						"Num": 3
					},
					"Properties": {
						"id": "20240927114737-qysp47b",
						"updated": "20240927114737"
					},
					"Children": [
						{
							"ID": "20240927114737-g0i7kvu",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240927114737-g0i7kvu",
								"updated": "20240927114737"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "x509: cannot validate certificate"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20240927114737-tuiz378",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240927114737-tuiz378",
				"updated": "20240927114737"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "[root@k8s ~]# docker login -u admin -p Harbor12345 192.168.0.157\nWARNING! Using --password via the CLI is insecure. Use --password-stdin.\nError response from daemon: Get https://192.168.0.157/v2/: x509: cannot validate certificate for 192.168.0.157 because it doesn't contain any IP SANs\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240927114737-fybm454",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240927114737-fybm454",
				"updated": "20240927114737"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "解决：改用域名登录。"
				}
			]
		},
		{
			"ID": "20240927114737-1n8liku",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20240927114737-1n8liku",
				"updated": "20240927114737"
			},
			"Children": [
				{
					"ID": "20240927114737-if4rs0y",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "NC4=",
						"Num": 4
					},
					"Properties": {
						"id": "20240927114737-if4rs0y",
						"updated": "20240927114737"
					},
					"Children": [
						{
							"ID": "20240927114737-hplz2zu",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240927114737-hplz2zu",
								"updated": "20240927114737"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "502 Bad Gateway"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20240927114737-d8qw1p1",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240927114737-d8qw1p1",
				"updated": "20240927114737"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "[root@k8s ~]# docker login -u admin -p Harbor12345 harbor.test.com\nWARNING! Using --password via the CLI is insecure. Use --password-stdin.\nError response from daemon: login attempt to https://harbor.test.com/v2/ failed with status: 502 Bad Gateway\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240927114737-oze1lxs",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240927114737-oze1lxs",
				"updated": "20240927114737"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "解决："
				}
			]
		},
		{
			"ID": "20240927114737-l5g1kjx",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240927114737-l5g1kjx",
				"updated": "20240927114737"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "重启下部署harbor机器的docker服务，然后重新登录："
				}
			]
		},
		{
			"ID": "20240927114737-k0tz1q6",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240927114737-k0tz1q6",
				"updated": "20240927114737"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "[root@k8s ~]# docker login -u admin -p Harbor12345 harbor.test.com\nWARNING! Using --password via the CLI is insecure. Use --password-stdin.\nWARNING! Your password will be stored unencrypted in /root/.docker/config.json.\nConfigure a credential helper to remove this warning. See\nhttps://docs.docker.com/engine/reference/commandline/login/#credentials-store\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240927114737-jxpw4a1",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20240927114737-jxpw4a1",
				"updated": "20240927114737"
			},
			"Children": [
				{
					"ID": "20240927114737-td2stof",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "NS4=",
						"Num": 5
					},
					"Properties": {
						"id": "20240927114737-td2stof",
						"updated": "20240927114737"
					},
					"Children": [
						{
							"ID": "20240927114737-uz5irpj",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240927114737-uz5irpj",
								"updated": "20240927114737"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "在harbor本地机器使用docker测试登录，报错如下："
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20240927114737-p7sa2we",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240927114737-p7sa2we",
				"updated": "20240927114737"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "root@harbor:~# docker login -u admin -p Harbor12345 harbor.test.com\nWARNING! Using --password via the CLI is insecure. Use --password-stdin.\nError response from daemon: Get \"http://harbor.test.com/v2/\": EOF\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240927114737-sslmt88",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240927114737-sslmt88",
				"updated": "20240927114737"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "这个错误通常是由于 Docker 无法连接到指定的 Harbor 导致，由于是本地连接测试，不存在网络连接问题，进一步排查为docker配置了代理导致，取消代理后测试正常。"
				}
			]
		},
		{
			"ID": "20240927114737-c5x6592",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20240927114737-c5x6592",
				"updated": "20240927114737"
			},
			"Children": [
				{
					"ID": "20240927114737-tzdnbvw",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Ni4=",
						"Num": 6
					},
					"Properties": {
						"id": "20240927114737-tzdnbvw",
						"updated": "20240927114737"
					},
					"Children": [
						{
							"ID": "20240927114737-qnlm2ks",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240927114737-qnlm2ks",
								"updated": "20240927114737"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "k8s部署pod从harbor拉取镜像提示“ x509: certificate signed by unknown authority”"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20240927114737-btq60q8",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240927114737-btq60q8",
				"updated": "20240927114737"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "本地部署的harbor使用的是https，证书是自签名的，不受信任。需要配置docker、containerd、CRI-O（取决于k8s使用的容器运行时）信任harbor仓库。"
				}
			]
		}
	]
}