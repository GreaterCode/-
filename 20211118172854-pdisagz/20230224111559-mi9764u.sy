{
	"ID": "20230224111559-mi9764u",
	"Spec": "1",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20230224111559-mi9764u",
		"title": "goDelve使用详解",
		"updated": "20230224111714"
	},
	"Children": [
		{
			"ID": "20230224111559-2d112rv",
			"Type": "NodeThematicBreak",
			"Properties": {
				"id": "20230224111559-2d112rv"
			}
		},
		{
			"ID": "20230224111559-arqt8h4",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20230224111559-arqt8h4"
			},
			"Children": [
				{
					"ID": "20230224111559-qxaj4t4",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230224111559-qxaj4t4"
					},
					"Children": [
						{
							"ID": "20230224111559-u9l3a9g",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230224111559-u9l3a9g"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "a",
									"TextMarkAHref": "https://github.com/marmotedu/geekbang-go/blob/master/Delve%E4%BD%BF%E7%94%A8%E8%AF%A6%E8%A7%A3.md",
									"TextMarkTextContent": "https://github.com/marmotedu/geekbang-go/blob/master/Delve%E4%BD%BF%E7%94%A8%E8%AF%A6%E8%A7%A3.md"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230224111559-qjowobx",
			"Type": "NodeThematicBreak",
			"Properties": {
				"id": "20230224111559-qjowobx"
			}
		},
		{
			"ID": "20230224111559-wscpnjb",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230224111559-wscpnjb"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Delve使用详解"
				}
			]
		},
		{
			"ID": "20230224111559-176hrjd",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230224111559-176hrjd"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "a",
					"TextMarkAHref": "https://github.com/go-delve/delve",
					"TextMarkTextContent": "Delve"
				},
				{
					"Type": "NodeText",
					"Data": "是一个简单、功能齐全的Go代码调试工具，使用方式与GDB比较类似，也是目前最受欢迎的Go代码调试工具。"
				}
			]
		},
		{
			"ID": "20230224111559-jyqma9g",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230224111559-jyqma9g"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "安装delve工具"
				}
			]
		},
		{
			"ID": "20230224111559-5te0i41",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230224111559-5te0i41"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "要使用 delve 调试工具，首先需要安装 delve ，安装方法如下："
				}
			]
		},
		{
			"ID": "20230224111559-39dyud9",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230224111559-39dyud9"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "$ go install github.com/go-delve/delve/cmd/dlv@latest\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230224111559-rpd9oi9",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230224111559-rpd9oi9"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "delve通过"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "dlv"
				},
				{
					"Type": "NodeText",
					"Data": "命令行工具来进行调试。安装后执行 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "dlv version"
				},
				{
					"Type": "NodeText",
					"Data": " ，如果能够正确输出版本号，说明安装成功："
				}
			]
		},
		{
			"ID": "20230224111559-wq4lqr2",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230224111559-wq4lqr2"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "$ dlv version\nDelve Debugger\nVersion: 1.7.1\nBuild: $Id: 3bde2354aafb5a4043fd59838842c4cd4a8b6f0b $\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230224111559-qj2vjg6",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230224111559-qj2vjg6"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "安装完成后，你可以执行"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "dlv --help"
				},
				{
					"Type": "NodeText",
					"Data": "来查看"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "dlv"
				},
				{
					"Type": "NodeText",
					"Data": "支持的命令和功能："
				}
			]
		},
		{
			"ID": "20230224111559-2pw0775",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230224111559-2pw0775"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "$ dlv --help\n...\n\nUsage:\n  dlv [command]\n\nAvailable Commands:\n  attach      连接到正在运行的流程并开始调试.\n  connect     连接到无头调试服务器.\n  core        检查核心转储.\n  dap         通过DAP协议，启动无头 TCP 服务器通信.\n  debug       编译并开始调试当前目录下的主包或指定的包.\n  exec        执行预编译的二进制文件，并开始调试会话.\n  help        帮助信息\n  run         弃用的命令。使用'debug'替代它.\n  test        编译测试二进制文件并开始调试程序.\n  trace       编译并开始跟踪程序.\n  version     打印版本信息.\n\nFlags:\n      ...\n\nUse \"dlv [command] --help\" for more information about a command.\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230224111559-bz4nwz5",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230224111559-bz4nwz5"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "进入调试模式"
				}
			]
		},
		{
			"ID": "20230224111559-u7i49zg",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230224111559-u7i49zg"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "使用"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "dlv"
				},
				{
					"Type": "NodeText",
					"Data": "调试程序，首先需要进入到调试模式中。"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "dlv"
				},
				{
					"Type": "NodeText",
					"Data": "支持四种方式进入调试模式："
				}
			]
		},
		{
			"ID": "20230224111559-zbpmkfp",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20230224111559-zbpmkfp"
			},
			"Children": [
				{
					"ID": "20230224111559-fan3gg8",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20230224111559-fan3gg8"
					},
					"Children": [
						{
							"ID": "20230224111559-pnqcxmz",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230224111559-pnqcxmz"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "dlv attach"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230224111559-1zzlciw",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230224111559-1zzlciw"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "dlv attach"
				},
				{
					"Type": "NodeText",
					"Data": "可以用来调试一个正在运行的程序。执行以下命令进入调试模式："
				}
			]
		},
		{
			"ID": "20230224111559-33rdrqm",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230224111559-33rdrqm"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "$ dlv attach $PID  # PID 是需要调试程序的进程 ID\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230224111559-yg5ethf",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20230224111559-yg5ethf"
			},
			"Children": [
				{
					"ID": "20230224111559-wqquyjs",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20230224111559-wqquyjs"
					},
					"Children": [
						{
							"ID": "20230224111559-1ecf99m",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230224111559-1ecf99m"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "dlv debug"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230224111559-tppp3oq",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230224111559-tppp3oq"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "dlv debug"
				},
				{
					"Type": "NodeText",
					"Data": "可以通过源码文件进入调试模式。"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "dlv debug"
				},
				{
					"Type": "NodeText",
					"Data": "会先编译Go源文件，并在当前目录下生成一个名为"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "__debug_bin"
				},
				{
					"Type": "NodeText",
					"Data": "的可执行二进制文件，接着进入调试模式。执行以下命令进入调试模式："
				}
			]
		},
		{
			"ID": "20230224111559-scxtihd",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230224111559-scxtihd"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "$ dlv debug main.go\nType 'help' for list of commands.\n(dlv)\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230224111559-qdwyvl8",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230224111559-qdwyvl8"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "退出调试模式时，"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "__debug_bin"
				},
				{
					"Type": "NodeText",
					"Data": "文件会被自动被删除。"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "dlv debug"
				},
				{
					"Type": "NodeText",
					"Data": "是最简单的模式，常见于调试小型程序。"
				}
			]
		},
		{
			"ID": "20230224111559-vcubq0u",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20230224111559-vcubq0u"
			},
			"Children": [
				{
					"ID": "20230224111559-uiqm74g",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "My4=",
						"Num": 3
					},
					"Properties": {
						"id": "20230224111559-uiqm74g"
					},
					"Children": [
						{
							"ID": "20230224111559-mvch3yn",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230224111559-mvch3yn"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "dlv exec"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230224111559-aiz5tqs",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230224111559-aiz5tqs"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "dlv exec"
				},
				{
					"Type": "NodeText",
					"Data": "可以通过一个二进制文件进入调试模式。执行以下命令进入调试模式："
				}
			]
		},
		{
			"ID": "20230224111559-66771v5",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230224111559-66771v5"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "$ dlv exec /opt/iam/bin/iam-apiserver  ## 直接启动调试\n$ dlv exec /opt/iam/bin/iam-apiserver -- --config=/etc/iam/iam-apiserver.yaml # `--`后的内容为`/opt/iam/bin/iam-apiserver`的命令行参数\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230224111559-2fpu2sc",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230224111559-2fpu2sc"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "如果希望二进制文件被调试，在编译二进制文件时需要关闭内联优化："
				}
			]
		},
		{
			"ID": "20230224111559-ql0aipv",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230224111559-ql0aipv"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "$ go build -gcflags=all=\"-N -l\"\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230224111559-kcz4x7w",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230224111559-kcz4x7w"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "如果不希望二进制文件被调试，则可以使用以下编译选项："
				}
			]
		},
		{
			"ID": "20230224111559-1rx3nmx",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230224111559-1rx3nmx"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "$ go build -ldflags \"-s -w\" # -s: 去掉符号信息；-w: 去掉 DWARF 调试信息。\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230224111559-thmjfib",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20230224111559-thmjfib"
			},
			"Children": [
				{
					"ID": "20230224111559-eitp4ty",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "NC4=",
						"Num": 4
					},
					"Properties": {
						"id": "20230224111559-eitp4ty"
					},
					"Children": [
						{
							"ID": "20230224111559-4e3kmwd",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230224111559-4e3kmwd"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "dlv core"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230224111559-ut54ndc",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230224111559-ut54ndc"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "dlv core"
				},
				{
					"Type": "NodeText",
					"Data": "使用core文件启动调试，这种方式可以找出可执行文件core的原因，具体执行命令如下：\n`"
				}
			]
		},
		{
			"ID": "20230224111559-jq3sqzc",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230224111559-jq3sqzc"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "$ dlv core \u003cexecutable-file\u003e \u003ccore-file\u003e\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230224111559-84llisr",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230224111559-84llisr"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "调试命令"
				}
			]
		},
		{
			"ID": "20230224111559-56bc0z5",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230224111559-56bc0z5"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "进入调试模式之后，我们就可以利用调试模式中提供的丰富的调试命令来调试程序。"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "dlv"
				},
				{
					"Type": "NodeText",
					"Data": "提供了以下调试命令："
				}
			]
		},
		{
			"ID": "20230224111559-fssygqz",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230224111559-fssygqz"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "(dlv) help\nThe following commands are available:\n\nRunning the program:\n    call ------------------------ 恢复进程，注入一个函数调用(还在实验阶段!!)\n    continue (alias: c) --------- 运行到断点或程序终止.\n    next (alias: n) ------------- 转到下一个源码行.\n    rebuild --------------------- 重建目标可执行文件并重新启动它。 如果可执行文件不是由 delve 构建的，则不起作用.\n    restart (alias: r) ---------- 重启进程.\n    step (alias: s) ------------- 单步执行程序.\n    step-instruction (alias: si)  单步执行一条cpu指令.\n    stepout (alias: so) --------- 跳出当前函数.\n\nManipulating breakpoints:\n    break (alias: b) ------- 设置断点.\n    breakpoints (alias: bp)  输出活动断点的信息.\n    clear ------------------ 删除断点.\n    clearall --------------- 删除多个断点.\n    condition (alias: cond)  设置断点条件.\n    on --------------------- 在命中断点时执行命令.\n    toggle ----------------- 打开或关闭断点.\n    trace (alias: t) ------- 设置跟踪点.\n    watch ------------------ 设置观察点.\n\nViewing program variables and memory:\n    args ----------------- 打印函数参数.\n    display -------------- 每次程序停止时打印表达式的值.\n    examinemem (alias: x)  检查给定地址处的原始内存.\n    locals --------------- 打印局部变量.\n    print (alias: p) ----- 计算一个表达式.\n    regs ----------------- 打印CPU寄存器的内容.\n    set ------------------ 更改变量的值.\n    vars ----------------- 打印包变量.\n    whatis --------------- 打印表达式的类型.\n\nListing and switching between threads and goroutines:\n    goroutine (alias: gr) -- 显示或更改当前goroutine\n    goroutines (alias: grs)  列举程序goroutines.\n    thread (alias: tr) ----- 切换到指定的线程.\n    threads ---------------- 打印每个跟踪线程的信息.\n\nViewing the call stack and selecting frames:\n    deferred --------- 在延迟调用的上下文中执行命令.\n    down ------------- 将当前帧向下移动.\n    frame ------------ 设置当前帧，或在不同的帧上执行命令.\n    stack (alias: bt)  打印堆栈跟踪信息.\n    up --------------- 向上移动当前帧.\n\nOther commands:\n    config --------------------- 修改配置参数.\n    disassemble (alias: disass)  反汇编程序.\n    dump ----------------------- 从当前进程状态创建核心转储\n    edit (alias: ed) ----------- 在$DELVE_EDITOR或$EDITOR中打开你所在的位置\n    exit (alias: quit | q) ----- 退出调试器.\n    funcs ---------------------- 打印函数列表.\n    help (alias: h) ------------ 打印帮助信息.\n    libraries ------------------ 列出加载的动态库\n    list (alias: ls | l) ------- 显示源代码.\n    source --------------------- 执行包含delve命令列表的文件\n    sources -------------------- 打印源文件列表.\n    types ---------------------- 打印类型列表\n\nType help followed by a command for full documentation.\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230224111559-kxp0251",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230224111559-kxp0251"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "dlv"
				},
				{
					"Type": "NodeText",
					"Data": "支持的调试命令有很多，常用的调试命令有：break、print、next、continue、args、locals、list、breakpoints、restart、exit。"
				}
			]
		},
		{
			"ID": "20230224111559-4gx35fj",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230224111559-4gx35fj"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "使用delve调试代码"
				}
			]
		},
		{
			"ID": "20230224111559-owdo7k1",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230224111559-owdo7k1"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "假设我们启动"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "/opt/iam/bin/iam-apiserver -- --config=/etc/iam/iam-apiserver.yaml"
				},
				{
					"Type": "NodeText",
					"Data": "报以下错误："
				}
			]
		},
		{
			"ID": "20230224111559-8t53nw9",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230224111559-8t53nw9"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "...\n2021-09-17 20:23:26.475\tINFO\tapiserver\tserver/genericapiserver.go:88\tGET    /debug/pprof/threadcreate --\u003e github.com/gin-contrib/pprof.pprofHandler.func1 (5 handlers)\n2021-09-17 20:23:26.475\tINFO\tapiserver\tserver/genericapiserver.go:88\tGET    /version --\u003e github.com/marmotedu/iam/internal/pkg/server.(*GenericAPIServer).InstallAPIs.func2 (5 handlers)\n2021-09-17 20:23:26.481\tINFO\tapiserver\tgorm@v1.21.12/gorm.go:202\tmysql/mysql.go:75[error] failed to initialize database,got error commands out of sync. Did you run multiple statements at once?\n2021-09-17 20:23:26.481\tFATAL\tapiserver\tapiserver/server.go:139\tFailed to get cache instance: got nil cache server\ngithub.com/marmotedu/iam/internal/apiserver.(*completedExtraConfig).New\n\t/home/colin/workspace/golang/src/github.com/marmotedu/iam/internal/apiserver/server.go:139\ngithub.com/marmotedu/iam/internal/apiserver.createAPIServer\n\t/home/colin/workspace/golang/src/github.com/marmotedu/iam/internal/apiserver/server.go:66\ngithub.com/marmotedu/iam/internal/apiserver.Run\n\t/home/colin/workspace/golang/src/github.com/marmotedu/iam/internal/apiserver/run.go:11\ngithub.com/marmotedu/iam/internal/apiserver.run.func1\n\t/home/colin/workspace/golang/src/github.com/marmotedu/iam/internal/apiserver/app.go:46\ngithub.com/marmotedu/iam/pkg/app.(*App).runCommand\n\t/home/colin/workspace/golang/src/github.com/marmotedu/iam/pkg/app/app.go:278\ngithub.com/spf13/cobra.(*Command).execute\n\t/data/mod/github.com/spf13/cobra@v1.2.1/command.go:856\ngithub.com/spf13/cobra.(*Command).ExecuteC\n\t/data/mod/github.com/spf13/cobra@v1.2.1/command.go:974\ngithub.com/spf13/cobra.(*Command).Execute\n\t/data/mod/github.com/spf13/cobra@v1.2.1/command.go:902\ngithub.com/marmotedu/iam/pkg/app.(*App).Run\n\t/home/colin/workspace/golang/src/github.com/marmotedu/iam/pkg/app/app.go:233\nmain.main\n\t/home/colin/workspace/golang/src/github.com/marmotedu/iam/cmd/iam-apiserver/apiserver.go:24\nruntime.main\n\t/home/colin/go/go1.17/src/runtime/proc.go:255\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230224111559-o3tatpm",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230224111559-o3tatpm"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "现在需要通过"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "dlv"
				},
				{
					"Type": "NodeText",
					"Data": "工具找到故障原因。具体调试步骤如下："
				}
			]
		},
		{
			"ID": "20230224111559-kvfufq8",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20230224111559-kvfufq8"
			},
			"Children": [
				{
					"ID": "20230224111559-c5q95b9",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20230224111559-c5q95b9"
					},
					"Children": [
						{
							"ID": "20230224111559-tv7balh",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230224111559-tv7balh"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "进入调试模式"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230224111559-bq6ez1f",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230224111559-bq6ez1f"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "这里选择使用"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "dlv exec"
				},
				{
					"Type": "NodeText",
					"Data": "的方式进入到调试模式："
				}
			]
		},
		{
			"ID": "20230224111559-8kwn026",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230224111559-8kwn026"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "$ dlv exec /opt/iam/bin/iam-apiserver -- --config=/etc/iam/iam-apiserver.yaml\nType 'help' for list of commands.\n(dlv)\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230224111559-l0zqb1e",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20230224111559-l0zqb1e"
			},
			"Children": [
				{
					"ID": "20230224111559-g0xnn17",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20230224111559-g0xnn17"
					},
					"Children": [
						{
							"ID": "20230224111559-4xowmhy",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230224111559-4xowmhy"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "在关键位置打断点"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230224111559-zvlaahg",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230224111559-zvlaahg"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "我们在报错栈中最靠近报错信息的位置打上断点："
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "/home/colin/workspace/golang/src/github.com/marmotedu/iam/internal/apiserver/server.go:139"
				},
				{
					"Type": "NodeText",
					"Data": "。"
				}
			]
		},
		{
			"ID": "20230224111559-kotkpgm",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230224111559-kotkpgm"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "(dlv) b /home/colin/workspace/golang/src/github.com/marmotedu/iam/internal/apiserver/server.go:139\nBreakpoint 1 set at 0xd24de2 for github.com/marmotedu/iam/internal/apiserver.(*completedExtraConfig).New() ./internal/apiserver/server.go:139\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230224111559-xk8xlky",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20230224111559-xk8xlky"
			},
			"Children": [
				{
					"ID": "20230224111559-05283bi",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "My4=",
						"Num": 3
					},
					"Properties": {
						"id": "20230224111559-05283bi"
					},
					"Children": [
						{
							"ID": "20230224111559-mosysvt",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230224111559-mosysvt"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "启动程序"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230224111559-d9rfijz",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230224111559-d9rfijz"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "执行"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "dlv exec"
				},
				{
					"Type": "NodeText",
					"Data": "命令后，其实程序还没有真正运行，接着需要你通过"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "restart"
				},
				{
					"Type": "NodeText",
					"Data": "命令运行程序："
				}
			]
		},
		{
			"ID": "20230224111559-w0kglh0",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230224111559-w0kglh0"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "$ dlv exec /opt/iam/bin/iam-apiserver -- --config=/etc/iam/iam-apiserver.yaml\nType 'help' for list of commands.\n(dlv) b /home/colin/workspace/golang/src/github.com/marmotedu/iam/internal/apiserver/server.go:139\nBreakpoint 1 set at 0xd24de2 for github.com/marmotedu/iam/internal/apiserver.(*completedExtraConfig).New() ./internal/apiserver/server.go:139\n(dlv) r\nProcess restarted with PID 30155\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230224111559-8smr316",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20230224111559-8smr316"
			},
			"Children": [
				{
					"ID": "20230224111559-msr7eek",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "NC4=",
						"Num": 4
					},
					"Properties": {
						"id": "20230224111559-msr7eek"
					},
					"Children": [
						{
							"ID": "20230224111559-tgy0ceu",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230224111559-tgy0ceu"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "继续执行到断点处"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230224111559-3aatt19",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230224111559-3aatt19"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "程序启动后，需要你执行"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "continue"
				},
				{
					"Type": "NodeText",
					"Data": "运行到断点处："
				}
			]
		},
		{
			"ID": "20230224111559-k9wc8lu",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230224111559-k9wc8lu"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "Z28="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "(dlv) c\n...\n2021-09-17 20:31:12.815\tINFO\tapiserver\tgorm@v1.21.12/gorm.go:202\tmysql/mysql.go:75[error] failed to initialize database,got error commands out of sync. Did you run multiple statements at once?\n\u003e github.com/marmotedu/iam/internal/apiserver.(*completedExtraConfig).New() ./internal/apiserver/server.go:139 (hits goroutine(1):1 total:1) (PC: 0xd24de2)\nWarning: debugging optimized function\n   134:\t\tstoreIns, _ := mysql.GetMySQLFactoryOr(c.mysqlOptions)\n   135:\t\t// storeIns, _ := etcd.GetEtcdFactoryOr(c.etcdOptions, nil)\n   136:\t\tstore.SetClient(storeIns)\n   137:\t\tcacheIns, err := cachev1.GetCacheInsOr(storeIns)\n   138:\t\tif err != nil {\n=\u003e 139:\t\t\tlog.Fatalf(\"Failed to get cache instance: %s\", err.Error())\n   140:\t\t}\n   141:\n   142:\t\tpb.RegisterCacheServer(grpcServer, cacheIns)\n   143:\n   144:\t\treflection.Register(grpcServer)\n(dlv)\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230224111559-2eks3h1",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230224111559-2eks3h1"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "通过第"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "139"
				},
				{
					"Type": "NodeText",
					"Data": "行的代码，我们发现日志报错是因为"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "cachev1.GetCacheInsOr"
				},
				{
					"Type": "NodeText",
					"Data": "返回了错误信息。我们可以在"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "cachev1.GetCacheInsOr"
				},
				{
					"Type": "NodeText",
					"Data": "处打断点，继续排障。"
				}
			]
		},
		{
			"ID": "20230224111559-s11dmpt",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20230224111559-s11dmpt"
			},
			"Children": [
				{
					"ID": "20230224111559-lgzp92d",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "NS4=",
						"Num": 5
					},
					"Properties": {
						"id": "20230224111559-lgzp92d"
					},
					"Children": [
						{
							"ID": "20230224111559-usdebyv",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230224111559-usdebyv"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "重新打断点继续排障"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230224111559-fuxmnt4",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230224111559-fuxmnt4"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "cachev1.GetCacheInsOr"
				},
				{
					"Type": "NodeText",
					"Data": "处打断点，重新执行程序，并进入到"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "cachev1.GetCacheInsOr"
				},
				{
					"Type": "NodeText",
					"Data": "函数中，查找报错的原因："
				}
			]
		},
		{
			"ID": "20230224111559-lxpyv0k",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230224111559-lxpyv0k"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "Z28="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "(dlv) b /home/colin/workspace/golang/src/github.com/marmotedu/iam/internal/apiserver/server.go:137\nBreakpoint 2 set at 0xd24dd3 for github.com/marmotedu/iam/internal/apiserver.(*completedExtraConfig).New() ./internal/apiserver/server.go:137\n(dlv) r\nProcess restarted with PID 5700\n(dlv) c\n...\n\u003e github.com/marmotedu/iam/internal/apiserver.(*completedExtraConfig).New() ./internal/apiserver/server.go:137 (hits goroutine(1):1 total:1) (PC: 0xd24dd3)\nWarning: debugging optimized function\n   132:\t\tgrpcServer := grpc.NewServer(opts...)\n   133:\n   134:\t\tstoreIns, _ := mysql.GetMySQLFactoryOr(c.mysqlOptions)\n   135:\t\t// storeIns, _ := etcd.GetEtcdFactoryOr(c.etcdOptions, nil)\n   136:\t\tstore.SetClient(storeIns)\n=\u003e 137:\t\tcacheIns, err := cachev1.GetCacheInsOr(storeIns)\n   138:\t\tif err != nil {\n   139:\t\t\tlog.Fatalf(\"Failed to get cache instance: %s\", err.Error())\n   140:\t\t}\n   141:\n   142:\t\tpb.RegisterCacheServer(grpcServer, cacheIns)\n(dlv) s\n\u003e github.com/marmotedu/iam/internal/apiserver/controller/v1/cache.GetCacheInsOr() ./internal/apiserver/controller/v1/cache/cache.go:34 (PC: 0xd20982)\nWarning: debugging optimized function\n    29:\t\tonce        sync.Once\n    30:\t)\n    31:\n    32:\t// GetCacheInsOr return cache server instance with given factory.\n    33:\tfunc GetCacheInsOr(store store.Factory) (*Cache, error) {\n=\u003e  34:\t\tif store != nil {\n    35:\t\t\tonce.Do(func() {\n    36:\t\t\t\tcacheServer = \u0026Cache{store}\n    37:\t\t\t})\n    38:\t\t}\n    39:\n(dlv) s\n\u003e github.com/marmotedu/iam/internal/apiserver/controller/v1/cache.GetCacheInsOr() ./internal/apiserver/controller/v1/cache/cache.go:40 (PC: 0xd209c7)\nWarning: debugging optimized function\n    35:\t\t\tonce.Do(func() {\n    36:\t\t\t\tcacheServer = \u0026Cache{store}\n    37:\t\t\t})\n    38:\t\t}\n    39:\n=\u003e  40:\t\tif cacheServer == nil {\n    41:\t\t\treturn nil, fmt.Errorf(\"got nil cache server\")\n    42:\t\t}\n    43:\n    44:\t\treturn cacheServer, nil\n    45:\t}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230224111559-o4m82px",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230224111559-o4m82px"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "打上断点后，可以重新启动程序，并运行到断点处。在断点处执行"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "step"
				},
				{
					"Type": "NodeText",
					"Data": "可以进入到"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "cachev1.GetCacheInsOr"
				},
				{
					"Type": "NodeText",
					"Data": "函数中。"
				}
			]
		},
		{
			"ID": "20230224111559-9yrx00g",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230224111559-9yrx00g"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "通过执行"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "cachev1.GetCacheInsOr"
				},
				{
					"Type": "NodeText",
					"Data": "中的代码，我们发现报错原因是因为"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "cacheServer == nil"
				},
				{
					"Type": "NodeText",
					"Data": "，"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "cacheServer == nil"
				},
				{
					"Type": "NodeText",
					"Data": "又是因为"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "store == nil"
				},
				{
					"Type": "NodeText",
					"Data": "导致"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "cacheServer"
				},
				{
					"Type": "NodeText",
					"Data": "没有被初始化。store是由"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "GetMySQLFactoryOr"
				},
				{
					"Type": "NodeText",
					"Data": "函数返回的，所以我们继续打断点，继续排障。"
				}
			]
		},
		{
			"ID": "20230224111559-rkwibqq",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20230224111559-rkwibqq"
			},
			"Children": [
				{
					"ID": "20230224111559-g0xxqu6",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Ni4=",
						"Num": 6
					},
					"Properties": {
						"id": "20230224111559-g0xxqu6"
					},
					"Children": [
						{
							"ID": "20230224111559-1k4p4ag",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230224111559-1k4p4ag"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "重新打断点继续排障"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230224111559-hvojud7",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230224111559-hvojud7"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "GetMySQLFactoryOr"
				},
				{
					"Type": "NodeText",
					"Data": "所在的位置"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": ".../internal/apiserver/server.go:134"
				},
				{
					"Type": "NodeText",
					"Data": "处打断点，重新执行程序，继续排障："
				}
			]
		},
		{
			"ID": "20230224111559-m4m0si1",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230224111559-m4m0si1"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "(dlv) b /home/colin/workspace/golang/src/github.com/marmotedu/iam/internal/apiserver/server.go:134\nBreakpoint 3 set at 0xd24d96 for github.com/marmotedu/iam/internal/apiserver.(*completedExtraConfig).New() ./internal/apiserver/server.go:134\n(dlv) r\nProcess restarted with PID 9472\n(dlv) c\n...\n\u003e github.com/marmotedu/iam/internal/apiserver.(*completedExtraConfig).New() ./internal/apiserver/server.go:134 (hits goroutine(1):1 total:1) (PC: 0xd24d96)\nWarning: debugging optimized function\n   129:\t\t\tlog.Fatalf(\"Failed to generate credentials %s\", err.Error())\n   130:\t\t}\n   131:\t\topts := []grpc.ServerOption{grpc.MaxRecvMsgSize(c.MaxMsgSize), grpc.Creds(creds)}\n   132:\t\tgrpcServer := grpc.NewServer(opts...)\n   133:\n=\u003e 134:\t\tstoreIns, _ := mysql.GetMySQLFactoryOr(c.mysqlOptions)\n   135:\t\t// storeIns, _ := etcd.GetEtcdFactoryOr(c.etcdOptions, nil)\n   136:\t\tstore.SetClient(storeIns)\n   137:\t\tcacheIns, err := cachev1.GetCacheInsOr(storeIns)\n   138:\t\tif err != nil {\n   139:\t\t\tlog.Fatalf(\"Failed to get cache instance: %s\", err.Error())\n(dlv) s\n\u003e github.com/marmotedu/iam/internal/apiserver/store/mysql.GetMySQLFactoryOr() ./internal/apiserver/store/mysql/mysql.go:56 (PC: 0xd16aaf)\nWarning: debugging optimized function\n    51:\t\tmysqlFactory store.Factory\n    52:\t\tonce         sync.Once\n    53:\t)\n    54:\n    55:\t// GetMySQLFactoryOr create mysql factory with the given config.\n=\u003e  56:\tfunc GetMySQLFactoryOr(opts *genericoptions.MySQLOptions) (store.Factory, error) {\n    57:\t\tif opts == nil \u0026\u0026 mysqlFactory == nil {\n    58:\t\t\treturn nil, fmt.Errorf(\"failed to get mysql store fatory\")\n    59:\t\t}\n    60:\n    61:\t\tvar err error\n(dlv) print opts\n*github.com/marmotedu/iam/internal/pkg/options.MySQLOptions {\n\tHost: \"127.0.0.1:3309\",\n\tUsername: \"iam\",\n\tPassword: \"iam59!z$\",\n\tDatabase: \"iam\",\n\tMaxIdleConnections: 100,\n\tMaxOpenConnections: 100,\n\tMaxConnectionLifeTime: golang.org/x/net/http2.prefaceTimeout (10000000000),\n\tLogLevel: 4,}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230224111559-a6hi9cy",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230224111559-a6hi9cy"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "上面的调试步骤中，我们打印了"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "options.MySQLOptions"
				},
				{
					"Type": "NodeText",
					"Data": "类型的变量"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "opts"
				},
				{
					"Type": "NodeText",
					"Data": "的值："
				}
			]
		},
		{
			"ID": "20230224111559-qiinwhq",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230224111559-qiinwhq"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "Z28="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": " {\n\tHost: \"127.0.0.1:3309\",\n\tUsername: \"iam\",\n\tPassword: \"iam59!z$\",\n\tDatabase: \"iam\",\n\tMaxIdleConnections: 100,\n\tMaxOpenConnections: 100,\n\tMaxConnectionLifeTime: golang.org/x/net/http2.prefaceTimeout (10000000000),\n\tLogLevel: 4,}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230224111559-y3ppdyt",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230224111559-y3ppdyt"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "很明显，Host的地址是错误的，应该是"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "\u0026quot;127.0.0.1:3306\u0026quot;"
				},
				{
					"Type": "NodeText",
					"Data": "。所以，这里我们就找到了程序报错的根本原因：MySQL的端口配置错了。"
				}
			]
		},
		{
			"ID": "20230224111559-xkqfpmt",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230224111559-xkqfpmt"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "找到问题的根因之后，就可以修改"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "/etc/iam/iam-apiserver.yaml"
				},
				{
					"Type": "NodeText",
					"Data": "配置文件中的"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "mysql.host"
				},
				{
					"Type": "NodeText",
					"Data": "配置项的值为："
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "127.0.0.1:3306"
				},
				{
					"Type": "NodeText",
					"Data": "。重新启动"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "iam-apiserver"
				},
				{
					"Type": "NodeText",
					"Data": "，发现服务成功运行。"
				}
			]
		},
		{
			"ID": "20230224111559-p5aa0sf",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230224111559-p5aa0sf"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "delve是一款非常强大的调试工具，本文只用了其中一小部分功能，更多的delve功能需要你解锁。在你能够熟练使用delve工具之后，相信delve能够极大的提高你的排障效率。"
				}
			]
		}
	]
}