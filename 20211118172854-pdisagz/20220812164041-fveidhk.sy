{
	"ID": "20220812164041-fveidhk",
	"Spec": "1",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20220812164041-fveidhk",
		"scroll": "{\u0026quot;startId\u0026quot;:\u0026quot;20220812164041-viuhmo8\u0026quot;,\u0026quot;endId\u0026quot;:\u0026quot;20220812164041-hnvj3v5\u0026quot;,\u0026quot;scrollTop\u0026quot;:100,\u0026quot;focusId\u0026quot;:\u0026quot;20220812164041-viuhmo8\u0026quot;,\u0026quot;focusStart\u0026quot;:0,\u0026quot;focusEnd\u0026quot;:0}",
		"title": "docker",
		"updated": "20230217062444"
	},
	"Children": [
		{
			"ID": "20220812164041-viuhmo8",
			"Type": "NodeThematicBreak",
			"Properties": {
				"id": "20220812164041-viuhmo8"
			}
		},
		{
			"ID": "20220812164041-6d90vn6",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20220812164041-6d90vn6"
			},
			"Children": [
				{
					"ID": "20220812164041-854k5a4",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220812164041-854k5a4"
					},
					"Children": [
						{
							"ID": "20220812164041-jx7a9tk",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220812164041-jx7a9tk"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "a",
									"TextMarkAHref": "https://www.cnblogs.com/Crazy-Liu/p/15151581.html",
									"TextMarkTextContent": "https://www.cnblogs.com/Crazy-Liu/p/15151581.html"
								}
							]
						}
					]
				},
				{
					"ID": "20220812164041-hyu4eub",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220812164041-hyu4eub"
					},
					"Children": [
						{
							"ID": "20220812164041-suxzvjr",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220812164041-suxzvjr"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "官方镜像仓库 https://hub.docker.com/ docker官方仓库 https://www.docker.com/get-started 第一章 docker介绍 1.什么是容器 容器"
								}
							]
						}
					]
				},
				{
					"ID": "20220812164041-quv7pig",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220812164041-quv7pig"
					},
					"Children": [
						{
							"ID": "20220812164041-5yiupuo",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220812164041-5yiupuo"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "2022-08-12 16:40:41"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220812164041-0348194",
			"Type": "NodeThematicBreak",
			"Properties": {
				"id": "20220812164041-0348194"
			}
		},
		{
			"ID": "20220812164041-iybm27v",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220812164041-iybm27v"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "官方镜像仓库"
				}
			]
		},
		{
			"ID": "20220812164041-3idqfbk",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220812164041-3idqfbk"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "docker官方仓库"
				}
			]
		},
		{
			"ID": "20220812164041-szawe5i",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220812164041-szawe5i"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "https://www.docker.com/get-started\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220812164041-w8ea2lx",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220812164041-w8ea2lx"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "容器是隔离的环境中运行的一个进程,如果进程结束,容器就会停止,容器的隔离环境,拥有自己的ip地址,系统文件,主机名,进程管理\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220812164041-u7ajq21",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220812164041-u7ajq21"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "1.文字描述"
				}
			]
		},
		{
			"ID": "20220812164041-2xh4seo",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220812164041-2xh4seo"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "虚拟机: \n    硬件cpu支持(vt虚拟化),模拟计算硬件,走正常的开机启动\n    bios开机自检--根据bios启动项--读取硬盘第一个扇区grub,uefi,  centos7, 加载内核,启动系统第一个进程/sbin/init  systemd\n容器: \n    不需要硬件cpu的支持,共用宿主机内核,启动容器的第一个进程\n    容器优势: \n    启动快,性能高,损耗少,轻量级\n    100虚拟机  100个服务     10宿主机\n    100容器     100个服务      6宿主机\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220812164041-6dxdfd5",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220812164041-6dxdfd5"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "2.图形描述"
				}
			]
		},
		{
			"ID": "20220812164041-apa0b6l",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220812164041-apa0b6l"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "1.镜像"
				}
			]
		},
		{
			"ID": "20220812164041-2isdrfc",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220812164041-2isdrfc"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "那么镜像到底是什么呢？Docker 镜像可以看作是一个特殊的文件系统，除了提供容器运行时所需的程 序、库、资源、配置等文件外，还包含了一些为运行时准备的一些配置参数（如匿名卷、环境变量、用户 等）。\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220812164041-9djov9x",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220812164041-9djov9x"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "2.容器"
				}
			]
		},
		{
			"ID": "20220812164041-nkzgq33",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220812164041-nkzgq33"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "容器(Container)的定义和镜像(Image)几乎一模一样，也是一堆层的统一视角，唯一区别在于容器的 最上面那一层是可读可写的。\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220812164041-lfh37gy",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220812164041-lfh37gy"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "3.仓库"
				}
			]
		},
		{
			"ID": "20220812164041-7dccaw6",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220812164041-7dccaw6"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "镜像仓库是 Docker 用来集中存放镜像文件的地方，类似于我们之前常用的代码仓库。 通常，一个仓库会包含同一个软件不同版本的镜像，而标签就常用于对应该软件的各个版本 。 我们可以通过\u003c仓库名\u003e:\u003c标签\u003e的格式来指定具体是这个软件哪个版本的镜像。如果不给出标签，将以 Latest 作为默认标签。\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220812164041-se9idga",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220812164041-se9idga"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "Docker是传统的CS架构分为docker client和docker server \nDocker客户端是 Docker 用户与 Docker 交互的主要方式。 \n当您使用 Docker 命令行运行命令时，Docker 客户端将这些命令发送给服务器端，服务端将执行这些 命令。 Docker 命令使用 Docker API 。 \nDocker 客户端可以与多个服务端进行通信。\n​\ndocker是一个cs架构, docker主要:镜像  容器   仓库  网络  存储   监控\ndocker是一个软件的打包技术\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220812164041-wt49wuy",
			"Type": "NodeTable",
			"TableAligns": [
				0,
				0,
				0
			],
			"Properties": {
				"id": "20220812164041-wt49wuy"
			},
			"Children": [
				{
					"Type": "NodeTableHead",
					"Data": "thead",
					"Children": [
						{
							"Type": "NodeTableRow",
							"Data": "tr",
							"Children": [
								{
									"Type": "NodeTableCell",
									"Data": "th",
									"Children": [
										{
											"Type": "NodeTextMark",
											"TextMarkType": "strong",
											"TextMarkTextContent": "主机名"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"Data": "th",
									"Children": [
										{
											"Type": "NodeTextMark",
											"TextMarkType": "strong",
											"TextMarkTextContent": "ip"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"Data": "th",
									"Children": [
										{
											"Type": "NodeTextMark",
											"TextMarkType": "strong",
											"TextMarkTextContent": "内存"
										}
									]
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "docker01"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "10.0.0.21"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "2G"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "docker02"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "10.0.0.22"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "2G"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220812164041-n59x2lo",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220812164041-n59x2lo"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "1.安装docker清华源"
				}
			]
		},
		{
			"ID": "20220812164041-lhukgnf",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220812164041-lhukgnf"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "wget -O /etc/yum.repos.d/docker-ce.repo https://download.docker.com/linux/centos/docker-ce.repo\nsed -i 's+download.docker.com+mirrors.tuna.tsinghua.edu.cn/docker-ce+' /etc/yum.repos.d/docker-ce.repo\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220812164041-k48bc0a",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220812164041-k48bc0a"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "2.安装docker"
				}
			]
		},
		{
			"ID": "20220812164041-ztluheu",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220812164041-ztluheu"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "3.启动docker"
				}
			]
		},
		{
			"ID": "20220812164041-zpnpeao",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220812164041-zpnpeao"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "4.查看版本"
				}
			]
		},
		{
			"ID": "20220812164041-2u0r6ka",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220812164041-2u0r6ka"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "1.普通搜索"
				}
			]
		},
		{
			"ID": "20220812164041-pi3nlfv",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220812164041-pi3nlfv"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "docker search  mirror-name  \n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220812164041-9flyhl6",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220812164041-9flyhl6"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "2.使用curl获取镜像版本号"
				}
			]
		},
		{
			"ID": "20220812164041-gfb9sgu",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220812164041-gfb9sgu"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "yum -y install jq\ncurl -s https://registry.hub.docker.com/v1/repositories/镜像名称/tags|jq | grep name\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220812164041-vjs9v38",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220812164041-vjs9v38"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": " docker  image pull   mirror-name     \n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220812164041-xl398r4",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220812164041-xl398r4"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "1.导出一个镜像打包\n两种方式\ndocker image save  mirror-name:版本号 -o  名字.tar.gz\ndocker image save  mirror-name:版本号  \u003e  名字.tar.gz\n​\n2.导出多个镜像打成一个包\ndocker image save 镜像名:版本号  镜像名:版本号  镜像名:版本号 -o 名字.tar.gz\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220812164041-0pa5waf",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220812164041-0pa5waf"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "docker image  ls\ndocker images\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220812164041-kz406gv",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220812164041-kz406gv"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "docker rmi 镜像:版本号\ndocker rmi 镜像ID\n​\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220812164041-q9w2lc2",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220812164041-q9w2lc2"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "docker image tag 镜像id  镜像名字:版本号           \n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220812164041-2rdzrhn",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220812164041-2rdzrhn"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "docker  run 创建并启动容器\n例子:docker run  -d -it -p 80:80  nginx:latest\n     run 创建并启动一个容器\n     -d  放后台启动\n     -p  端口映射\n     nginx:latest docker镜像名称\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220812164041-krw9269",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220812164041-krw9269"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "docker create   --name 自定义名字  镜像名:版本号\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220812164041-24i9waw",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220812164041-24i9waw"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "docker start 容器ID\n#批量启动容器\ndocker start $(docker ps -a)\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220812164041-qddqh1c",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220812164041-qddqh1c"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "docker  ps\n参数：\n    -a      查看所有容器\n    -l      查看未启动的容器(好像不是，待修改)\n    -q      查看容器ID\n    不加    查看正在运行的容器\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220812164041-097n8oo",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220812164041-097n8oo"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "1.进入正在运行的容器(分配一个新终端)"
				}
			]
		},
		{
			"ID": "20220812164041-cexrx1e",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220812164041-cexrx1e"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "docker  exec\n例子: docker exec  -it  容器id/容器名字   /bin/bash(/bin/sh)\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220812164041-a734jby",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220812164041-a734jby"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "2.进入正在运行的容器(使用相同的终端)"
				}
			]
		},
		{
			"ID": "20220812164041-bxgqjzc",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220812164041-bxgqjzc"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "docker attach 容器ID\nctrl +p,ctrl +q           \n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220812164041-2esxtia",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220812164041-2esxtia"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "docker run --name 名字  镜像名:版本号\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220812164041-cs71lbg",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220812164041-cs71lbg"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "docker run  \n    -p  宿主机ip1::容器端口          \n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220812164041-lywdyp2",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220812164041-lywdyp2"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "docker run\n    -p  1111-1119:1111-1119   \n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220812164041-7xs3cn9",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220812164041-7xs3cn9"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "docker run\n    -v  宿主机绝对目录:容器目录\n\n    -v  容器目录                  \n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220812164041-s0nv68m",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220812164041-s0nv68m"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "1.启动并进入容器"
				}
			]
		},
		{
			"ID": "20220812164041-n8pkuj1",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220812164041-n8pkuj1"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "2.安装nginx"
				}
			]
		},
		{
			"ID": "20220812164041-0mftlgj",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220812164041-0mftlgj"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "1.安装nginx源\nvi /etc/yum.repos.d/nginx.repo\n[nginx-stable]\nname=nginx stable repo\nbaseurl=http://nginx.org/packages/centos/$releasever/$basearch/\ngpgcheck=0\nenabled=1\ngpgkey=https://nginx.org/keys/nginx_signing.key\nmodule_hotfixes=true\n​\n2.安装nginx\nyum makecache fast\nyum -y install nginx\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220812164041-tnynrvn",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220812164041-tnynrvn"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "3.优化镜像"
				}
			]
		},
		{
			"ID": "20220812164041-tnn0w6x",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220812164041-tnn0w6x"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "4.退出容器"
				}
			]
		},
		{
			"ID": "20220812164041-hnvj3v5",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220812164041-hnvj3v5"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "5.制作镜像"
				}
			]
		},
		{
			"ID": "20220812164041-d0p9c6h",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220812164041-d0p9c6h"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "docker commit  nginx_mk nginx_cts:v1     \n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220812164041-qu88osu",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220812164041-qu88osu"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "6.查看"
				}
			]
		},
		{
			"ID": "20220812164041-c1drihe",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220812164041-c1drihe"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "docker images | grep nginx_cts\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220812164041-tg90h8s",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220812164041-tg90h8s"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "7.启动制作的镜像并运行"
				}
			]
		},
		{
			"ID": "20220812164041-uxko5ms",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220812164041-uxko5ms"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "docker run -it -d -p 80:80 nginx_cts:v1 nginx -g \"daemon off;\"\n在浏览器测试：\n10.0.0.21\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220812164041-9jswnvr",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220812164041-9jswnvr"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "8.将镜像导出"
				}
			]
		},
		{
			"ID": "20220812164041-n39q7pk",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220812164041-n39q7pk"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "docker save nginx_cts:v1 -o nginx_v1.tar\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220812164041-bpel5kj",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220812164041-bpel5kj"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "需求:\n1.访问宿主机的8080端口,跳转到小鸟游戏\n2.访问宿主机的8090端口,跳转到神经猫\n3.每个游戏单独的一个nginx配置文件\n4.nginx记录的日志分开\n5.小鸟的日志名为xiaoniao.access\n6.神经猫的日志名为sjm.access \n7.使用目录映射和配置文件把代码和配置文件映射到容器里\n8.容器内日志持久化到宿主机的目录/opt/nginx/\n9.nginx日志格式为json格式\n10.不允许进入到容器里(允许调试进入)\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220812164041-dpjw89m",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220812164041-dpjw89m"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "1.创建代码目录、配置文件目录"
				}
			]
		},
		{
			"ID": "20220812164041-kbqgl2p",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220812164041-kbqgl2p"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "mkdir -p /data/{conf..code}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220812164041-nqck9d5",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220812164041-nqck9d5"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "2.配置游戏访问界面"
				}
			]
		},
		{
			"ID": "20220812164041-jlumkss",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220812164041-jlumkss"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "vim /data/conf/sjm.conf\nserver {\n    listen       8090;\n    server_name  localhost;\n    access_log  /var/log/nginx/sjm.log  json;\n​\n    location / {\n        root   /usr/share/nginx/html/sjm;\n        index  index.html index.htm;\n    }\n}\n​\nvim /data/conf/xiaoniao.conf\nserver {\n    listen       8080;\n    server_name  localhost;\n    access_log  /var/log/nginx/xiaoniao.log  json;\n​\n    location / {\n        root   /usr/share/nginx/html/xiaoniao;\n        index  index.html index.htm;\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220812164041-vq6wz5n",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220812164041-vq6wz5n"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "3.配置nginx.conf日志格式为 json"
				}
			]
		},
		{
			"ID": "20220812164041-qjdo9in",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220812164041-qjdo9in"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "vim /data/conf/nginx.conf\nuser  nginx;\nworker_processes  1;\n​\nerror_log  /var/log/nginx/error.log warn;\npid        /var/run/nginx.pid;\n​\nevents {\n    worker_connections  1024;\n}\n​\nhttp {\n    include       /etc/nginx/mime.types;\n    default_type  application/octet-stream;\n​\n    log_format  main  '$remote_addr - $remote_user [$time_local] \"$request\" '\n                      '$status $body_bytes_sent \"$http_referer\" '\n                      '\"$http_user_agent\" \"$http_x_forwarded_for\"';\n​\nlog_format json '{ \"time_local\": \"$time_local\", '\n                          '\"remote_addr\": \"$remote_addr\", '\n                          '\"referer\": \"$http_referer\", '\n                          '\"request\": \"$request\", '\n                          '\"status\": $status, '\n                          '\"bytes\": $body_bytes_sent, '\n                          '\"agent\": \"$http_user_agent\", '\n                          '\"x_forwarded\": \"$http_x_forwarded_for\", '\n                          '\"up_addr\": \"$upstream_addr\",'\n                          '\"up_host\": \"$upstream_http_host\",'\n                          '\"upstream_time\": \"$upstream_response_time\",'\n                          '\"request_time\": \"$request_time\"'\n    ' }';\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220812164041-81bb3ns",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220812164041-81bb3ns"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "4.拉取代码"
				}
			]
		},
		{
			"ID": "20220812164041-clymsfh",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220812164041-clymsfh"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "上传代码\ncd /data/code\nrz sjm.zip  xiaoniaofeifei.zip\n​\n解压代码\nunzip sjm.zip\nunzip xiaoniaofeifei.zip -d xiaoniao\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220812164041-fyf5atc",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220812164041-fyf5atc"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "5.自动启动容器"
				}
			]
		},
		{
			"ID": "20220812164041-zpzxwhc",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220812164041-zpzxwhc"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "docker run \\\n-p 8080:8080 \\\n-p 8090:8090  \\\n-v /data/conf/sjm.conf:/etc/nginx/conf.d/sjm.conf \\\n-v /data/conf/xiaoniao.conf:/etc/nginx/conf.d/xiaoniao.conf \\\n-v /data/conf/nginx.conf:/etc/nginx/nginx.conf \\\n-v /data/code/sjm:/usr/share/nginx/html/sjm \\\n-v /data/code/xiaoniao:/usr/share/nginx/html/xiaoniao \\\n-v /opt/nginx/:/var/log/nginx/ \\\n-d nginx:latest \n​\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220812164041-xgdbek0",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220812164041-xgdbek0"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "6.启动代码测试"
				}
			]
		},
		{
			"ID": "20220812164041-pmwhm2p",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220812164041-pmwhm2p"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "浏览器：\nhttp://10.0.0.21:8080\nhttp://10.0.0.21:8090\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220812164041-3e8yrec",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220812164041-3e8yrec"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "1.创建容器"
				}
			]
		},
		{
			"ID": "20220812164041-wr07c1j",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220812164041-wr07c1j"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "docker run -it -d -p 80:80 --name kod_cts centos:7  \n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220812164041-2bsl1th",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220812164041-2bsl1th"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "2.进入容器"
				}
			]
		},
		{
			"ID": "20220812164041-9tkskg4",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220812164041-9tkskg4"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "docker exec -it kod_cts /bin/bash\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220812164041-zobc6zx",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220812164041-zobc6zx"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "3.创建www用户"
				}
			]
		},
		{
			"ID": "20220812164041-n9j7ckq",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220812164041-n9j7ckq"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "容器：\ngroupadd -g 1000 www\n    useradd -u1000 -g1000 -M -s /sbin/nologin www\n宿主机：\ngroupadd -g 1000 www\nuseradd -u1000 -g1000 -M -s /sbin/nologin          \n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220812164041-86bye5q",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220812164041-86bye5q"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "4.创建代码目录"
				}
			]
		},
		{
			"ID": "20220812164041-vhyv3h8",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220812164041-vhyv3h8"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "5.安装nginx"
				}
			]
		},
		{
			"ID": "20220812164041-3ikw1z6",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20220812164041-3ikw1z6"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "1.配置Nginx源"
				}
			]
		},
		{
			"ID": "20220812164041-srsl0hm",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220812164041-srsl0hm"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": " vi /etc/yum.repos.d/nginx.repo\n[nginx-stable]\nname=nginx stable repo\nbaseurl=http://nginx.org/packages/centos/$releasever/$basearch/\ngpgcheck=0\nenabled=1\ngpgkey=https://nginx.org/keys/nginx_signing.key\nmodule_hotfixes=true\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220812164041-63i2gik",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20220812164041-63i2gik"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "2.下载Nginx"
				}
			]
		},
		{
			"ID": "20220812164041-m9gdfm2",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20220812164041-m9gdfm2"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "3.配置Nginx配置文件"
				}
			]
		},
		{
			"ID": "20220812164041-9uoszz7",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220812164041-9uoszz7"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "vi /etc/nginx/conf.d/cloud.conf\nserver { \n    listen 80; \n    server_name localhost; \n    root /code; \n    index index.php index.html; \n    location ~ \\.php$ { \n        root /code;\n        fastcgi_pass 127.0.0.1:9000; \n        fastcgi_index index.php; \n        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name; \n        include fastcgi_params; \n    } \n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220812164041-c8ix0ua",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20220812164041-c8ix0ua"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "4.修改nginx.conf"
				}
			]
		},
		{
			"ID": "20220812164041-7w2f8g4",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220812164041-7w2f8g4"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "6.安装PHP"
				}
			]
		},
		{
			"ID": "20220812164041-0sh7yp7",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20220812164041-0sh7yp7"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "1.安装php-fpm"
				}
			]
		},
		{
			"ID": "20220812164041-r3y71to",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220812164041-r3y71to"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "yum -y install php-fpm\nphp-fpm -v\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220812164041-ht9peil",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20220812164041-ht9peil"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "2.修改php-fpm配置文件"
				}
			]
		},
		{
			"ID": "20220812164041-6oa4i1f",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220812164041-6oa4i1f"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "sed -i '/^user/c user = www' /etc/php-fpm.d/www.conf \nsed -i '/^group/c group = www' /etc/php-fpm.d/www.conf\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220812164041-nyx87em",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220812164041-nyx87em"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "7.下载代码到宿主机/code"
				}
			]
		},
		{
			"ID": "20220812164041-860mq22",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220812164041-860mq22"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "cd /code\nrz  D:\\kodexplorer4.40.zip\nunzip kodexplorer4.40.zip -d kod\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220812164041-fxi98g3",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220812164041-fxi98g3"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "8.将kod软件cp到容器"
				}
			]
		},
		{
			"ID": "20220812164041-9jtv5b6",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220812164041-9jtv5b6"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "docker cp /code/kod kod_cts:/code\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220812164041-zdczsm6",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220812164041-zdczsm6"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "9.添加GD库"
				}
			]
		},
		{
			"ID": "20220812164041-qtp5e3v",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220812164041-qtp5e3v"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "yum install php-mbstring php-gd -y\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220812164041-aeram1n",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220812164041-aeram1n"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "10.授权/code"
				}
			]
		},
		{
			"ID": "20220812164041-ytjphky",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220812164041-ytjphky"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "11.编写启动脚本并授权"
				}
			]
		},
		{
			"ID": "20220812164041-tf1sz1b",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220812164041-tf1sz1b"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "1.写启动脚本\nvi /code/init.sh\n#!/bin/bash\nnginx\nphp-fpm\n​\n2.添加执行权限\nchmod +x /code/init.sh\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220812164041-jfnlois",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220812164041-jfnlois"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "12.提交镜像"
				}
			]
		},
		{
			"ID": "20220812164041-xlx0drg",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220812164041-xlx0drg"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": " docker commit kod_cts kod:v1\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220812164041-o8qvu3x",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220812164041-o8qvu3x"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "13.启动测试"
				}
			]
		},
		{
			"ID": "20220812164041-jzkin36",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220812164041-jzkin36"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": " docker stop $(docker ps -qa)\n docker run -d -p 80:80 kod:v1\n docker ps\n\n 浏览器\n http://10.0.0.21\n 跳出来界面即可\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220812164041-sltq518",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220812164041-sltq518"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "14.导出镜像"
				}
			]
		},
		{
			"ID": "20220812164041-7puykac",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220812164041-7puykac"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "docker save kod:v1 -o kod_v1.tar.gz\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220812164041-mkl7w9t",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220812164041-mkl7w9t"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "Docker通过对于在Dockerfile中的一系列指令的顺序解析实现自动的image的构建\n    通过使用build命令，根据Dockerfiel的描述来构建镜像 \n    通过源代码路径的方式 \n    通过标准输入流的方式\n    \n 指令： \n    只支持Docker自己定义的一套指令，不支持自定义 \n    大小写不敏感，但是建议全部使用大写 \n    根据Dockerfile的内容顺序执行\n    \nFROM：\n    FROM {base镜像} \n    必须放在DOckerfile的第一行，表示从哪个baseimage开始构建 \n\nMAINTAINER： \n    可选的，用来标识image作者的地方 \n​\nRUN：\n    每一个RUN指令都会是在一个新的container里面运行，并提交为一个image作为下一个RUN的 \nbase\n    一个Dockerfile中可以包含多个RUN，按定义顺序执行 \n    RUN支持两种运行方式： \n        RUN \u003ccmd\u003e 这个会当作/bin/sh -c “cmd” 运行 RUN [“executable”，“arg1”，。。]，Docker把他当作json的顺序来解析，因此必须使用双引号，而且executable需要是完整路径 \n        RUN 都是启动一个容器、执行命令、然后提交存储层文件变更。第一层 RUN command1 的执行仅 \n        仅是当前进程，一个内存上的变化而已，其结果不会造成任何文件。而到第二层的时候，启动的是一个全 \n        新的容器，跟第一层的容器更完全没关系，自然不可能继承前一层构建过程中的内存变化。而如果需要将两条命令或者多条命令联合起来执行需要加上\u0026\u0026。\n        如：cd /usr/local/src \u0026\u0026 wget xxxxxxx\n        \nCMD：\n    CMD的作用是作为执行container时候的默认行为（容器默认的启动命令） \n    当运行container的时候声明了command，则不再用image中的CMD默认所定义的命令 \n    一个Dockerfile中只能有一个有效的CMD，当定义多个CMD的时候，只有最后一个才会起作用 \n\n    CMD定义的三种方式： \n        CMD \u003ccmd\u003e 这个会当作/bin/sh -c \"cmd\"来执行 \n        CMD [\"executable\",\"arg1\",....] \n        CMD [\"arg1\",\"arg2\"]，这个时候CMD作为ENTRYPOINT的参数 \n  \nEXPOSE 声明端口 \n    格式为 EXPOSE \u003c端口1\u003e [\u003c端口2\u003e...]。\n    EXPOSE 指令是声明运行时容器提供服务端口，这只是一个声明，在运行时并不会因为这个声明，应用就会开启这个端口的服务。在 Dockerfile 中写入这样的声明有两个好处，一个是帮助镜像使用者 理解这个镜像服务的守护端口，以方便配置映射；另一个用处则是在运行时使用随机端口映射时，也就是 docker run -P 时，会自动随机映射 EXPOSE 的端口。 \n    \nENTRYPOINT：\n    entrypoint的作用是，把整个container变成了一个可执行的文件，这样不能够通过替换CMD的方法来改变创建container的方式。但是可以通过参数传递的方法影响到container内部 \n    每个Dockerfile只能够包含一个entrypoint，多个entrypoint只有最后一个有效 当定义了entrypoint以后，CMD只能够作为参数进行传递 \n    \n    entrypoint定义方式：\n    entrypoint [\"executable\",\"arg1\",\"arg2\"]\n    这种定义方式下，CMD可以通过json的方式来定义entrypoint的参数，可以通过在运行container的时候通过指定command的方式传递参数 \n    entrypoint \u003ccmd\u003e，当作/bin/bash -c \"cmd\"运行命令 \n    ADD \u0026 COPY： 当在源代码构建的方式下，可以通过ADD和COPY的方式，把host上的文件或者目录复制到image中 ADD和COPY的源必须在context路径下 \n    当src为网络URL的情况下，ADD指令可以把它下载到dest的指定位置，这个在任何build的方式下，都可以work \n    ADD相对COPY还有一个多的功能，能够进行自动解压压缩包 \n    \nENV：\n    ENV key value 用来设置环境变量，后续的RUN可以使用它所创建的环境变量 \n    当创建基于该镜像的container的时候，会自动拥有设置的环境变量 \n\nWORKDIR： \n    用来指定当前工作目录（或者称为当前目录） \n    当使用相对目录的情况下，采用上一个WORKDIR指定的目录作为基准\n    \nUSER：\n    指定UID或者username，来决定运行RUN指令的用户 \n\nONBUILD： \n    ONBUILD作为一个trigger（触发）的标记，可以用来trigger（触发）任何Dockerfile中的指令 \n    可以定义多个ONBUILD指令 \n    当下一个镜像B使用镜像A作为base的时候，在FROM A指令前，会先按照顺序执行在构建A时候定义 的ONBUILD指令     ONBUILD \u003cDOCKERFILE 指令\u003e \u003ccontent\u003e \n\nVOLUME： \n    用来创建一个在image之外的mount point，用来在多个container之间实现数据共享 \n    运行使用json array的方式定义多个volume \n    VOLUME [\"/var/data1\",\"/var/data2\"] \n    或者plain text的情况下定义多个VOLUME指令\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220812164041-emnh5kk",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220812164041-emnh5kk"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "1.kod需要的配置文件及代码"
				}
			]
		},
		{
			"ID": "20220812164041-zglb1r6",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220812164041-zglb1r6"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "tree /data/ -L 2\n/data\n├── code\n│   └── nginx-1.18.0-1.el7.ngx.x86_64.rpm\n├── conf\n│   ├── cloud.conf\n│   ├── nginx.conf\n│   └── www.conf\n├── Dockerfile\n├── init.sh\n├── kod\n│   ├── kod.tar.gz\n└── kodexplorer4.40.zip\n​\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220812164041-wivhvpj",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220812164041-wivhvpj"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "2.启动kod容器dockerfile文件"
				}
			]
		},
		{
			"ID": "20220812164041-g6j2n8l",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220812164041-g6j2n8l"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "3.构建容器"
				}
			]
		},
		{
			"ID": "20220812164041-htcel6w",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220812164041-htcel6w"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "cd /code\ndocker build -t kod:v1 .\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220812164041-3pwycw8",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220812164041-3pwycw8"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "Compose 是用于定义和运行多容器 Docker 应用程序的工具。\n通过Compose，您可以使用YML文件来配置应用程序需要的所有服务。\n写好yaml文件之后，只需要运行一条命令，就会按照资源清单里的配置运行相应的容器服务。\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220812164041-vp4rm8m",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220812164041-vp4rm8m"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "Compose 使用的三个步骤"
				}
			]
		},
		{
			"ID": "20220812164041-ly83hm9",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220812164041-ly83hm9"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "1.使用 Dockerfile 定义应用程序的环境。\n2.使用 docker-compose.yml 定义构成应用程序的服务，这样它们可以在隔离环境中一起运行。\n3.最后，执行 docker-compose up 命令来启动并运行整个应用程序。\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220812164041-h3ayr1m",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220812164041-h3ayr1m"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "1.方法1:直接yum安装"
				}
			]
		},
		{
			"ID": "20220812164041-lpk0rnh",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220812164041-lpk0rnh"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "yum install docker-compose\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220812164041-1lpgpv6",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220812164041-1lpgpv6"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "2.方法2:使用官方脚本安装"
				}
			]
		},
		{
			"ID": "20220812164041-wdkv98y",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220812164041-wdkv98y"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "curl -L \"https://github.com/docker/compose/releases/download/1.24.1/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220812164041-d8wi2f5",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220812164041-d8wi2f5"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "1.语法"
				}
			]
		},
		{
			"ID": "20220812164041-f0jospk",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220812164041-f0jospk"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "version: '2.2'\nservices:\n  服务名称:\n    image: 容器镜像\n    container_name: 容器名称\n    environment:\n      - 环境变量1=值1\n      - 环境变量2=值2\n    volumes:\n      - 存储驱动1:容器内的数据目录路径\n      - 宿主机目录路径:容器内的数据目录路径\n    ports:\n      - 宿主机端口:映射到容器内的端口\n    networks:\n      - 自定义网络的名称\n  服务名称:\n    image: 容器镜像\n    container_name: 容器名称\n    environment:\n      - 环境变量1=值1\n      - 环境变量2=值2\n    volumes:\n      - 存储驱动2:对应容器内的数据目录路径\n    ports:\n      - 宿主机端口:映射到容器内的端口\n    networks:\n      - 自定义网络的名称\n​\n  volumes:\n    存储驱动1:\n    driver: local\n    存储驱动2:\n    driver: local\n​\nnetworks:\n  自定义网络名称:\n    driver: bridge\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220812164041-ptzq9ti",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220812164041-ptzq9ti"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "2.参数解释"
				}
			]
		},
		{
			"ID": "20220812164041-9opqfuw",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220812164041-9opqfuw"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "1.为什么要做link\ncentos7-1   ping 172.17.0.2     ping centos7-2\ncentos7-2   ping 172.17.0.3     ping centos7-1\n​\nzabbix-mysql      \n- mysql\n​\nzabbix-server     \n--link mysql \n配置数据库IP地址:\nDBHOSt: mysql\n​\nzabbix-web \nDBHOSt: mysql\n​\n​\n2.用户参数\nuser: 2000:2000\n          2000:999\n         mysql:mysql\n-v /data/mysql:/var/lib/mysql \n​\n3.参数哪里找/环境变量哪里找\n官网找:https://hub.docker.com/_/mysql\n--character-set-server=utf8\n--collation-server=utf8_bin\n​\n4.服务启动顺序控制\ndepends_on:\n  - mysql \n​\n1 mysql\n​\n2 zabbix-server\n  depends_on:\n    - mysql\n\n3 zabbix-web\n  depends_on:\n    - zabbix-server\n​\n5.版本号\n​\n4.参数的含义不理解\nenvironment:\n  MYSQL_DATABASE: zabbix        #启动mysql容器的时候创建的新数据库名称\n  MYSQL_USER: zabbix            #启动mysql容器的时候创建的新数据库的管理用户\n  MYSQL_PASSWORD: zabbix        #启动mysql容器的时候创建的新数据库的管理用户的密码\n  MYSQL_ROOT_PASSWORD: zabbix   #启动mysql容器的时候root账户的密码\nvolumes:\n  - /data/mysql:/var/lib/mysql  #把容器里的数据目录挂载到宿主机的目录\n  \n5.参数作用\nservices:\n  mysql:  \n\n1.可以自定义\n2.docker-compose里links连接时候用的\n3.docker-compose想单独停止或启动某个服务时候用的名字\n​\n6.参数的意义\nuser: 2000:2000\n​\n如果不添加这个参数的结果:\n1.容器内mysql用户是999\n2.挂载之后,宿主机目录显示的也是999\n3.要求你宿主机的mysql和容器内的mysql用户的UID和GID保持完全一致\n​\n但是假如我宿主机的UID和GID为999的已经被占用了怎么?\n那么就添加user: 2000:2000参数,可以达到什么效果呢?\n1.宿主机显示的是2000用户,容器内依然是999用户\n2.但是两边可以互相写入\n3.前提是你宿主机提前创建好目录并且更改好授权为2000用户\n​\n7.环境变量意义\nenvironment:\n  MYSQL_DATABASE: zabbix    #作用是,启动mysql容器的时候自动创建一个数据库\n  MYSQL_USER: zabbix        #作用是,给刚才创建的新的数据库授权用户\n  MYSQL_PASSWORD: zabbix    #作用是,给刚才创建的普通用户赋予一个密码\n  MYSQL_ROOT_PASSWORD: zabbix #作用是,给root账户创建一个密码叫zabbix\n​\n前三个参数的作用:\n启动容器的时候\n1.自动创建一个用户名字叫zabbix\n2.给zabbix用户创建个密码\n3.创建数据库叫zabbix\n4.赋权zabbix用户对zabbix数据库拥有所有的权限\n​\n8.links作用\nlinks:    \n  - mysql\n​\n为什么要用links???\n如果不用的话,两个容器互相通讯必须通过IP地址\n那么为配置文件就不能提前配了\n​\n​\n如果用了Links呢?\n两个容器互相通讯,只需要知道对方的容器名称即可,不需要知道IP地址\n​\n​\n9.mysql变量从哪里获取的?\ndocker-hub是什么?\ndocker-hub是docker官方的镜像仓库地址,全球都可以访问,朝鲜除外\n大家都会把官方镜像放在docker-hub上\n​\n来源地址:\nhttps://hub.docker.com/_/mysql\n​\n​\n10.依靠什么名字来通讯\n​\n依靠的是容器之间的名字\n不是docker-compose里的service名称\n​\n如果使用的是docker-compose启动的,并且配置文件里加了网卡的bridge,可以通过service名称\n如果只是用run启动,则必须是容器的name名称\n​\nlinks:    \n  - mysql\n​\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220812164041-xtasmfb",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220812164041-xtasmfb"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "1.docker-run命令"
				}
			]
		},
		{
			"ID": "20220812164041-wp5o30p",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220812164041-wp5o30p"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "docker run --name mysql-server -t \\\n      -e MYSQL_DATABASE=\"zabbix\" \\\n      -e MYSQL_USER=\"zabbix\" \\\n      -e MYSQL_PASSWORD=\"zabbix\" \\\n      -e MYSQL_ROOT_PASSWORD=\"zabbix\" \\\n      -d mysql:5.7 \\\n      --character-set-server=utf8 --collation-server=utf8_bin\n      \ndocker run --name zabbix-server-mysql -t \\\n      -e DB_SERVER_HOST=\"mysql-server\" \\\n      -e MYSQL_DATABASE=\"zabbix\" \\\n      -e MYSQL_USER=\"zabbix\" \\\n      -e MYSQL_PASSWORD=\"zabbix\" \\\n      -e MYSQL_ROOT_PASSWORD=\"zabbix\" \\\n      --link mysql-server:mysql \\\n      -p 10051:10051 \\\n      -d zabbix/zabbix-server-mysql:latest\n​\ndocker run --name zabbix-web-nginx-mysql -t \\\n      -e DB_SERVER_HOST=\"mysql-server\" \\\n      -e MYSQL_DATABASE=\"zabbix\" \\\n      -e MYSQL_USER=\"zabbix\" \\\n      -e MYSQL_PASSWORD=\"zabbix\" \\\n      -e MYSQL_ROOT_PASSWORD=\"zabbix\" \\\n      --link mysql-server:mysql \\\n      --link zabbix-server-mysql:zabbix-server \\\n      -p 80:8080 \\\n      -d zabbix/zabbix-web-nginx-mysql:latest\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220812164041-lagtmz8",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220812164041-lagtmz8"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "2.docker-compose"
				}
			]
		},
		{
			"ID": "20220812164041-oalz2pl",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220812164041-oalz2pl"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "version: '2.2'\nservices:\n  mysql:\n    image: mysql:5.7\n    container_name: mysql-server\n    user: 2000:2000\n    environment:\n      MYSQL_DATABASE: zabbix\n      MYSQL_USER: zabbix\n      MYSQL_PASSWORD: zabbix\n      MYSQL_ROOT_PASSWORD: zabbix\n    volumes:\n      - /data/mysql:/var/lib/mysql\n    command:\n      --character-set-server=utf8 \n      --collation-server=utf8_bin      \n          \n  zabbix-server-mysql:\n    image: zabbix/zabbix-server-mysql:latest\n    container_name: zabbix-server-mysql\n    environment:\n      DB_SERVER_HOST: mysql-server\n      MYSQL_DATABASE: zabbix\n      MYSQL_USER: zabbix\n      MYSQL_PASSWORD: zabbix\n      MYSQL_ROOT_PASSWORD: zabbix\n    ports:\n      - 10051:10051\n    links:\n      - mysql\n    depends_on:\n      - mysql \n  \n  zabbix-server-web:\n    image: zabbix/zabbix-web-nginx-mysql:latest\n    container_name: zabbix-web-nginx-mysql\n    environment:\n      DB_SERVER_HOST: mysql-server\n      MYSQL_DATABASE: zabbix\n      MYSQL_USER: zabbix\n      MYSQL_PASSWORD: zabbix\n      MYSQL_ROOT_PASSWORD: zabbix\n    ports:\n      - 80:8080\n    links:\n      - mysql\n      - zabbix-server-mysql \n    depends_on:\n      - zabbix-server-mysql \n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220812164041-1e7oqvb",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220812164041-1e7oqvb"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "docker-compose"
				}
			]
		},
		{
			"ID": "20220812164041-nqyfgb6",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220812164041-nqyfgb6"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "version: '2.2'\nservices:\n  gitlab:\n    image: 'gitlab/gitlab-ce:latest'\n    restart: always\n    hostname: '10.0.0.11'\n    environment:\n      GITLAB_OMNIBUS_CONFIG: |\n        external_url 'http://10.0.0.11'\n    ports:\n      - '8000:80'\n      - '443:443'\n      - '2222:22'\n    volumes:\n      - '/data/gitlab/config:/etc/gitlab'\n      - '/data/gitlab/logs:/var/log/gitlab'\n      - '/data/gitlab/data:/var/opt/gitlab'\n   \n  jenkins:\n    image: 'jenkins/jenkins:lts'\n    restart: always\n    hostname: '10.0.0.11'\n    user: root\n    ports:\n      - '8080:8080'\n      - '50000:50000'\n    volumes:\n      - /data/jenkins/:/var/jenkins_home\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220812164041-ocucy4x",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220812164041-ocucy4x"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "1.四种模式"
				}
			]
		},
		{
			"ID": "20220812164041-0699e5q",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220812164041-0699e5q"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "Host        容器将不会虚拟出自己的网卡，配置自己的IP等，而是使用宿主机的IP和端口。\nBridge       此模式会为每一个容器分配、设置IP等，并将容器连接到一个docker0虚拟网桥，通过docker0网桥以及Iptables nat表配置与宿主机通信。\nNone        此模式关闭了容器的网络功能。\nContainer   创建的容器不会创建自己的网卡，配置自己的IP，而是和一个指定的容器共享IP、端口范围。\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220812164041-vp5iyzp",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220812164041-vp5iyzp"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "2.查看网络模式命令"
				}
			]
		},
		{
			"ID": "20220812164041-d71mne9",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220812164041-d71mne9"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "    docker network ls\nNETWORK ID          NAME                DRIVER              SCOPE\n3791e4fc9c18        bridge              bridge              local\nb494337929ef        host                host                local\na153ac0003e3        none                null                local\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220812164041-3kqaxpl",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220812164041-3kqaxpl"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "3.查看网卡命令"
				}
			]
		},
		{
			"ID": "20220812164041-eocpjty",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220812164041-eocpjty"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "4.查看桥接网卡命令"
				}
			]
		},
		{
			"ID": "20220812164041-wdhbono",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220812164041-wdhbono"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "yum install bridge-utils -y\nbrctl show\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220812164041-zr8bflh",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220812164041-zr8bflh"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "1.当Docker Daemon第一次启动时会创建一个虚拟的网桥，默认名称是Docker0\n2.创建完后会给这个网桥分配一个子网,默认是172.17.0.1/16\n3.由Docker创建的每一个容器,都会创建一个Veth设备对,其中一端关联到网桥上,另一端放在容器里映射为eth0,然后从网桥的地址段内给容器内的eth0分配一个IP地址,这样容器之间就可以互通了。\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220812164041-czmlk8s",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220812164041-czmlk8s"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "流程图:"
				}
			]
		},
		{
			"ID": "20220812164041-epuebl1",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220812164041-epuebl1"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/14248468-29dcda09453122c1-20220812164041-fmys4i5.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20220812164041-zu6hbzs",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220812164041-zu6hbzs"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "自带:\nmacvlan\n​\n第三方:\nflannel\nConsul\ncalico\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220812164041-bzrzx9o",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220812164041-bzrzx9o"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "1.创建网络"
				}
			]
		},
		{
			"ID": "20220812164041-s6ejy3j",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220812164041-s6ejy3j"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "docker network \ncreate -d macvlan \\\n--subnet 10.0.0.0/24 \\\n--gateway 10.0.0.2 \\\n-o parent=eth0 macvlan_1\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220812164041-yp7xln9",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220812164041-yp7xln9"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "2.启动容器"
				}
			]
		},
		{
			"ID": "20220812164041-jgo240i",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220812164041-jgo240i"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "1.docker01启动容器\ndocker run -it --network macvlan_1 --ip 10.0.0.100 alpine\n​\n2.docker02启动容器\ndocker run -it --network macvlan_1 --ip 10.0.0.200 alpine\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220812164041-6c80h3l",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220812164041-6c80h3l"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "3.启动后进入容器测试IP通讯"
				}
			]
		},
		{
			"ID": "20220812164041-2hj2nap",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220812164041-2hj2nap"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "docker01容器  ping 10.0.0.100\ndocker02容器  ping 10.0.0.200\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220812164041-yxzse3f",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220812164041-yxzse3f"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "1. Consul介绍"
				}
			]
		},
		{
			"ID": "20220812164041-82zquio",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220812164041-82zquio"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "Consul是一个服务网格（微服务间的 TCP/IP，负责服务之间的网络调用、限流、熔断和监控）解决方案，它是一个分布式的，高度可用的系统，而且开发使用都很简便。\n它提供了一个功能齐全的控制平面，主要特点是：服务发现、健康检查、键值存储、安全服务通信、多数据中心。\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220812164041-so7ab30",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220812164041-so7ab30"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "2. 二进制安装步骤"
				}
			]
		},
		{
			"ID": "20220812164041-jhjmjyd",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220812164041-jhjmjyd"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "wget https://releases.hashicorp.com/consul/1.4.4/consul_1.4.4_linux_amd64.zip \nunzip consul_1.4.4_linux_amd64.zip \nmv consul /usr/bin/\nchmod +x /usr/bin/consul\nnohup consul agent -server -bootstrap -ui -data-dir /var/lib/consul -client=10.0.0.11 -bind=10.0.0.11 \u0026\u003e/var/log/consul.log \u0026\ntail -f /var/log/consul.log\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220812164041-1m3w38t",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220812164041-1m3w38t"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "3.修改docker01启动文件"
				}
			]
		},
		{
			"ID": "20220812164041-fr195ch",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220812164041-fr195ch"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "[root@docker01 ~]# vim /lib/systemd/system/docker.service\n#ExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock\nExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2375 -H unix:///var/run/docker.sock --cluster-store consul://10.0.0.11:8500 --cluster-advertise 10.0.0.11:2375\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220812164041-yj3fg6d",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220812164041-yj3fg6d"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "4.重启docker01"
				}
			]
		},
		{
			"ID": "20220812164041-30hwf51",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220812164041-30hwf51"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "systemctl daemon-reload     \nsystemctl restart docker.service\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220812164041-5g8kf6b",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220812164041-5g8kf6b"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "5.同样方法修改docker02的配置"
				}
			]
		},
		{
			"ID": "20220812164041-qk10ucx",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220812164041-qk10ucx"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "[root@docker02 ~]# vim /lib/systemd/system/docker.service\n#ExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock\nExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2375 -H unix:///var/run/docker.sock --cluster-store consul://10.0.0.11:8500 --cluster-advertise 10.0.0.12:2375\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220812164041-rpc3rjt",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220812164041-rpc3rjt"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "6.重启docker2"
				}
			]
		},
		{
			"ID": "20220812164041-zu5l03q",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220812164041-zu5l03q"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "systemctl daemon-reload     \nsystemctl restart docker.service\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220812164041-0wpbypq",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220812164041-0wpbypq"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "7.在docker主机上创建overlay网络"
				}
			]
		},
		{
			"ID": "20220812164041-eoh9br2",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220812164041-eoh9br2"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "在docker1上创建网络，然后会自动同步到docker2上\ndocker network create -d overlay overlay_net\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220812164041-g6ixi1k",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220812164041-g6ixi1k"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "8.分别在两个节点上创建容器"
				}
			]
		},
		{
			"ID": "20220812164041-r0gp2ug",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20220812164041-r0gp2ug"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "1.docker01运行命令"
				}
			]
		},
		{
			"ID": "20220812164041-8r1yg45",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220812164041-8r1yg45"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "docker run -it --net=overlay_net --name busybox01 busybox:latest\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220812164041-e71dqdp",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20220812164041-e71dqdp"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "2.docker02运行命令"
				}
			]
		},
		{
			"ID": "20220812164041-bojkjdk",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220812164041-bojkjdk"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "docker run -it --net=overlay_net --name busybox02 busybox:latest\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220812164041-5ypazbt",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220812164041-5ypazbt"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "9.测试联通性"
				}
			]
		},
		{
			"ID": "20220812164041-pzhc44k",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220812164041-pzhc44k"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "docker run -it --net=overlay_net --name busybox01 busybox:latest\n#ping 10.0.0.3\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220812164041-ec64cao",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220812164041-ec64cao"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "1.flannel介绍"
				}
			]
		},
		{
			"ID": "20220812164041-mnkzahr",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220812164041-mnkzahr"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "Flannel是一种基于overlay网络的跨主机容器网络解决方案，即将TCP数据包封装在另一种网络包里面进行路由转发和通信，Flannel是CoreOS开发,专门用于docker多机互联的一个工具,让集群中的不同节点主机创建的容器都具有全集群唯一的虚拟ip地址\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220812164041-9ffy5i6",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220812164041-9ffy5i6"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "2. flannel通信原理"
				}
			]
		},
		{
			"ID": "20220812164041-19au7fq",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220812164041-19au7fq"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "流程图解"
				}
			]
		},
		{
			"ID": "20220812164041-rqqslg8",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220812164041-rqqslg8"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "文字说明"
				}
			]
		},
		{
			"ID": "20220812164041-b7gae37",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220812164041-b7gae37"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "3.实验环境"
				}
			]
		},
		{
			"ID": "20220812164041-m9bbukh",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220812164041-m9bbukh"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "10.0.0.11  etcd,flannel,docker\n10.0.0.12  flannel,docker\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220812164041-3rlr2li",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220812164041-3rlr2li"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "4. 安装配置etcd"
				}
			]
		},
		{
			"ID": "20220812164041-34fvuth",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20220812164041-34fvuth"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "1.安装etd:"
				}
			]
		},
		{
			"ID": "20220812164041-ruquv47",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20220812164041-ruquv47"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "2.编辑配置文件"
				}
			]
		},
		{
			"ID": "20220812164041-vji6wy5",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220812164041-vji6wy5"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "cat \u003e /etc/etcd/etcd.conf \u003c\u003c 'EOF'\n# [member]\nETCD_NAME=default\nETCD_DATA_DIR=\"/var/lib/etcd/default.etcd\"\nETCD_LISTEN_CLIENT_URLS=\"http://10.0.0.11:2379,http://127.0.0.1:2379\"\n​\n# #[cluster]\nETCD_INITIAL_CLUSTER_STATE=\"new\"\nETCD_INITIAL_CLUSTER_TOKEN=\"etcd-cluster\"\nETCD_ADVERTISE_CLIENT_URLS=\"http://10.0.0.11:2379\"\nEOF\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220812164041-2s413x5",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20220812164041-2s413x5"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "3.启动etcd"
				}
			]
		},
		{
			"ID": "20220812164041-2cnrqvb",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220812164041-2cnrqvb"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "systemctl start etcd\nsystemctl enable etcd\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220812164041-0lcq7j8",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20220812164041-0lcq7j8"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "4.测试etcd功能"
				}
			]
		},
		{
			"ID": "20220812164041-hr2yisd",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220812164041-hr2yisd"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "etcdctl -C http://10.0.0.11:2379 cluster-health\netcdctl -C http://10.0.0.11:2379 set /testdir/testkey \"Hello world\"   \netcdctl -C http://10.0.0.11:2379 get /testdir/testkey\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220812164041-lmmvgh2",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20220812164041-lmmvgh2"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "5.防火墙"
				}
			]
		},
		{
			"ID": "20220812164041-27st3j5",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220812164041-27st3j5"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "iptables -A INPUT -p tcp -m tcp --dport 2379 -m state --state NEW,ESTABLISHED -j ACCEPT\niptables -A INPUT -p tcp -m tcp --dport 2380 -m state --state NEW,ESTABLISHED -j ACCEPT\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220812164041-jxbuhfo",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220812164041-jxbuhfo"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "5.安装配置Flannel-两台机器都操作"
				}
			]
		},
		{
			"ID": "20220812164041-nt6ijnk",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20220812164041-nt6ijnk"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "1.安装Flannel"
				}
			]
		},
		{
			"ID": "20220812164041-fkpyvs9",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20220812164041-fkpyvs9"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "2.配置Flannel"
				}
			]
		},
		{
			"ID": "20220812164041-mgmy97r",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220812164041-mgmy97r"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "cp /etc/sysconfig/flanneld /opt/flanneld.bak\ncat \u003e /etc/sysconfig/flanneld \u003c\u003c 'EOF'\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220812164041-n7mjpcr",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20220812164041-n7mjpcr"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "3.配置etcd数据库"
				}
			]
		},
		{
			"ID": "20220812164041-ionq6hz",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220812164041-ionq6hz"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "etcdctl mk /atomic.io/network/config '{ \"Network\": \"192.168.10.0/16\" }'\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220812164041-6zfjib9",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20220812164041-6zfjib9"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "4.启动flannel"
				}
			]
		},
		{
			"ID": "20220812164041-xze7fkt",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220812164041-xze7fkt"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "systemctl start flanneld.service\nsystemctl enable flanneld.service\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220812164041-n4rcyis",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20220812164041-n4rcyis"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "5.检查端口"
				}
			]
		},
		{
			"ID": "20220812164041-htvkyq4",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20220812164041-htvkyq4"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "6. 配置Docker关联Flannel网络"
				}
			]
		},
		{
			"ID": "20220812164041-3swbk23",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20220812164041-3swbk23"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "7. 创建容器测试"
				}
			]
		},
		{
			"ID": "20220812164041-jqjl4l1",
			"Type": "NodeHeading",
			"HeadingLevel": 5,
			"Properties": {
				"id": "20220812164041-jqjl4l1"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "1.docker01创建容器"
				}
			]
		},
		{
			"ID": "20220812164041-l2rhqam",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220812164041-l2rhqam"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "docker run -it busybox /bin/sh\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220812164041-qp299wp",
			"Type": "NodeHeading",
			"HeadingLevel": 5,
			"Properties": {
				"id": "20220812164041-qp299wp"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "2.查看IP地址"
				}
			]
		},
		{
			"ID": "20220812164041-w9slelx",
			"Type": "NodeHeading",
			"HeadingLevel": 5,
			"Properties": {
				"id": "20220812164041-w9slelx"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "3.Docker02创建容器"
				}
			]
		},
		{
			"ID": "20220812164041-ja1jwnf",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220812164041-ja1jwnf"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "docker run -it busybox /bin/sh\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220812164041-lxtofml",
			"Type": "NodeHeading",
			"HeadingLevel": 5,
			"Properties": {
				"id": "20220812164041-lxtofml"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "4.查看IP地址"
				}
			]
		},
		{
			"ID": "20220812164041-mk8rwbz",
			"Type": "NodeHeading",
			"HeadingLevel": 5,
			"Properties": {
				"id": "20220812164041-mk8rwbz"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "5.测试容器间可否通讯"
				}
			]
		},
		{
			"ID": "20220812164041-ewj5254",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220812164041-ewj5254"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "ping 192.168.72.2\nping 192.168.58.3\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220812164041-lv0e65w",
			"Type": "NodeHeading",
			"HeadingLevel": 5,
			"Properties": {
				"id": "20220812164041-lv0e65w"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "6.docker地址没变处理方法"
				}
			]
		},
		{
			"ID": "20220812164041-1k4vbdx",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220812164041-1k4vbdx"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "修改docker配置文件"
				}
			]
		},
		{
			"ID": "20220812164041-f1gasoj",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220812164041-f1gasoj"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "vim /usr/lib/systemd/system/docker.service\n.................\nEnvironmentFile=/run/flannel/docker\nExecStart=/usr/bin/dockerd -H fd:// $DOCKER_NETWORK_OPTIONS\n.................\nsystemctl daemon-reload \nsystemctl restart docker\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220812164041-00fqowu",
			"Type": "NodeHeading",
			"HeadingLevel": 5,
			"Properties": {
				"id": "20220812164041-00fqowu"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "7. 修改防火墙"
				}
			]
		},
		{
			"ID": "20220812164041-cijfkxq",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220812164041-cijfkxq"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "iptables -P INPUT ACCEPT\niptables -P FORWARD ACCEPT\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		}
	]
}