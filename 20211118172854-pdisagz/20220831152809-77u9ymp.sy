{
	"ID": "20220831152809-77u9ymp",
	"Spec": "1",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20220831152809-77u9ymp",
		"scroll": "{\u0026quot;startId\u0026quot;:\u0026quot;20220831152809-b12t73w\u0026quot;,\u0026quot;endId\u0026quot;:\u0026quot;20220831152809-b0rj4wu\u0026quot;,\u0026quot;scrollTop\u0026quot;:0,\u0026quot;focusId\u0026quot;:\u0026quot;20220831152809-b12t73w\u0026quot;,\u0026quot;focusStart\u0026quot;:0,\u0026quot;focusEnd\u0026quot;:0}",
		"title": "tcpdump详解  ",
		"updated": "20230307024824"
	},
	"Children": [
		{
			"ID": "20220831152809-b12t73w",
			"Type": "NodeThematicBreak",
			"Properties": {
				"id": "20220831152809-b12t73w"
			}
		},
		{
			"ID": "20220831152809-070e23m",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20220831152809-070e23m"
			},
			"Children": [
				{
					"ID": "20220831152809-afct7ky",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220831152809-afct7ky"
					},
					"Children": [
						{
							"ID": "20220831152809-pufqq0q",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220831152809-pufqq0q"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "a",
									"TextMarkAHref": "https://www.cnblogs.com/111testing/p/13620931.html",
									"TextMarkTextContent": "https://www.cnblogs.com/111testing/p/13620931.html"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220831152809-zvehr54",
			"Type": "NodeThematicBreak",
			"Properties": {
				"id": "20220831152809-zvehr54"
			}
		},
		{
			"ID": "20220831152809-sortoir",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20220831152809-sortoir"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "tcpdump详解"
				}
			]
		},
		{
			"ID": "20220831152809-wpmch9b",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-wpmch9b"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "原文地址："
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "a",
					"TextMarkAHref": "https://www.cnblogs.com/wongbingming/archive/2020/06/30/13212306.html",
					"TextMarkTextContent": "https://www.cnblogs.com/wongbingming/archive/2020/06/30/13212306.html"
				}
			]
		},
		{
			"ID": "20220831152809-xi5s27l",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-xi5s27l"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "今天要给大家介绍的一个 Unix 下的一个  "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "网络数据采集分析工具"
				},
				{
					"Type": "NodeText",
					"Data": " ，也就是我们常说的抓包工具。"
				}
			]
		},
		{
			"ID": "20220831152809-vhd4vts",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-vhd4vts"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "与它功能类似的工具有 wireshark ，不同的是，wireshark 有图形化界面，而 tcpdump 则只有命令行。"
				}
			]
		},
		{
			"ID": "20220831152809-pe9ztpg",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-pe9ztpg"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "可以用wireshark 读取tcpdump 生成的pcap文件，用wireshark的图形化界面分析tcpdump 结果数据。"
				}
			]
		},
		{
			"ID": "20220831152809-amj4mrr",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-amj4mrr"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/1034798-20200906100243124-1517088021-20220831152809-3i7znxh.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20220831152809-d0gledd",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-d0gledd"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在讲解之前，有两点需要声明："
				}
			]
		},
		{
			"ID": "20220831152809-bax6h5a",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20220831152809-bax6h5a"
			},
			"Children": [
				{
					"ID": "20220831152809-ix55974",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20220831152809-ix55974"
					},
					"Children": [
						{
							"ID": "20220831152809-fj9p7h6",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220831152809-fj9p7h6"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "第三节到第六节里的 tcpdump 命令示例，只为了说明参数的使用，并不一定就能抓到包，如果要精准抓到你所需要的包，需要配合第五节的逻辑逻辑运算符进行组合搭配。"
								}
							]
						}
					]
				},
				{
					"ID": "20220831152809-gkv43dl",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20220831152809-gkv43dl"
					},
					"Children": [
						{
							"ID": "20220831152809-ri3u34t",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220831152809-ri3u34t"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "不同 Linux 发行版下、不同版本的 tcpdump 可能有小许差异， 本文是基于 CentOS 7.2 的 4.5.1 版本的tcpdump 进行学习的，若在你的环境中无法使用，请参考 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "man tcpdump"
								},
								{
									"Type": "NodeText",
									"Data": " 进行针对性学习。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220831152809-md90gld",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20220831152809-md90gld"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "1. tcpdump 核心参数图解[](https://www.cnblogs.com/wongbingming/archive/2020/06/30/13212306.html#idx_0)"
				}
			]
		},
		{
			"ID": "20220831152809-snc7e9e",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-snc7e9e"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "大家都知道，网络上的流量、数据包，非常的多，因此要想抓到我们所需要的数据包，就需要我们定义一个精准的过滤器，把这些目标数据包，从巨大的数据包网络中抓取出来。"
				}
			]
		},
		{
			"ID": "20220831152809-dqtjycr",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-dqtjycr"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "所以学习抓包工具，其实就是学习如何定义过滤器的过程。"
				}
			]
		},
		{
			"ID": "20220831152809-afmt03x",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-afmt03x"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "而在 tcpdump 的世界里，过滤器的实现，都是通过一个又一个的参数组合起来，一个参数不够精准，那就再加一个，直到我们能过滤掉无用的数据包，只留下我们感兴趣的数据包。"
				}
			]
		},
		{
			"ID": "20220831152809-w8kr33i",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-w8kr33i"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "tcpdump 的参数非常的多，初学者在没有掌握 tcpdump 时，会对这个命令的众多参数产生很多的疑惑。"
				}
			]
		},
		{
			"ID": "20220831152809-0o6vd4r",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-0o6vd4r"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "就比如下面这个命令，我们要通过 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "host"
				},
				{
					"Type": "NodeText",
					"Data": " 参数指定 host ip 进行过滤"
				}
			]
		},
		{
			"ID": "20220831152809-j4p7o4j",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220831152809-j4p7o4j"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "$ tcpdump host 192.168.10.100\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220831152809-0613g5t",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-0613g5t"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "主程序"
				},
				{
					"Type": "NodeText",
					"Data": " + "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "参数名"
				},
				{
					"Type": "NodeText",
					"Data": "+ "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "参数值"
				},
				{
					"Type": "NodeText",
					"Data": " 这样的组合才是我们正常认知里面命令行该有的样子。"
				}
			]
		},
		{
			"ID": "20220831152809-pyxdo4i",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-pyxdo4i"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "可 tcpdump 却不走寻常路，我们居然还可以在 host 前再加一个限定词，来缩小过滤的范围？"
				}
			]
		},
		{
			"ID": "20220831152809-pxlwap2",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220831152809-pxlwap2"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "$ tcpdump src host 192.168.10.100\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220831152809-owbqt4g",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-owbqt4g"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "从字面上理解，确实很容易理解，但是这不符合编写命令行程序的正常逻辑，导致我们会有所疑虑："
				}
			]
		},
		{
			"ID": "20220831152809-9063yk9",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20220831152809-9063yk9"
			},
			"Children": [
				{
					"ID": "20220831152809-zq9rbjn",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20220831152809-zq9rbjn"
					},
					"Children": [
						{
							"ID": "20220831152809-hlamnxj",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220831152809-hlamnxj"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "除了 src ，dst，可还有其它可以用的限定词？"
								}
							]
						}
					]
				},
				{
					"ID": "20220831152809-s48xexo",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20220831152809-s48xexo"
					},
					"Children": [
						{
							"ID": "20220831152809-4e0hmpr",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220831152809-4e0hmpr"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "src，host 应该如何理解它们，叫参数名？不合适，因为 src 明显不合适。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220831152809-34o6bu2",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-34o6bu2"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "如果你在网上看到有关 tcpdump 的博客、教程，无一不是给你一个参数组合，告诉你这是实现了怎样的一个过滤器？这样的教学方式，很容易让你依赖别人的文章来使用 tcpdump，而不能将 tcpdump 这样神器消化，达到灵活应用，灵活搭配过滤器的效果。"
				}
			]
		},
		{
			"ID": "20220831152809-xk4ptzj",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-xk4ptzj"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "上面加了 src 本身就颠覆了我们的认知，你可知道在 src 之前还可以加更多的条件，比如 tcp, udp, icmp 等词，在你之前的基础上再过滤一层。"
				}
			]
		},
		{
			"ID": "20220831152809-wrwxc07",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220831152809-wrwxc07"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "$ tcpdump tcp src host 192.168.10.100\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220831152809-pcym1jd",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-pcym1jd"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "这种参数的不确定性，让大多数人对 tcpdump 的学习始终无法得其精髓。"
				}
			]
		},
		{
			"ID": "20220831152809-fh9bx6l",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-fh9bx6l"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "因此，在学习 tcpdump 之前，我觉得有必要要先让你知道："
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "tcpdump 的参数是如何组成的？这非常重要。"
				}
			]
		},
		{
			"ID": "20220831152809-z8p80p0",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-z8p80p0"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "为此，我画了一张图，方便你直观的理解 tcpdump 的各种参数："
				}
			]
		},
		{
			"ID": "20220831152809-ydu5qex",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-ydu5qex"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/1034798-20200906100644660-1290405570-20220831152809-3ipoth1.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20220831152809-n1fz4ps",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20220831152809-n1fz4ps"
			},
			"Children": [
				{
					"ID": "20220831152809-jbzgv15",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20220831152809-jbzgv15"
					},
					"Children": [
						{
							"ID": "20220831152809-fb7jl2m",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220831152809-fb7jl2m"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "option 可选参数：将在后边一一解释。"
								}
							]
						}
					]
				},
				{
					"ID": "20220831152809-jtoheug",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20220831152809-jtoheug"
					},
					"Children": [
						{
							"ID": "20220831152809-lv01gv4",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220831152809-lv01gv4"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "proto 类过滤器：根据协议进行过滤，可识别的关键词有： tcp, udp, icmp, ip, ip6, arp, rarp,ether,wlan, fddi, tr, decnet"
								}
							]
						}
					]
				},
				{
					"ID": "20220831152809-ml02ocl",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "My4=",
						"Num": 3
					},
					"Properties": {
						"id": "20220831152809-ml02ocl"
					},
					"Children": [
						{
							"ID": "20220831152809-b4ms6sa",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220831152809-b4ms6sa"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "type 类过滤器：可识别的关键词有：host, net, port, portrange，这些词后边需要再接参数。"
								}
							]
						}
					]
				},
				{
					"ID": "20220831152809-xiyzuny",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "NC4=",
						"Num": 4
					},
					"Properties": {
						"id": "20220831152809-xiyzuny"
					},
					"Children": [
						{
							"ID": "20220831152809-q57mylc",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220831152809-q57mylc"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "direction 类过滤器：根据数据流向进行过滤，可识别的关键字有：src, dst，同时你可以使用逻辑运算符进行组合，比如 src or dst"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220831152809-zg3zgxc",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-zg3zgxc"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "proto、type、direction 这三类过滤器的内容比较简单，也最常用，因此我将其放在最前面，也就是 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "第三节：常规过滤规则"
				},
				{
					"Type": "NodeText",
					"Data": "一起介绍。"
				}
			]
		},
		{
			"ID": "20220831152809-wnpe5bp",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-wnpe5bp"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "而 option 可选的参数非常多，有的甚至也不经常用到，因此我将其放到后面一点，也就是 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "第四节：可选参数解析"
				}
			]
		},
		{
			"ID": "20220831152809-t9lktwc",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-t9lktwc"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "当你看完前面六节，你对 tcpdump 的认识会上了一个台阶，至少能够满足你 80% 的使用需求。"
				}
			]
		},
		{
			"ID": "20220831152809-b3lkil1",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-b3lkil1"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "你一定会问了，还有 20% 呢？"
				}
			]
		},
		{
			"ID": "20220831152809-49bjz2p",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-49bjz2p"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "其实 tcpdump 还有一些过滤关键词，它不符合以上四种过滤规则，可能需要你单独记忆。关于这部分我会在 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "第六节：特殊过滤规则"
				},
				{
					"Type": "NodeText",
					"Data": " 里进行介绍。"
				}
			]
		},
		{
			"ID": "20220831152809-b0rj4wu",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20220831152809-b0rj4wu"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "2. 理解 tcpdump 的输出[](https://www.cnblogs.com/wongbingming/archive/2020/06/30/13212306.html#idx_1)"
				}
			]
		},
		{
			"ID": "20220831152809-ff9cr7h",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220831152809-ff9cr7h"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "2.1 输出内容结构[](https://www.cnblogs.com/wongbingming/archive/2020/06/30/13212306.html#idx_2)"
				}
			]
		},
		{
			"ID": "20220831152809-4p6s02h",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-4p6s02h"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "tcpdump 输出的内容虽然多，却很规律。"
				}
			]
		},
		{
			"ID": "20220831152809-ysv9mle",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-ysv9mle"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "这里以我随便抓取的一个 tcp 包为例来看一下"
				}
			]
		},
		{
			"ID": "20220831152809-rui520x",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220831152809-rui520x"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "21:26:49.013621 IP 172.20.20.1.15605 \u003e 172.20.20.2.5920: Flags [P.], seq 49:97, ack 106048, win 4723, length 48\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220831152809-mgz4iz0",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-mgz4iz0"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "从上面的输出来看，可以总结出："
				}
			]
		},
		{
			"ID": "20220831152809-l9xyrep",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20220831152809-l9xyrep"
			},
			"Children": [
				{
					"ID": "20220831152809-s7tzk9c",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20220831152809-s7tzk9c"
					},
					"Children": [
						{
							"ID": "20220831152809-zjqt4qr",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220831152809-zjqt4qr"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "第一列：时分秒毫秒 21:26:49.013621"
								}
							]
						}
					]
				},
				{
					"ID": "20220831152809-3xexmn9",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20220831152809-3xexmn9"
					},
					"Children": [
						{
							"ID": "20220831152809-e6jhoby",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220831152809-e6jhoby"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "第二列：网络协议 IP"
								}
							]
						}
					]
				},
				{
					"ID": "20220831152809-3wfg051",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "My4=",
						"Num": 3
					},
					"Properties": {
						"id": "20220831152809-3wfg051"
					},
					"Children": [
						{
							"ID": "20220831152809-iiagnkf",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220831152809-iiagnkf"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "第三列：发送方的ip地址+端口号，其中172.20.20.1是 ip，而15605 是端口号"
								}
							]
						}
					]
				},
				{
					"ID": "20220831152809-wsso1br",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "NC4=",
						"Num": 4
					},
					"Properties": {
						"id": "20220831152809-wsso1br"
					},
					"Children": [
						{
							"ID": "20220831152809-ft28ddo",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220831152809-ft28ddo"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "第四列：箭头 \u003e， 表示数据流向"
								}
							]
						}
					]
				},
				{
					"ID": "20220831152809-dda3tsp",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "NS4=",
						"Num": 5
					},
					"Properties": {
						"id": "20220831152809-dda3tsp"
					},
					"Children": [
						{
							"ID": "20220831152809-pk0xgd2",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220831152809-pk0xgd2"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "第五列：接收方的ip地址+端口号，其中 172.20.20.2 是 ip，而5920 是端口号"
								}
							]
						}
					]
				},
				{
					"ID": "20220831152809-bmrerj0",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Ni4=",
						"Num": 6
					},
					"Properties": {
						"id": "20220831152809-bmrerj0"
					},
					"Children": [
						{
							"ID": "20220831152809-sk0kb1j",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220831152809-sk0kb1j"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "第六列：冒号"
								}
							]
						}
					]
				},
				{
					"ID": "20220831152809-rzbeikf",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Ny4=",
						"Num": 7
					},
					"Properties": {
						"id": "20220831152809-rzbeikf"
					},
					"Children": [
						{
							"ID": "20220831152809-mm7g3nh",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220831152809-mm7g3nh"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "第七列：数据包内容，包括Flags 标识符，seq 号，ack 号，win 窗口，数据长度 length，其中 [P.] 表示 PUSH 标志位为 1，更多标识符见下面"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220831152809-x1a9l6l",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220831152809-x1a9l6l"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "2.2 Flags 标识符[](https://www.cnblogs.com/wongbingming/archive/2020/06/30/13212306.html#idx_3)"
				}
			]
		},
		{
			"ID": "20220831152809-o8zgpiw",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-o8zgpiw"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "使用 tcpdump 抓包后，会遇到的 TCP 报文 Flags，有以下几种："
				}
			]
		},
		{
			"ID": "20220831152809-rnzkoer",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20220831152809-rnzkoer"
			},
			"Children": [
				{
					"ID": "20220831152809-7bxi047",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220831152809-7bxi047"
					},
					"Children": [
						{
							"ID": "20220831152809-x6akarn",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220831152809-x6akarn"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "[S]"
								},
								{
									"Type": "NodeText",
									"Data": " : SYN（开始连接）"
								}
							]
						}
					]
				},
				{
					"ID": "20220831152809-vbee1g7",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220831152809-vbee1g7"
					},
					"Children": [
						{
							"ID": "20220831152809-6c0olqs",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220831152809-6c0olqs"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "[P]"
								},
								{
									"Type": "NodeText",
									"Data": " : PSH（推送数据）"
								}
							]
						}
					]
				},
				{
					"ID": "20220831152809-vuqwiox",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220831152809-vuqwiox"
					},
					"Children": [
						{
							"ID": "20220831152809-ugl8929",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220831152809-ugl8929"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "[F]"
								},
								{
									"Type": "NodeText",
									"Data": " : FIN （结束连接）"
								}
							]
						}
					]
				},
				{
					"ID": "20220831152809-00fd4c7",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220831152809-00fd4c7"
					},
					"Children": [
						{
							"ID": "20220831152809-lvf29ct",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220831152809-lvf29ct"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "[R]"
								},
								{
									"Type": "NodeText",
									"Data": " : RST（重置连接）"
								}
							]
						}
					]
				},
				{
					"ID": "20220831152809-k6vmufo",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220831152809-k6vmufo"
					},
					"Children": [
						{
							"ID": "20220831152809-nmwp9b2",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220831152809-nmwp9b2"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "[.]"
								},
								{
									"Type": "NodeText",
									"Data": " : 没有 Flag （意思是除上面四种类型外的其他情况，有可能是 ACK 也有可能是 URG）"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220831152809-8jef7nb",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20220831152809-8jef7nb"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "3. 常规过滤规则[](https://www.cnblogs.com/wongbingming/archive/2020/06/30/13212306.html#idx_4)"
				}
			]
		},
		{
			"ID": "20220831152809-k3edclb",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220831152809-k3edclb"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "3.1 基于IP地址过滤：host[](https://www.cnblogs.com/wongbingming/archive/2020/06/30/13212306.html#idx_5)"
				}
			]
		},
		{
			"ID": "20220831152809-ti4j0aj",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-ti4j0aj"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "使用 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "host"
				},
				{
					"Type": "NodeText",
					"Data": " 就可以指定 host ip 进行过滤"
				}
			]
		},
		{
			"ID": "20220831152809-rae2heq",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-rae2heq"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "$ tcpdump host 192.168.10.100"
				}
			]
		},
		{
			"ID": "20220831152809-gfljwbe",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-gfljwbe"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "数据包的 ip 可以再细分为源ip和目标ip两种"
				}
			]
		},
		{
			"ID": "20220831152809-80fax4f",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220831152809-80fax4f"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "# 根据源ip进行过滤\n$ tcpdump -i eth2 src 192.168.10.100\n\n# 根据目标ip进行过滤\n$ tcpdump -i eth2 dst 192.168.10.200\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220831152809-q77lj8d",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220831152809-q77lj8d"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "3.2 基于网段进行过滤：net[](https://www.cnblogs.com/wongbingming/archive/2020/06/30/13212306.html#idx_6)"
				}
			]
		},
		{
			"ID": "20220831152809-kdbh7z6",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-kdbh7z6"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "若你的ip范围是一个网段，可以直接这样指定"
				}
			]
		},
		{
			"ID": "20220831152809-81zd3ny",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220831152809-81zd3ny"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "$ tcpdump net 192.168.10.0/24\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220831152809-qn7oft7",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-qn7oft7"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "网段同样可以再细分为源网段和目标网段"
				}
			]
		},
		{
			"ID": "20220831152809-lccrdxg",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220831152809-lccrdxg"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "# 根据源网段进行过滤\n$ tcpdump src net 192.168\n\n# 根据目标网段进行过滤\n$ tcpdump dst net 192.168\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220831152809-1vqqm5y",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220831152809-1vqqm5y"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "3.3 基于端口进行过滤：port[](https://www.cnblogs.com/wongbingming/archive/2020/06/30/13212306.html#idx_7)"
				}
			]
		},
		{
			"ID": "20220831152809-mhnfqhw",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-mhnfqhw"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "使用 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "port"
				},
				{
					"Type": "NodeText",
					"Data": " 就可以指定特定端口进行过滤"
				}
			]
		},
		{
			"ID": "20220831152809-14mmaro",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220831152809-14mmaro"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "$ tcpdump port 8088\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220831152809-h7n56z7",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-h7n56z7"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "端口同样可以再细分为源端口，目标端口"
				}
			]
		},
		{
			"ID": "20220831152809-x0bmnff",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220831152809-x0bmnff"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "# 根据源端口进行过滤\n$ tcpdump src port 8088\n\n# 根据目标端口进行过滤\n$ tcpdump dst port 8088\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220831152809-07quadx",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-07quadx"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "如果你想要同时指定两个端口你可以这样写"
				}
			]
		},
		{
			"ID": "20220831152809-8zeuwx1",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220831152809-8zeuwx1"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "$ tcpdump port 80 or port 8088\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220831152809-nem6uee",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-nem6uee"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "但也可以简写成这样"
				}
			]
		},
		{
			"ID": "20220831152809-uaymtii",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220831152809-uaymtii"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "$ tcpdump port 80 or 8088\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220831152809-jocg3rv",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-jocg3rv"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "如果你的想抓取的不再是一两个端口，而是一个范围，一个一个指定就非常麻烦了，此时你可以这样指定一个端口段。"
				}
			]
		},
		{
			"ID": "20220831152809-w0gtdcd",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220831152809-w0gtdcd"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "$ tcpdump portrange 8000-8080\n$ tcpdump src portrange 8000-8080\n$ tcpdump dst portrange 8000-8080\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220831152809-ohlaqp1",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-ohlaqp1"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "对于一些常见协议的默认端口，我们还可以直接使用协议名，而不用具体的端口号"
				}
			]
		},
		{
			"ID": "20220831152809-phvt2x4",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-phvt2x4"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "比如 http == 80，https == 443 等"
				}
			]
		},
		{
			"ID": "20220831152809-hjlhls7",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220831152809-hjlhls7"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "$ tcpdump tcp port http\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220831152809-7p6w6y7",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220831152809-7p6w6y7"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "3.4 基于协议进行过滤：proto[](https://www.cnblogs.com/wongbingming/archive/2020/06/30/13212306.html#idx_8)"
				}
			]
		},
		{
			"ID": "20220831152809-ehiuylm",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-ehiuylm"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "常见的网络协议有：tcp, udp, icmp, http, ip,ipv6 等"
				}
			]
		},
		{
			"ID": "20220831152809-i4n7wt9",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-i4n7wt9"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "若你只想查看 icmp 的包，可以直接这样写"
				}
			]
		},
		{
			"ID": "20220831152809-pa0tmtu",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220831152809-pa0tmtu"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "$ tcpdump icmp\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220831152809-1us295a",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-1us295a"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "protocol 可选值：ip, ip6, arp, rarp, atalk, aarp, decnet, sca, lat, mopdl, moprc, iso, stp, ipx, or netbeui"
				}
			]
		},
		{
			"ID": "20220831152809-txcjm5h",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220831152809-txcjm5h"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "3.5 基本IP协议的版本进行过滤[](https://www.cnblogs.com/wongbingming/archive/2020/06/30/13212306.html#idx_9)"
				}
			]
		},
		{
			"ID": "20220831152809-0ey52sb",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-0ey52sb"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "当你想查看 tcp 的包，你也许会这样子写"
				}
			]
		},
		{
			"ID": "20220831152809-onxo2f5",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220831152809-onxo2f5"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "$ tcpdump tcp\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220831152809-kn9e7qb",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-kn9e7qb"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "这样子写也没问题，就是不够精准，为什么这么说呢？"
				}
			]
		},
		{
			"ID": "20220831152809-cwgcepg",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-cwgcepg"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "ip 根据版本的不同，可以再细分为 IPv4 和 IPv6 两种，如果你只指定了 tcp，这两种其实都会包含在内。"
				}
			]
		},
		{
			"ID": "20220831152809-8ak3q9p",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-8ak3q9p"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "那有什么办法，能够将 IPv4 和 IPv6 区分开来呢？"
				}
			]
		},
		{
			"ID": "20220831152809-epabrju",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-epabrju"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "很简单，如果是 IPv4 的 tcp 包 ，就这样写（友情提示：数字 6 表示的是 tcp 在ip报文中的编号。）"
				}
			]
		},
		{
			"ID": "20220831152809-ef6vxy7",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-ef6vxy7"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "复制代码"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/copycode-20220831152809-8mnqzku.gif"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20220831152809-yjqiyih",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220831152809-yjqiyih"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "$ tcpdump 'ip proto tcp'\n\n# or\n\n$ tcpdump ip proto 6\n\n# or\n\n$ tcpdump 'ip protochain tcp'\n\n# or \n\n$ tcpdump ip protochain 6\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220831152809-55iaoxm",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-55iaoxm"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "复制代码"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/copycode-20220831152809-8mnqzku.gif"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20220831152809-ggso2c7",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-ggso2c7"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "而如果是 IPv6 的 tcp 包 ，就这样写"
				}
			]
		},
		{
			"ID": "20220831152809-ksquj57",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-ksquj57"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "复制代码"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/copycode-20220831152809-8mnqzku.gif"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20220831152809-vtsxpat",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220831152809-vtsxpat"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "$ tcpdump 'ip6 proto tcp'\n\n# or\n\n$ tcpdump ip6 proto 6\n\n# or\n\n$ tcpdump 'ip6 protochain tcp'\n\n# or \n\n$ tcpdump ip6 protochain 6\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220831152809-rhmf5p0",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-rhmf5p0"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "复制代码"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/copycode-20220831152809-8mnqzku.gif"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20220831152809-phf5436",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-phf5436"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "关于上面这几个命令示例，有两点需要注意："
				}
			]
		},
		{
			"ID": "20220831152809-30vwzg5",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20220831152809-30vwzg5"
			},
			"Children": [
				{
					"ID": "20220831152809-o2u44yy",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20220831152809-o2u44yy"
					},
					"Children": [
						{
							"ID": "20220831152809-l5okw9r",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220831152809-l5okw9r"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "跟在 proto 和 protochain 后面的如果是 tcp, udp, icmp ，那么过滤器需要用引号包含，这是因为 tcp,udp, icmp 是 tcpdump 的关键字。"
								}
							]
						}
					]
				},
				{
					"ID": "20220831152809-h3jk2h2",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20220831152809-h3jk2h2"
					},
					"Children": [
						{
							"ID": "20220831152809-ypc8lxs",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220831152809-ypc8lxs"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "跟在ip 和 ip6 关键字后面的 proto 和 protochain 是两个新面孔，看起来用法类似，它们是否等价，又有什么区别呢？"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220831152809-kz9ooxx",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-kz9ooxx"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "关于第二点，网络上没有找到很具体的答案，我只能通过 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "man tcpdump"
				},
				{
					"Type": "NodeText",
					"Data": " 的提示， 给出自己的个人猜测，但不保证正确。"
				}
			]
		},
		{
			"ID": "20220831152809-g8wxmke",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-g8wxmke"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "proto 后面跟的 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "\u0026lt;protocol\u0026gt;"
				},
				{
					"Type": "NodeText",
					"Data": " 的关键词是固定的，只能是 ip, ip6, arp, rarp, atalk, aarp, decnet, sca, lat, mopdl, moprc, iso, stp, ipx, or netbeui 这里面的其中一个。"
				}
			]
		},
		{
			"ID": "20220831152809-4z8xk11",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-4z8xk11"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "而 protochain 后面跟的 protocol 要求就没有那么严格，它可以是任意词，只要 tcpdump 的 IP 报文头部里的 protocol 字段为 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "\u0026lt;protocol\u0026gt;"
				},
				{
					"Type": "NodeText",
					"Data": " 就能匹配上。"
				}
			]
		},
		{
			"ID": "20220831152809-qae4tnj",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-qae4tnj"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "理论上来讲，下面两种写法效果是一样的"
				}
			]
		},
		{
			"ID": "20220831152809-069j2xm",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220831152809-069j2xm"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "$ tcpdump 'ip \u0026\u0026 tcp'\n$ tcpdump 'ip proto tcp'\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220831152809-wmukxob",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-wmukxob"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "同样的，这两种写法也是一样的"
				}
			]
		},
		{
			"ID": "20220831152809-yc8qb96",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220831152809-yc8qb96"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "$ tcpdump 'ip6 \u0026\u0026 tcp'\n$ tcpdump 'ip6 proto tcp'\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220831152809-6wlptjy",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20220831152809-6wlptjy"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "4. 可选参数解析[](https://www.cnblogs.com/wongbingming/archive/2020/06/30/13212306.html#idx_10)"
				}
			]
		},
		{
			"ID": "20220831152809-5o6298m",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220831152809-5o6298m"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "4.1 设置不解析域名提升速度[](https://www.cnblogs.com/wongbingming/archive/2020/06/30/13212306.html#idx_11)"
				}
			]
		},
		{
			"ID": "20220831152809-e6t7ovp",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-e6t7ovp"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": " 　　-n：不把ip转化成域名，直接显示 ip，避免执行 DNS lookups 的过程，速度会快很多\n\t　　-nn：不把协议和端口号转化成名字，速度也会快很多。\n\t　　-N：不打印出host 的域名部分.。比如,，如果设置了此选现，tcpdump 将会打印'nic' 而不是 'nic.ddn.mil'."
				}
			]
		},
		{
			"ID": "20220831152809-msbktet",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220831152809-msbktet"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "4.2 过滤结果输出到文件[](https://www.cnblogs.com/wongbingming/archive/2020/06/30/13212306.html#idx_12)"
				}
			]
		},
		{
			"ID": "20220831152809-h1hrlh2",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-h1hrlh2"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "使用 tcpdump 工具抓到包后，往往需要再借助其他的工具进行分析，比如常见的 wireshark 。"
				}
			]
		},
		{
			"ID": "20220831152809-653xger",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-653xger"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "而要使用wireshark ，我们得将 tcpdump 抓到的包数据生成到文件中，最后再使用 wireshark 打开它即可。"
				}
			]
		},
		{
			"ID": "20220831152809-31gsmo0",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-31gsmo0"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "使用 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "-w"
				},
				{
					"Type": "NodeText",
					"Data": " 参数后接一个以 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": ".pcap"
				},
				{
					"Type": "NodeText",
					"Data": " 后缀命令的文件名，就可以将 tcpdump 抓到的数据保存到文件中。"
				}
			]
		},
		{
			"ID": "20220831152809-h7ewkfy",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-h7ewkfy"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "$ tcpdump  icmp  -w  icmp.pcap"
				}
			]
		},
		{
			"ID": "20220831152809-8tt8s3n",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220831152809-8tt8s3n"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "4.3 从文件中读取包数据[](https://www.cnblogs.com/wongbingming/archive/2020/06/30/13212306.html#idx_13)"
				}
			]
		},
		{
			"ID": "20220831152809-8zw4lgd",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-8zw4lgd"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "使用 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "-w"
				},
				{
					"Type": "NodeText",
					"Data": " 是写入数据到文件，而使用 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "-r"
				},
				{
					"Type": "NodeText",
					"Data": " 是从文件中读取数据。"
				}
			]
		},
		{
			"ID": "20220831152809-w7cgyr7",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-w7cgyr7"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "读取后，我们照样可以使用上述的过滤器语法进行过滤分析。"
				}
			]
		},
		{
			"ID": "20220831152809-h754jno",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220831152809-h754jno"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "$ tcpdump icmp -r all.pcap\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220831152809-197maid",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220831152809-197maid"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "4.4 控制详细内容的输出[](https://www.cnblogs.com/wongbingming/archive/2020/06/30/13212306.html#idx_14)"
				}
			]
		},
		{
			"ID": "20220831152809-nt4dd2a",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20220831152809-nt4dd2a"
			},
			"Children": [
				{
					"ID": "20220831152809-2jtmyul",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220831152809-2jtmyul"
					},
					"Children": [
						{
							"ID": "20220831152809-18kq9xo",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220831152809-18kq9xo"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "-v"
								},
								{
									"Type": "NodeText",
									"Data": "：产生详细的输出. 比如包的TTL，id标识，数据包长度，以及IP包的一些选项。同时它还会打开一些附加的包完整性检测，比如对IP或ICMP包头部的校验和。"
								}
							]
						}
					]
				},
				{
					"ID": "20220831152809-lwn5dur",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220831152809-lwn5dur"
					},
					"Children": [
						{
							"ID": "20220831152809-5o6v83a",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220831152809-5o6v83a"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "-vv"
								},
								{
									"Type": "NodeText",
									"Data": "：产生比-v更详细的输出. 比如NFS回应包中的附加域将会被打印, SMB数据包也会被完全解码。（摘自网络，目前我还未使用过）"
								}
							]
						}
					]
				},
				{
					"ID": "20220831152809-f1uk7bt",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220831152809-f1uk7bt"
					},
					"Children": [
						{
							"ID": "20220831152809-bcv8ilu",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220831152809-bcv8ilu"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "-vvv"
								},
								{
									"Type": "NodeText",
									"Data": "：产生比-vv更详细的输出。比如 telent 时所使用的SB, SE 选项将会被打印, 如果telnet同时使用的是图形界面，其相应的图形选项将会以16进制的方式打印出来（摘自网络，目前我还未使用过）"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220831152809-hnkbpb8",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220831152809-hnkbpb8"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "4.5 控制时间的显示[](https://www.cnblogs.com/wongbingming/archive/2020/06/30/13212306.html#idx_15)"
				}
			]
		},
		{
			"ID": "20220831152809-2jad2y5",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20220831152809-2jad2y5"
			},
			"Children": [
				{
					"ID": "20220831152809-v9is3eo",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220831152809-v9is3eo"
					},
					"Children": [
						{
							"ID": "20220831152809-pxeecf9",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220831152809-pxeecf9"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "-t"
								},
								{
									"Type": "NodeText",
									"Data": "：在每行的输出中不输出时间"
								}
							]
						}
					]
				},
				{
					"ID": "20220831152809-o4zhuh3",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220831152809-o4zhuh3"
					},
					"Children": [
						{
							"ID": "20220831152809-m3dv5yl",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220831152809-m3dv5yl"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "-tt"
								},
								{
									"Type": "NodeText",
									"Data": "：在每行的输出中会输出时间戳"
								}
							]
						}
					]
				},
				{
					"ID": "20220831152809-jcbk18t",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220831152809-jcbk18t"
					},
					"Children": [
						{
							"ID": "20220831152809-lisy6wh",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220831152809-lisy6wh"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "-ttt"
								},
								{
									"Type": "NodeText",
									"Data": "：输出每两行打印的时间间隔(以毫秒为单位)"
								}
							]
						}
					]
				},
				{
					"ID": "20220831152809-wzoqsmh",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220831152809-wzoqsmh"
					},
					"Children": [
						{
							"ID": "20220831152809-ou8q8vt",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220831152809-ou8q8vt"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "-tttt"
								},
								{
									"Type": "NodeText",
									"Data": "：在每行打印的时间戳之前添加日期的打印（此种选项，输出的时间最直观）"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220831152809-jbb4w0u",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220831152809-jbb4w0u"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "4.6 显示数据包的头部[](https://www.cnblogs.com/wongbingming/archive/2020/06/30/13212306.html#idx_16)"
				}
			]
		},
		{
			"ID": "20220831152809-hgkkuql",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20220831152809-hgkkuql"
			},
			"Children": [
				{
					"ID": "20220831152809-34vxou0",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220831152809-34vxou0"
					},
					"Children": [
						{
							"ID": "20220831152809-pfmi6m1",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220831152809-pfmi6m1"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "-x"
								},
								{
									"Type": "NodeText",
									"Data": "：以16进制的形式打印每个包的头部数据（但不包括数据链路层的头部）"
								}
							]
						}
					]
				},
				{
					"ID": "20220831152809-h0k9g9x",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220831152809-h0k9g9x"
					},
					"Children": [
						{
							"ID": "20220831152809-137inep",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220831152809-137inep"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "-xx"
								},
								{
									"Type": "NodeText",
									"Data": "：以16进制的形式打印每个包的头部数据（包括数据链路层的头部）"
								}
							]
						}
					]
				},
				{
					"ID": "20220831152809-37vy891",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220831152809-37vy891"
					},
					"Children": [
						{
							"ID": "20220831152809-rr2dimj",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220831152809-rr2dimj"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "-X"
								},
								{
									"Type": "NodeText",
									"Data": "：以16进制和 ASCII码形式打印出每个包的数据(但不包括连接层的头部)，这在分析一些新协议的数据包很方便。"
								}
							]
						}
					]
				},
				{
					"ID": "20220831152809-crsny19",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220831152809-crsny19"
					},
					"Children": [
						{
							"ID": "20220831152809-wbr124c",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220831152809-wbr124c"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "-XX"
								},
								{
									"Type": "NodeText",
									"Data": "：以16进制和 ASCII码形式打印出每个包的数据(包括连接层的头部)，这在分析一些新协议的数据包很方便。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220831152809-ufvpe8q",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220831152809-ufvpe8q"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "4.7 过滤指定网卡的数据包[](https://www.cnblogs.com/wongbingming/archive/2020/06/30/13212306.html#idx_17)"
				}
			]
		},
		{
			"ID": "20220831152809-6y4nfnj",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20220831152809-6y4nfnj"
			},
			"Children": [
				{
					"ID": "20220831152809-ehk3aky",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220831152809-ehk3aky"
					},
					"Children": [
						{
							"ID": "20220831152809-l4rqewh",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220831152809-l4rqewh"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "-i"
								},
								{
									"Type": "NodeText",
									"Data": "：指定要过滤的网卡接口，如果要查看所有网卡，可以 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "-i any"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220831152809-p562587",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220831152809-p562587"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "4.8 过滤特定流向的数据包[](https://www.cnblogs.com/wongbingming/archive/2020/06/30/13212306.html#idx_18)"
				}
			]
		},
		{
			"ID": "20220831152809-lrf9nj2",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20220831152809-lrf9nj2"
			},
			"Children": [
				{
					"ID": "20220831152809-8e3osi3",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220831152809-8e3osi3"
					},
					"Children": [
						{
							"ID": "20220831152809-eozx9jh",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220831152809-eozx9jh"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "-Q"
								},
								{
									"Type": "NodeText",
									"Data": "： 选择是入方向还是出方向的数据包，可选项有：in, out, inout，也可以使用 --direction=[direction] 这种写法"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220831152809-u3lpq94",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220831152809-u3lpq94"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "4.9 其他常用的一些参数[](https://www.cnblogs.com/wongbingming/archive/2020/06/30/13212306.html#idx_19)"
				}
			]
		},
		{
			"ID": "20220831152809-cvck6bt",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20220831152809-cvck6bt"
			},
			"Children": [
				{
					"ID": "20220831152809-11k6v7e",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220831152809-11k6v7e"
					},
					"Children": [
						{
							"ID": "20220831152809-inhe2lo",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220831152809-inhe2lo"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "-A"
								},
								{
									"Type": "NodeText",
									"Data": "：以ASCII码方式显示每一个数据包(不显示链路层头部信息). 在抓取包含网页数据的数据包时, 可方便查看数据"
								}
							]
						}
					]
				},
				{
					"ID": "20220831152809-jhb5mph",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220831152809-jhb5mph"
					},
					"Children": [
						{
							"ID": "20220831152809-vnhpujq",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220831152809-vnhpujq"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "-l"
								},
								{
									"Type": "NodeText",
									"Data": " : 基于行的输出，便于你保存查看，或者交给其它工具分析"
								}
							]
						}
					]
				},
				{
					"ID": "20220831152809-evujy92",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220831152809-evujy92"
					},
					"Children": [
						{
							"ID": "20220831152809-7jyu6x6",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220831152809-7jyu6x6"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "-q"
								},
								{
									"Type": "NodeText",
									"Data": " : 简洁地打印输出。即打印很少的协议相关信息, 从而输出行都比较简短."
								}
							]
						}
					]
				},
				{
					"ID": "20220831152809-9lk7myi",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220831152809-9lk7myi"
					},
					"Children": [
						{
							"ID": "20220831152809-v8zwy40",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220831152809-v8zwy40"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "-c"
								},
								{
									"Type": "NodeText",
									"Data": " : 捕获 count 个包 tcpdump 就退出"
								}
							]
						}
					]
				},
				{
					"ID": "20220831152809-ph47gwv",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220831152809-ph47gwv"
					},
					"Children": [
						{
							"ID": "20220831152809-c0fr278",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220831152809-c0fr278"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "-s"
								},
								{
									"Type": "NodeText",
									"Data": " : tcpdump 默认只会截取前 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "96"
								},
								{
									"Type": "NodeText",
									"Data": " 字节的内容，要想截取所有的报文内容，可以使用 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "-s number"
								},
								{
									"Type": "NodeText",
									"Data": "， "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "number"
								},
								{
									"Type": "NodeText",
									"Data": " 就是你要截取的报文字节数，如果是 0 的话，表示截取报文全部内容。"
								}
							]
						}
					]
				},
				{
					"ID": "20220831152809-1hd930n",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220831152809-1hd930n"
					},
					"Children": [
						{
							"ID": "20220831152809-5qe8gmf",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220831152809-5qe8gmf"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "-S"
								},
								{
									"Type": "NodeText",
									"Data": " : 使用绝对序列号，而不是相对序列号"
								}
							]
						}
					]
				},
				{
					"ID": "20220831152809-wkiui1b",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220831152809-wkiui1b"
					},
					"Children": [
						{
							"ID": "20220831152809-dhu3q9q",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220831152809-dhu3q9q"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "-C"
								},
								{
									"Type": "NodeText",
									"Data": "：file-size，tcpdump 在把原始数据包直接保存到文件中之前, 检查此文件大小是否超过file-size. 如果超过了, 将关闭此文件,另创一个文件继续用于原始数据包的记录. 新创建的文件名与-w 选项指定的文件名一致, 但文件名后多了一个数字.该数字会从1开始随着新创建文件的增多而增加. file-size的单位是百万字节(nt: 这里指1,000,000个字节,并非1,048,576个字节, 后者是以1024字节为1k, 1024k字节为1M计算所得, 即1M=1024 ＊ 1024 ＝ 1,048,576)"
								}
							]
						}
					]
				},
				{
					"ID": "20220831152809-2nnrg0w",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220831152809-2nnrg0w"
					},
					"Children": [
						{
							"ID": "20220831152809-krj4i6m",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220831152809-krj4i6m"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "-F"
								},
								{
									"Type": "NodeText",
									"Data": "：使用file 文件作为过滤条件表达式的输入, 此时命令行上的输入将被忽略."
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220831152809-few90wy",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220831152809-few90wy"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "4.10 对输出内容进行控制的参数[](https://www.cnblogs.com/wongbingming/archive/2020/06/30/13212306.html#idx_20)"
				}
			]
		},
		{
			"ID": "20220831152809-b2q1i3o",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20220831152809-b2q1i3o"
			},
			"Children": [
				{
					"ID": "20220831152809-iid85hq",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220831152809-iid85hq"
					},
					"Children": [
						{
							"ID": "20220831152809-a57eyu0",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220831152809-a57eyu0"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "-D"
								},
								{
									"Type": "NodeText",
									"Data": " : 显示所有可用网络接口的列表"
								}
							]
						}
					]
				},
				{
					"ID": "20220831152809-8i8562g",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220831152809-8i8562g"
					},
					"Children": [
						{
							"ID": "20220831152809-4zwopei",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220831152809-4zwopei"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "-e"
								},
								{
									"Type": "NodeText",
									"Data": " : 每行的打印输出中将包括数据包的数据链路层头部信息"
								}
							]
						}
					]
				},
				{
					"ID": "20220831152809-6ahgleu",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220831152809-6ahgleu"
					},
					"Children": [
						{
							"ID": "20220831152809-hrzkqkc",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220831152809-hrzkqkc"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "-E"
								},
								{
									"Type": "NodeText",
									"Data": " : 揭秘IPSEC数据"
								}
							]
						}
					]
				},
				{
					"ID": "20220831152809-owo3cux",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220831152809-owo3cux"
					},
					"Children": [
						{
							"ID": "20220831152809-ajp8ono",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220831152809-ajp8ono"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "-L"
								},
								{
									"Type": "NodeText",
									"Data": " ：列出指定网络接口所支持的数据链路层的类型后退出"
								}
							]
						}
					]
				},
				{
					"ID": "20220831152809-we40vru",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220831152809-we40vru"
					},
					"Children": [
						{
							"ID": "20220831152809-q16airs",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220831152809-q16airs"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "-Z"
								},
								{
									"Type": "NodeText",
									"Data": "：后接用户名，在抓包时会受到权限的限制。如果以root用户启动tcpdump，tcpdump将会有超级用户权限。"
								}
							]
						}
					]
				},
				{
					"ID": "20220831152809-njzkxit",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220831152809-njzkxit"
					},
					"Children": [
						{
							"ID": "20220831152809-60ebf5g",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220831152809-60ebf5g"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "-d"
								},
								{
									"Type": "NodeText",
									"Data": "：打印出易读的包匹配码"
								}
							]
						}
					]
				},
				{
					"ID": "20220831152809-7dhaxtu",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220831152809-7dhaxtu"
					},
					"Children": [
						{
							"ID": "20220831152809-oso8dcb",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220831152809-oso8dcb"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "-dd"
								},
								{
									"Type": "NodeText",
									"Data": "：以C语言的形式打印出包匹配码."
								}
							]
						}
					]
				},
				{
					"ID": "20220831152809-wsl34rh",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220831152809-wsl34rh"
					},
					"Children": [
						{
							"ID": "20220831152809-g53a0zy",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220831152809-g53a0zy"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "-ddd"
								},
								{
									"Type": "NodeText",
									"Data": "：以十进制数的形式打印出包匹配码"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220831152809-cb3bss4",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20220831152809-cb3bss4"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "5. 过滤规则组合[](https://www.cnblogs.com/wongbingming/archive/2020/06/30/13212306.html#idx_21)"
				}
			]
		},
		{
			"ID": "20220831152809-svbu284",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-svbu284"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "有编程基础的同学，对于下面三个逻辑运算符应该不陌生了吧"
				}
			]
		},
		{
			"ID": "20220831152809-zm7if3d",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20220831152809-zm7if3d"
			},
			"Children": [
				{
					"ID": "20220831152809-ju057i3",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220831152809-ju057i3"
					},
					"Children": [
						{
							"ID": "20220831152809-xx36o43",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220831152809-xx36o43"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "and：所有的条件都需要满足，也可以表示为 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "\u0026amp;\u0026amp;"
								}
							]
						}
					]
				},
				{
					"ID": "20220831152809-5acxjj9",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220831152809-5acxjj9"
					},
					"Children": [
						{
							"ID": "20220831152809-g1gelt1",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220831152809-g1gelt1"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "or：只要有一个条件满足就可以，也可以表示为 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "||"
								}
							]
						}
					]
				},
				{
					"ID": "20220831152809-a7pfnxp",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220831152809-a7pfnxp"
					},
					"Children": [
						{
							"ID": "20220831152809-r2liqo2",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220831152809-r2liqo2"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "not：取反，也可以使用 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "!"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220831152809-7271oew",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-7271oew"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "举个例子，我想需要抓一个来自"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "10.5.2.3"
				},
				{
					"Type": "NodeText",
					"Data": "，发往任意主机的3389端口的包"
				}
			]
		},
		{
			"ID": "20220831152809-11ofj7f",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220831152809-11ofj7f"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "$ tcpdump src 10.5.2.3 and dst port 3389\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220831152809-mrc2vkz",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-mrc2vkz"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "当你在使用多个过滤器进行组合时，有可能需要用到括号，而括号在 shell 中是特殊符号，因为你需要使用引号将其包含。例子如下："
				}
			]
		},
		{
			"ID": "20220831152809-tteohxv",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220831152809-tteohxv"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "$ tcpdump 'src 10.0.2.4 and (dst port 3389 or 22)'\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220831152809-hokzoxr",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-hokzoxr"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "而在单个过滤器里，常常会判断一条件是否成立，这时候，就要使用下面两个符号"
				}
			]
		},
		{
			"ID": "20220831152809-ea7sp1z",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20220831152809-ea7sp1z"
			},
			"Children": [
				{
					"ID": "20220831152809-4epma3i",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220831152809-4epma3i"
					},
					"Children": [
						{
							"ID": "20220831152809-7l80io8",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220831152809-7l80io8"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "="
								},
								{
									"Type": "NodeText",
									"Data": "：判断二者相等"
								}
							]
						}
					]
				},
				{
					"ID": "20220831152809-8ug7auz",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220831152809-8ug7auz"
					},
					"Children": [
						{
							"ID": "20220831152809-uxsezsb",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220831152809-uxsezsb"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "=="
								},
								{
									"Type": "NodeText",
									"Data": "：判断二者相等"
								}
							]
						}
					]
				},
				{
					"ID": "20220831152809-skn7fw7",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220831152809-skn7fw7"
					},
					"Children": [
						{
							"ID": "20220831152809-izsrcst",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220831152809-izsrcst"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "!="
								},
								{
									"Type": "NodeText",
									"Data": "：判断二者不相等"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220831152809-htgz18d",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-htgz18d"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "当你使用这两个符号时，tcpdump 还提供了一些关键字的接口来方便我们进行判断，比如"
				}
			]
		},
		{
			"ID": "20220831152809-x61pift",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20220831152809-x61pift"
			},
			"Children": [
				{
					"ID": "20220831152809-bvhvs7j",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220831152809-bvhvs7j"
					},
					"Children": [
						{
							"ID": "20220831152809-j5nr1tk",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220831152809-j5nr1tk"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "if：表示网卡接口名、"
								}
							]
						}
					]
				},
				{
					"ID": "20220831152809-mcwzc1u",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220831152809-mcwzc1u"
					},
					"Children": [
						{
							"ID": "20220831152809-v98s7k1",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220831152809-v98s7k1"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "proc：表示进程名"
								}
							]
						}
					]
				},
				{
					"ID": "20220831152809-3jhiiiu",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220831152809-3jhiiiu"
					},
					"Children": [
						{
							"ID": "20220831152809-d6hq9qc",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220831152809-d6hq9qc"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "pid：表示进程 id"
								}
							]
						}
					]
				},
				{
					"ID": "20220831152809-bec9z7m",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220831152809-bec9z7m"
					},
					"Children": [
						{
							"ID": "20220831152809-418gxrg",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220831152809-418gxrg"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "svc：表示 service class"
								}
							]
						}
					]
				},
				{
					"ID": "20220831152809-v6v98fl",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220831152809-v6v98fl"
					},
					"Children": [
						{
							"ID": "20220831152809-oyboeuv",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220831152809-oyboeuv"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "dir：表示方向，in 和 out"
								}
							]
						}
					]
				},
				{
					"ID": "20220831152809-sae3epg",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220831152809-sae3epg"
					},
					"Children": [
						{
							"ID": "20220831152809-h9nvpum",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220831152809-h9nvpum"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "eproc：表示 effective process name"
								}
							]
						}
					]
				},
				{
					"ID": "20220831152809-8kth6hh",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220831152809-8kth6hh"
					},
					"Children": [
						{
							"ID": "20220831152809-2ukunml",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220831152809-2ukunml"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "epid：表示 effective process ID"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220831152809-dmrjwe5",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-dmrjwe5"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "比如我现在要过滤来自进程名为 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "nc"
				},
				{
					"Type": "NodeText",
					"Data": " 发出的流经 en0 网卡的数据包，或者不流经 en0 的入方向数据包，可以这样子写"
				}
			]
		},
		{
			"ID": "20220831152809-rftuqd6",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220831152809-rftuqd6"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "$ tcpdump \"( if=en0 and proc =nc ) || (if != en0 and dir=in)\"\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220831152809-sd6ykgk",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20220831152809-sd6ykgk"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "6. 特殊过滤规则[](https://www.cnblogs.com/wongbingming/archive/2020/06/30/13212306.html#idx_22)"
				}
			]
		},
		{
			"ID": "20220831152809-s44uy5q",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220831152809-s44uy5q"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "5.1 根据 tcpflags 进行过滤[](https://www.cnblogs.com/wongbingming/archive/2020/06/30/13212306.html#idx_23)"
				}
			]
		},
		{
			"ID": "20220831152809-4ljxsdy",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-4ljxsdy"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "通过"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "a",
					"TextMarkAHref": "https://mp.weixin.qq.com/s?__biz=MzIzMzMzOTI3Nw==\u0026mid=2247488180\u0026idx=1\u0026sn=09526224732ebfcccb52847f27298c70\u0026chksm=e8867256dff1fb40c9f47bafd0e87a9237c5a9ebf33c8a3d0a598276b496d29cdaa3fbff8d26\u0026token=1970357830\u0026lang=zh_CN#rd",
					"TextMarkTextContent": "上一篇文章"
				},
				{
					"Type": "NodeText",
					"Data": "，我们知道了 tcp 的首部有一个标志位。"
				}
			]
		},
		{
			"ID": "20220831152809-v3odtzr",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-v3odtzr"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/1034798-20200906102314493-199355065-20220831152809-s4f87le.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20220831152809-vttgj76",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-vttgj76"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "tcpdump 支持我们根据数据包的标志位进行过滤"
				}
			]
		},
		{
			"ID": "20220831152809-82oubq3",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220831152809-82oubq3"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "proto [ expr:size ]\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220831152809-vvved9x",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20220831152809-vvved9x"
			},
			"Children": [
				{
					"ID": "20220831152809-g4y903q",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220831152809-g4y903q"
					},
					"Children": [
						{
							"ID": "20220831152809-dzzi3op",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220831152809-dzzi3op"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "proto"
								},
								{
									"Type": "NodeText",
									"Data": "：可以是熟知的协议之一（如ip，arp，tcp，udp，icmp，ipv6）"
								}
							]
						}
					]
				},
				{
					"ID": "20220831152809-nihskxt",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220831152809-nihskxt"
					},
					"Children": [
						{
							"ID": "20220831152809-uhkukg7",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220831152809-uhkukg7"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "expr"
								},
								{
									"Type": "NodeText",
									"Data": "：可以是数值，也可以是一个表达式，表示与指定的协议头开始处的字节偏移量。"
								}
							]
						}
					]
				},
				{
					"ID": "20220831152809-v2612fh",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220831152809-v2612fh"
					},
					"Children": [
						{
							"ID": "20220831152809-8cqu2fz",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220831152809-8cqu2fz"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "size"
								},
								{
									"Type": "NodeText",
									"Data": "：是可选的，表示从字节偏移量开始取的字节数量。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220831152809-dh5io2c",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-dh5io2c"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "接下来，我将举几个例子，让人明白它的写法，不过在那之前，有几个点需要你明白，这在后面的例子中会用到："
				}
			]
		},
		{
			"ID": "20220831152809-xvadvl2",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-xvadvl2"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": " "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "1、"
				},
				{
					"Type": "NodeText",
					"Data": " tcpflags 可以理解为是一个别名常量，相当于 13，它代表着与指定的协议头开头相关的字节偏移量，也就是标志位，所以 tcp[tcpflags] 等价于 tcp[13] ，对应下图中的报文位置。"
				}
			]
		},
		{
			"ID": "20220831152809-3nf4rmv",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-3nf4rmv"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/1034798-20200906102545071-7850421-20220831152809-qt9y8zd.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20220831152809-wyehwr3",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-wyehwr3"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": " "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "2、"
				},
				{
					"Type": "NodeText",
					"Data": " tcp-fin, tcp-syn, tcp-rst, tcp-push, tcp-ack, tcp-urg 这些同样可以理解为别名常量，分别代表 1，2，4，8，16，32，64。这些数字是如何计算出来的呢？"
				}
			]
		},
		{
			"ID": "20220831152809-cau3vmt",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-cau3vmt"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "以 tcp-syn 为例，你可以参照下面这张图，计算出来的值 是就是 2"
				}
			]
		},
		{
			"ID": "20220831152809-lhyoj5q",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-lhyoj5q"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/1034798-20200906102612987-758794309-20220831152809-lnxp1xc.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20220831152809-04rn2rg",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-04rn2rg"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "由于数字不好记忆，所以一般使用这样的“别名常量”表示。"
				}
			]
		},
		{
			"ID": "20220831152809-ccq7z10",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-ccq7z10"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "因此当下面这个表达式成立时，就代表这个包是一个 syn 包。"
				}
			]
		},
		{
			"ID": "20220831152809-5el7ai2",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220831152809-5el7ai2"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "tcp[tcpflags] == tcp-syn\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220831152809-hmqapmb",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-hmqapmb"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "要抓取特定数据包，方法有很多种。"
				}
			]
		},
		{
			"ID": "20220831152809-ch33e3t",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-ch33e3t"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "下面以最常见的 syn包为例，演示一下如何用 tcpdump 抓取到 syn 包，而其他的类型的包也是同样的道理。"
				}
			]
		},
		{
			"ID": "20220831152809-jdrbwmh",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-jdrbwmh"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "据我总结，主要有三种写法："
				}
			]
		},
		{
			"ID": "20220831152809-e720248",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-e720248"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "1、第一种写法：使用数字表示偏移量"
				}
			]
		},
		{
			"ID": "20220831152809-r5zg3p0",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220831152809-r5zg3p0"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "$ tcpdump -i eth0 \"tcp[13] \u0026 2 != 0\" \n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220831152809-udgh0gm",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-udgh0gm"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "2、第二种写法：使用别名常量表示偏移量"
				}
			]
		},
		{
			"ID": "20220831152809-b5qmx11",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220831152809-b5qmx11"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "$ tcpdump -i eth0 \"tcp[tcpflags] \u0026 tcp-syn != 0\" \n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220831152809-ei4ib4k",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-ei4ib4k"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "3、第三种写法：使用混合写法"
				}
			]
		},
		{
			"ID": "20220831152809-h4oe06u",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220831152809-h4oe06u"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "$ tcpdump -i eth0 \"tcp[tcpflags] \u0026 2 != 0\" \n\n# or\n\n$ tcpdump -i eth0 \"tcp[13] \u0026 tcp-syn != 0\" \n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220831152809-fpe01hu",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-fpe01hu"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "如果我想同时捕获多种类型的包呢，比如 syn + ack 包"
				}
			]
		},
		{
			"ID": "20220831152809-fg3wi3g",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-fg3wi3g"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "1、第一种写法"
				}
			]
		},
		{
			"ID": "20220831152809-af7otpp",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220831152809-af7otpp"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "$ tcpdump -i eth0 'tcp[13] == 2 or tcp[13] == 16'\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220831152809-7yl4fba",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-7yl4fba"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "2、第二种写法"
				}
			]
		},
		{
			"ID": "20220831152809-qfvb4n9",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220831152809-qfvb4n9"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "$ tcpdump -i eth0 'tcp[tcpflags] == tcp-syn or tcp[tcpflags] == tcp-ack'\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220831152809-xkgsmei",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-xkgsmei"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "3、第三种写法"
				}
			]
		},
		{
			"ID": "20220831152809-m5kjgfg",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220831152809-m5kjgfg"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "$ tcpdump -i eth0 \"tcp[tcpflags] \u0026 (tcp-syn|tcp-ack) != 0\" \n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220831152809-j5sal7q",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-j5sal7q"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "4、第四种写法：注意这里是 单个等号，而不是像上面一样两个等号，18（syn+ack） = 2（syn） + 16（ack）"
				}
			]
		},
		{
			"ID": "20220831152809-wo5oxxw",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220831152809-wo5oxxw"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "$ tcpdump -i eth0 'tcp[13] = 18'\n\n# or\n\n$ tcpdump -i eth0 'tcp[tcpflags] = 18'\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220831152809-v3bm4a0",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-v3bm4a0"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "tcp 中有 类似 tcp-syn 的别名常量，其他协议也是有的，比如 icmp 协议，可以使用的别名常量有"
				}
			]
		},
		{
			"ID": "20220831152809-3npt34o",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220831152809-3npt34o"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "icmp-echoreply, icmp-unreach, icmp-sourcequench, \nicmp-redirect, icmp-echo, icmp-routeradvert,\nicmp-routersolicit, icmp-timx-ceed, icmp-paramprob, \nicmp-tstamp, icmp-tstampreply,icmp-ireq, \nicmp-ireqreply, icmp-maskreq, icmp-maskreply\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220831152809-xc08dlf",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220831152809-xc08dlf"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "5.2 基于包大小进行过滤[](https://www.cnblogs.com/wongbingming/archive/2020/06/30/13212306.html#idx_24)"
				}
			]
		},
		{
			"ID": "20220831152809-x74k5qz",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-x74k5qz"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "若你想查看指定大小的数据包，也是可以的"
				}
			]
		},
		{
			"ID": "20220831152809-ghzwnv0",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220831152809-ghzwnv0"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "$ tcpdump less 32 \n$ tcpdump greater 64 \n$ tcpdump \u003c= 128\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220831152809-yulfco4",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220831152809-yulfco4"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "5.3 根据 mac 地址进行过滤[](https://www.cnblogs.com/wongbingming/archive/2020/06/30/13212306.html#idx_25)"
				}
			]
		},
		{
			"ID": "20220831152809-2e17dtk",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-2e17dtk"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "例子如下，其中 ehost 是记录在 /etc/ethers 里的 name"
				}
			]
		},
		{
			"ID": "20220831152809-whp373d",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220831152809-whp373d"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "$ tcpdump ether host [ehost]\n$ tcpdump ether dst\t[ehost]\n$ tcpdump ether src\t[ehost]\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220831152809-jgr1qvc",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220831152809-jgr1qvc"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "5.4 过滤通过指定网关的数据包"
				}
			]
		},
		{
			"ID": "20220831152809-jm3s96w",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220831152809-jm3s96w"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "$ tcpdump gateway [host]\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220831152809-fecricn",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220831152809-fecricn"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "5.5 过滤广播/多播数据包[](https://www.cnblogs.com/wongbingming/archive/2020/06/30/13212306.html#idx_27)"
				}
			]
		},
		{
			"ID": "20220831152809-cqw7oyn",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-cqw7oyn"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "复制代码"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/copycode-20220831152809-8mnqzku.gif"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20220831152809-xqmx4s9",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220831152809-xqmx4s9"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "$ tcpdump ether broadcast\n$ tcpdump ether multicast\n\n$ tcpdump ip broadcast\n$ tcpdump ip multicast\n\n$ tcpdump ip6 multicast\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220831152809-7pi9nrn",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-7pi9nrn"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "复制代码"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/copycode-20220831152809-8mnqzku.gif"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20220831152809-63lrvn4",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20220831152809-63lrvn4"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "7. 如何抓取到更精准的包？[](https://www.cnblogs.com/wongbingming/archive/2020/06/30/13212306.html#idx_28)"
				}
			]
		},
		{
			"ID": "20220831152809-dqmqr7f",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-dqmqr7f"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "先给你抛出一个问题：如果我只想抓取 HTTP 的 POST 请求该如何写呢？"
				}
			]
		},
		{
			"ID": "20220831152809-9vinlwz",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-9vinlwz"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "如果只学习了上面的内容，恐怕你还是无法写法满足这个抓取需求的过滤器。"
				}
			]
		},
		{
			"ID": "20220831152809-ove8st7",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-ove8st7"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在学习之前，我先给出答案，然后再剖析一下，这个过滤器是如何生效的，居然能让我们对包内的内容进行判断。"
				}
			]
		},
		{
			"ID": "20220831152809-5u8dlsq",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220831152809-5u8dlsq"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "$ tcpdump -s 0 -A -vv 'tcp[((tcp[12:1] \u0026 0xf0) \u003e\u003e 2):4]'\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220831152809-8rlluhs",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-8rlluhs"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "命令里的可选参数，在前面的内容里已经详细讲过了。这里不再细讲。"
				}
			]
		},
		{
			"ID": "20220831152809-2uapsus",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-2uapsus"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "本节的重点是引号里的内容，看起来很复杂的样子。"
				}
			]
		},
		{
			"ID": "20220831152809-lnv5cg9",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-lnv5cg9"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "将它逐一分解，我们只要先理解了下面几种用法，就能明白"
				}
			]
		},
		{
			"ID": "20220831152809-qv7lf95",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20220831152809-qv7lf95"
			},
			"Children": [
				{
					"ID": "20220831152809-3lcs9aa",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220831152809-3lcs9aa"
					},
					"Children": [
						{
							"ID": "20220831152809-ctigkoj",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220831152809-ctigkoj"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "tcp[n]"
								},
								{
									"Type": "NodeText",
									"Data": "：表示 tcp 报文里 第 n 个字节"
								}
							]
						}
					]
				},
				{
					"ID": "20220831152809-5ma7mi9",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220831152809-5ma7mi9"
					},
					"Children": [
						{
							"ID": "20220831152809-89kzdn9",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220831152809-89kzdn9"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "tcp[n:c]"
								},
								{
									"Type": "NodeText",
									"Data": "：表示 tcp 报文里从第n个字节开始取 c 个字节，tcp[12:1] 表示从报文的第12个字节（因为有第0个字节，所以这里的12其实表示的是13）开始算起取一个字节，也就是 8 个bit。查看 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "a",
									"TextMarkAHref": "https://en.wikipedia.org/wiki/Transmission_Control_Protocol#TCP_segment_structure",
									"TextMarkTextContent": "tcp 的报文首部结构"
								},
								{
									"Type": "NodeText",
									"Data": "，可以得知这 8 个bit 其实就是下图中的红框圈起来的位置，而在这里我们只要前面 4个bit，也就是实际数据在整个报文首部中的偏移量。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220831152809-s57uxvd",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-s57uxvd"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/1034798-20200906103022096-99195189-20220831152809-he8xut5.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20220831152809-8llq3ja",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20220831152809-8llq3ja"
			},
			"Children": [
				{
					"ID": "20220831152809-em220vr",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220831152809-em220vr"
					},
					"Children": [
						{
							"ID": "20220831152809-k15g789",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220831152809-k15g789"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "\u0026amp;"
								},
								{
									"Type": "NodeText",
									"Data": "：是"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "a",
									"TextMarkAHref": "https://en.wikipedia.org/wiki/Bitwise_operation",
									"TextMarkTextContent": "位运算"
								},
								{
									"Type": "NodeText",
									"Data": "里的 and 操作符，比如 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "0011 \u0026amp; 0010 = 0010"
								}
							]
						}
					]
				},
				{
					"ID": "20220831152809-po1369m",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220831152809-po1369m"
					},
					"Children": [
						{
							"ID": "20220831152809-13f232t",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220831152809-13f232t"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "\u0026gt;\u0026gt;"
								},
								{
									"Type": "NodeText",
									"Data": "：是位运算里的右移操作，比如 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "0111 \u0026gt;\u0026gt; 2 = 0001"
								}
							]
						}
					]
				},
				{
					"ID": "20220831152809-oqrlqsc",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220831152809-oqrlqsc"
					},
					"Children": [
						{
							"ID": "20220831152809-stl88j3",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220831152809-stl88j3"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "0xf0"
								},
								{
									"Type": "NodeText",
									"Data": "：是 10 进制的 240 的 16 进制表示，但对于位操作来说，10进制和16进制都将毫无意义，我们需要的是二进制，将其转换成二进制后是：11110000，这个数有什么特点呢？前面个 4bit 全部是 1，后面4个bit全部是0，往后看你就知道这个特点有什么用了。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220831152809-sht548l",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-sht548l"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "分解完后，再慢慢合并起来看"
				}
			]
		},
		{
			"ID": "20220831152809-9mdtofx",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-9mdtofx"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "1、"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "tcp[12:1] \u0026amp; 0xf0"
				},
				{
					"Type": "NodeText",
					"Data": " 其实并不直观，但是我们将它换一种写法，就好看多了，假设 tcp 报文中的 第12 个字节是这样组成的 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "10110000"
				},
				{
					"Type": "NodeText",
					"Data": "，那么这个表达式就可以变成 10110110 \u0026\u0026 11110000 = 10110000，得到了 10110000 后，再进入下一步。"
				}
			]
		},
		{
			"ID": "20220831152809-tntzi8o",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-tntzi8o"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "2、"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "tcp[12:1] \u0026amp; 0xf0) \u0026gt;\u0026gt; 2"
				},
				{
					"Type": "NodeText",
					"Data": " ：如果你不理解 tcp 报文首部里的数据偏移，请先点击这个前往我的"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "a",
					"TextMarkAHref": "https://mp.weixin.qq.com/s?__biz=MzIzMzMzOTI3Nw==\u0026mid=2247488180\u0026idx=1\u0026sn=09526224732ebfcccb52847f27298c70\u0026chksm=e8867256dff1fb40c9f47bafd0e87a9237c5a9ebf33c8a3d0a598276b496d29cdaa3fbff8d26\u0026token=1970357830\u0026lang=zh_CN#rd",
					"TextMarkTextContent": "上一篇文章"
				},
				{
					"Type": "NodeText",
					"Data": "，搞懂数据偏移的意义，否则我保证你这里会绝对会听懵了。"
				}
			]
		},
		{
			"ID": "20220831152809-sdsr0ip",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-sdsr0ip"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "tcp[12:1] \u0026amp; 0xf0) \u0026gt;\u0026gt; 2"
				},
				{
					"Type": "NodeText",
					"Data": " 这个表达式实际是 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "(tcp[12:1] \u0026amp; 0xf0) \u0026gt;\u0026gt; 4 ) \u0026lt;\u0026lt; 2"
				},
				{
					"Type": "NodeText",
					"Data": " 的简写形式。所以要搞懂 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "tcp[12:1] \u0026amp; 0xf0) \u0026gt;\u0026gt; 2"
				},
				{
					"Type": "NodeText",
					"Data": " 只要理解了"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "(tcp[12:1] \u0026amp; 0xf0) \u0026gt;\u0026gt; 4 ) \u0026lt;\u0026lt; 2"
				},
				{
					"Type": "NodeText",
					"Data": " 就行了 。"
				}
			]
		},
		{
			"ID": "20220831152809-0kqymr9",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-0kqymr9"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "从上一步我们算出了 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "tcp[12:1] \u0026amp; 0xf0"
				},
				{
					"Type": "NodeText",
					"Data": " 的值其实是一个字节，也就是 8 个bit，但是你再回去看下上面的 tcp 报文首部结构图，表示数据偏移量的只有 4个bit，也就是说 上面得到的值 10110000，前面 4 位（1011）才是正确的偏移量，那么为了得到 1011，只需要将 10110000 右移4位即可，也就是 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "tcp[12:1] \u0026amp; 0xf0) \u0026gt;\u0026gt; 4"
				},
				{
					"Type": "NodeText",
					"Data": "，至此我们是不是已经得出了实际数据的正确位置呢，很遗憾还没有，前一篇文章里我们讲到 Data Offset 的单位是 4个字节，因为要将 1011 乘以 4才可以，除以4在位运算中相当于左移2位，也就是 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "\u0026lt;\u0026lt;2"
				},
				{
					"Type": "NodeText",
					"Data": "，与前面的 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "\u0026gt;\u0026gt;4"
				},
				{
					"Type": "NodeText",
					"Data": " 结合起来一起算的话，最终的运算可以简化为 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "\u0026gt;\u0026gt;2"
				},
				{
					"Type": "NodeText",
					"Data": "。"
				}
			]
		},
		{
			"ID": "20220831152809-b3czcr9",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-b3czcr9"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "至此，我们终于得出了实际数据开始的位置是 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "tcp[12:1] \u0026amp; 0xf0) \u0026gt;\u0026gt; 2"
				},
				{
					"Type": "NodeText",
					"Data": " （单位是字节）。"
				}
			]
		},
		{
			"ID": "20220831152809-0wsxug3",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-0wsxug3"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "找到了数据的起点后，可别忘了我们的目的是从数据中打到 HTTP 请求的方法，是 GET 呢 还是 POST ，或者是其他的？"
				}
			]
		},
		{
			"ID": "20220831152809-h9ysngf",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-h9ysngf"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "有了上面的经验，我们自然懂得使用 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "tcp[((tcp[12:1] \u0026amp; 0xf0) \u0026gt;\u0026gt; 2):4]"
				},
				{
					"Type": "NodeText",
					"Data": " 从数据开始的位置再取出四个字节，然后将结果与 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "GET"
				},
				{
					"Type": "NodeText",
					"Data": " （注意 GET最后还有个空格）的 16进制写法（也就是 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "0x47455420"
				},
				{
					"Type": "NodeText",
					"Data": "）进行比对。"
				}
			]
		},
		{
			"ID": "20220831152809-fln6xlw",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220831152809-fln6xlw"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "0x47   --\u003e   71    --\u003e  G\n0x45   --\u003e   69    --\u003e  E\n0x54   --\u003e   84    --\u003e  T\n0x20   --\u003e   32    --\u003e  空格\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220831152809-283knxd",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-283knxd"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/1034798-20200906103127623-57986135-20220831152809-6dnmyes.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20220831152809-vjeenuk",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-vjeenuk"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "如果相等，则该表达式为True，tcpdump 认为这就是我们所需要抓的数据包，将其输出到我们的终端屏幕上。"
				}
			]
		},
		{
			"ID": "20220831152809-ra8737e",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20220831152809-ra8737e"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "8. 抓包实战应用例子[](https://www.cnblogs.com/wongbingming/archive/2020/06/30/13212306.html#idx_29)"
				}
			]
		},
		{
			"ID": "20220831152809-cqiuw9c",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220831152809-cqiuw9c"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "8.1 提取 HTTP 的 User-Agent[](https://www.cnblogs.com/wongbingming/archive/2020/06/30/13212306.html#idx_30)"
				}
			]
		},
		{
			"ID": "20220831152809-3yet5qr",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-3yet5qr"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "从 HTTP 请求头中提取 HTTP 的 User-Agent："
				}
			]
		},
		{
			"ID": "20220831152809-w1ocj28",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220831152809-w1ocj28"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "$ tcpdump -nn -A -s1500 -l | grep \"User-Agent:\"\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220831152809-ks68yhk",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-ks68yhk"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "通过 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "egrep"
				},
				{
					"Type": "NodeText",
					"Data": " 可以同时提取User-Agent 和主机名（或其他头文件）："
				}
			]
		},
		{
			"ID": "20220831152809-pj44zwe",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220831152809-pj44zwe"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "$ tcpdump -nn -A -s1500 -l | egrep -i 'User-Agent:|Host:'\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220831152809-9gldhzp",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220831152809-9gldhzp"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "8.2 抓取 HTTP GET 和 POST 请求[](https://www.cnblogs.com/wongbingming/archive/2020/06/30/13212306.html#idx_31)"
				}
			]
		},
		{
			"ID": "20220831152809-1cpd431",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-1cpd431"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "抓取 HTTP GET 请求包："
				}
			]
		},
		{
			"ID": "20220831152809-zz9afu7",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220831152809-zz9afu7"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "$ tcpdump -s 0 -A -vv 'tcp[((tcp[12:1] \u0026 0xf0) \u003e\u003e 2):4] = 0x47455420'\n\n# or\n\n$ tcpdump -vvAls0 | grep 'GET'\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220831152809-pfneygi",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-pfneygi"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "可以抓取 HTTP POST 请求包："
				}
			]
		},
		{
			"ID": "20220831152809-8bas1nl",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220831152809-8bas1nl"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "$ tcpdump -s 0 -A -vv 'tcp[((tcp[12:1] \u0026 0xf0) \u003e\u003e 2):4] = 0x504f5354'\n\n# or \n\n$ tcpdump -vvAls0 | grep 'POST'\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220831152809-gthsrdw",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-gthsrdw"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "注意：该方法不能保证抓取到 HTTP POST 有效数据流量，因为一个 POST 请求会被分割为多个 TCP 数据包。"
				}
			]
		},
		{
			"ID": "20220831152809-l6lwdon",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220831152809-l6lwdon"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "8.3 找出发包数最多的 IP[](https://www.cnblogs.com/wongbingming/archive/2020/06/30/13212306.html#idx_32)"
				}
			]
		},
		{
			"ID": "20220831152809-ccwnnl7",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-ccwnnl7"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "找出一段时间内发包最多的 IP，或者从一堆报文中找出发包最多的 IP，可以使用下面的命令："
				}
			]
		},
		{
			"ID": "20220831152809-4fzjfhl",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220831152809-4fzjfhl"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "$ tcpdump -nnn -t -c 200 | cut -f 1,2,3,4 -d '.' | sort | uniq -c | sort -nr | head -n 20\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220831152809-9zy8wwx",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20220831152809-9zy8wwx"
			},
			"Children": [
				{
					"ID": "20220831152809-3nm0m3c",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220831152809-3nm0m3c"
					},
					"Children": [
						{
							"ID": "20220831152809-ujhrgtd",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220831152809-ujhrgtd"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "cut -f 1,2,3,4 -d '.'"
								},
								{
									"Type": "NodeText",
									"Data": " : 以 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "."
								},
								{
									"Type": "NodeText",
									"Data": " 为分隔符，打印出每行的前四列。即 IP 地址。"
								}
							]
						}
					]
				},
				{
					"ID": "20220831152809-vle1gg8",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220831152809-vle1gg8"
					},
					"Children": [
						{
							"ID": "20220831152809-irbs7ga",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220831152809-irbs7ga"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "sort | uniq -c"
								},
								{
									"Type": "NodeText",
									"Data": " : 排序并计数"
								}
							]
						}
					]
				},
				{
					"ID": "20220831152809-sd4ik90",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220831152809-sd4ik90"
					},
					"Children": [
						{
							"ID": "20220831152809-yf3axxf",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220831152809-yf3axxf"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "sort -nr"
								},
								{
									"Type": "NodeText",
									"Data": " : 按照数值大小逆向排序"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220831152809-xc9ee4u",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220831152809-xc9ee4u"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "8.4 抓取 DNS 请求和响应[](https://www.cnblogs.com/wongbingming/archive/2020/06/30/13212306.html#idx_33)"
				}
			]
		},
		{
			"ID": "20220831152809-6z8xoji",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-6z8xoji"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "DNS 的默认端口是 53，因此可以通过端口进行过滤"
				}
			]
		},
		{
			"ID": "20220831152809-xoftmbo",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220831152809-xoftmbo"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "$ tcpdump -i any -s0 port 53\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220831152809-cgnw6p9",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220831152809-cgnw6p9"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "8.5 切割 pcap 文件[](https://www.cnblogs.com/wongbingming/archive/2020/06/30/13212306.html#idx_34)"
				}
			]
		},
		{
			"ID": "20220831152809-dzt6x60",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-dzt6x60"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "当抓取大量数据并写入文件时，可以自动切割为多个大小相同的文件。例如，下面的命令表示每 3600 秒创建一个新文件 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "capture-(hour).pcap"
				},
				{
					"Type": "NodeText",
					"Data": "，每个文件大小不超过 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "200*1000000"
				},
				{
					"Type": "NodeText",
					"Data": " 字节："
				}
			]
		},
		{
			"ID": "20220831152809-wgv2k9l",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220831152809-wgv2k9l"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "$ tcpdump  -w /tmp/capture-%H.pcap -G 3600 -C 200\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220831152809-2udeeqr",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-2udeeqr"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "这些文件的命名为 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "capture-{1-24}.pcap"
				},
				{
					"Type": "NodeText",
					"Data": "，24 小时之后，之前的文件就会被覆盖。"
				}
			]
		},
		{
			"ID": "20220831152809-h1ltaxx",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220831152809-h1ltaxx"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "8.6 提取 HTTP POST 请求中的密码[](https://www.cnblogs.com/wongbingming/archive/2020/06/30/13212306.html#idx_35)"
				}
			]
		},
		{
			"ID": "20220831152809-kqlg07g",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-kqlg07g"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "从 HTTP POST 请求中提取密码和主机名："
				}
			]
		},
		{
			"ID": "20220831152809-9hox5b9",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220831152809-9hox5b9"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "$ tcpdump -s 0 -A -n -l | egrep -i \"POST /|pwd=|passwd=|password=|Host:\"\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220831152809-3fxmo4h",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220831152809-3fxmo4h"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "8.7 提取 HTTP 请求的 URL[](https://www.cnblogs.com/wongbingming/archive/2020/06/30/13212306.html#idx_36)"
				}
			]
		},
		{
			"ID": "20220831152809-apfr6c2",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-apfr6c2"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "提取 HTTP 请求的主机名和路径："
				}
			]
		},
		{
			"ID": "20220831152809-kj1myg1",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220831152809-kj1myg1"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "$ tcpdump -s 0 -v -n -l | egrep -i \"POST /|GET /|Host:\"\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220831152809-67jetst",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220831152809-67jetst"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "8.8 抓取 HTTP 有效数据包[](https://www.cnblogs.com/wongbingming/archive/2020/06/30/13212306.html#idx_37)"
				}
			]
		},
		{
			"ID": "20220831152809-hb26584",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-hb26584"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "抓取 80 端口的 HTTP 有效数据包，排除 TCP 连接建立过程的数据包（SYN / FIN / ACK）："
				}
			]
		},
		{
			"ID": "20220831152809-h8g520c",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220831152809-h8g520c"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "$ tcpdump 'tcp port 80 and (((ip[2:2] - ((ip[0]\u00260xf)\u003c\u003c2)) - ((tcp[12]\u00260xf0)\u003e\u003e2)) != 0)'\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220831152809-sifnenp",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220831152809-sifnenp"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "8.9 结合 Wireshark 进行分析[](https://www.cnblogs.com/wongbingming/archive/2020/06/30/13212306.html#idx_38)"
				}
			]
		},
		{
			"ID": "20220831152809-aptihqb",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-aptihqb"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "通常 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "Wireshark"
				},
				{
					"Type": "NodeText",
					"Data": "（或 tshark）比 tcpdump 更容易分析应用层协议。一般的做法是在远程服务器上先使用 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "tcpdump"
				},
				{
					"Type": "NodeText",
					"Data": " 抓取数据并写入文件，然后再将文件拷贝到本地工作站上用 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "Wireshark"
				},
				{
					"Type": "NodeText",
					"Data": " 分析。"
				}
			]
		},
		{
			"ID": "20220831152809-mzur8jj",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-mzur8jj"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "还有一种更高效的方法，可以通过 ssh 连接将抓取到的数据实时发送给 Wireshark 进行分析。以 MacOS 系统为例，可以通过 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "brew cask install wireshark"
				},
				{
					"Type": "NodeText",
					"Data": " 来安装，然后通过下面的命令来分析："
				}
			]
		},
		{
			"ID": "20220831152809-45nn9u6",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220831152809-45nn9u6"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "$ ssh root@remotesystem 'tcpdump -s0 -c 1000 -nn -w - not port 22' | /Applications/Wireshark.app/Contents/MacOS/Wireshark -k -i -\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220831152809-pornjli",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-pornjli"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "例如，如果想分析 DNS 协议，可以使用下面的命令："
				}
			]
		},
		{
			"ID": "20220831152809-nkncx5y",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220831152809-nkncx5y"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "$ ssh root@remotesystem 'tcpdump -s0 -c 1000 -nn -w - port 53' | /Applications/Wireshark.app/Contents/MacOS/Wireshark -k -i -\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220831152809-ozp74ui",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-ozp74ui"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "抓取到的数据："
				}
			]
		},
		{
			"ID": "20220831152809-j0hh8e4",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-j0hh8e4"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/1034798-20200906103702829-861923029-20220831152809-1lnpc5w.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20220831152809-uhtd5qf",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-uhtd5qf"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "-c"
				},
				{
					"Type": "NodeText",
					"Data": " 选项用来限制抓取数据的大小。如果不限制大小，就只能通过 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "ctrl-c"
				},
				{
					"Type": "NodeText",
					"Data": " 来停止抓取，这样一来不仅关闭了 tcpdump，也关闭了 wireshark。"
				}
			]
		},
		{
			"ID": "20220831152809-7jw2fz8",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220831152809-7jw2fz8"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "到这里，我已经将我所知道的 tcpdump 的用法全部说了一遍，如果你有认真地看完本文，相信会有不小的收获，掌握一个上手的抓包工具，对于以后我们学习网络、分析网络协议、以及定位网络问题，会很有帮助，而 tcpdump 是我推荐的一个抓包工具。"
				}
			]
		},
		{
			"ID": "20220831152809-kvohk1i",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20220831152809-kvohk1i"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "9. 参考文章[](https://www.cnblogs.com/wongbingming/archive/2020/06/30/13212306.html#idx_39)"
				}
			]
		},
		{
			"ID": "20220831152809-2o0dbxv",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20220831152809-2o0dbxv"
			},
			"Children": [
				{
					"ID": "20220831152809-fg5zsdi",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20220831152809-fg5zsdi"
					},
					"Children": [
						{
							"ID": "20220831152809-uy24txa",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220831152809-uy24txa"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "a",
									"TextMarkAHref": "https://www.freebsd.org/cgi/man.cgi?query=tcpdump\u0026apropos=0\u0026sektion=0\u0026manpath=FreeBSD+7.2-RELEASE\u0026format=html",
									"TextMarkTextContent": "FreeBSD Manual Pages About tcpdump"
								}
							]
						}
					]
				},
				{
					"ID": "20220831152809-uggadpj",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20220831152809-uggadpj"
					},
					"Children": [
						{
							"ID": "20220831152809-geq543f",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220831152809-geq543f"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "a",
									"TextMarkAHref": "https://www.cnblogs.com/ggjucheng/archive/2012/01/14/2322659.html",
									"TextMarkTextContent": "Linux tcpdump命令详解"
								}
							]
						}
					]
				},
				{
					"ID": "20220831152809-dtfr7if",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "My4=",
						"Num": 3
					},
					"Properties": {
						"id": "20220831152809-dtfr7if"
					},
					"Children": [
						{
							"ID": "20220831152809-216o798",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220831152809-216o798"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "a",
									"TextMarkAHref": "http://team.jiunile.com/blog/2019/06/tcpdump.html",
									"TextMarkTextContent": "一份快速实用的 tcpdump 命令参考手册"
								}
							]
						}
					]
				},
				{
					"ID": "20220831152809-psi8wfn",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "NC4=",
						"Num": 4
					},
					"Properties": {
						"id": "20220831152809-psi8wfn"
					},
					"Children": [
						{
							"ID": "20220831152809-lfaeiih",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220831152809-lfaeiih"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "a",
									"TextMarkAHref": "https://fuckcloudnative.io/posts/tcpdump-examples/",
									"TextMarkTextContent": "超详细的网络抓包神器 tcpdump 使用指南"
								}
							]
						}
					]
				},
				{
					"ID": "20220831152809-wpw6zwf",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "NS4=",
						"Num": 5
					},
					"Properties": {
						"id": "20220831152809-wpw6zwf"
					},
					"Children": [
						{
							"ID": "20220831152809-crnanhs",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220831152809-crnanhs"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "a",
									"TextMarkAHref": "https://colobu.com/2019/07/16/a-tcpdump-tutorial-with-examples/",
									"TextMarkTextContent": "[译]tcpdump 示例教程"
								}
							]
						}
					]
				},
				{
					"ID": "20220831152809-4oqrpkl",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Ni4=",
						"Num": 6
					},
					"Properties": {
						"id": "20220831152809-4oqrpkl"
					},
					"Children": [
						{
							"ID": "20220831152809-kqfnynv",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220831152809-kqfnynv"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "a",
									"TextMarkAHref": "https://danielmiessler.com/study/tcpdump/",
									"TextMarkTextContent": "[英]tcpdump 示例教程"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220831152809-j9wdi67",
			"Type": "NodeThematicBreak",
			"Properties": {
				"id": "20220831152809-j9wdi67"
			}
		},
		{
			"ID": "20220901143244-hyx70t9",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220901143244-hyx70t9",
				"updated": "20220901143244"
			}
		}
	]
}