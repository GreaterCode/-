{
	"ID": "20221226102947-p0nq3uq",
	"Spec": "1",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20221226102947-p0nq3uq",
		"scroll": "{\u0026quot;startId\u0026quot;:\u0026quot;20221226102947-825ssnz\u0026quot;,\u0026quot;endId\u0026quot;:\u0026quot;20221226102947-9r7pbxg\u0026quot;,\u0026quot;scrollTop\u0026quot;:3825,\u0026quot;focusId\u0026quot;:\u0026quot;20221226102947-825ssnz\u0026quot;,\u0026quot;focusStart\u0026quot;:0,\u0026quot;focusEnd\u0026quot;:0}",
		"title": "Prometheus-09 promtool工具探索",
		"updated": "20230106172302"
	},
	"Children": [
		{
			"ID": "20221226102947-825ssnz",
			"Type": "NodeThematicBreak",
			"Properties": {
				"id": "20221226102947-825ssnz"
			}
		},
		{
			"ID": "20221226102947-pxi0s67",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20221226102947-pxi0s67"
			},
			"Children": [
				{
					"ID": "20221226102947-czcs4pd",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221226102947-czcs4pd"
					},
					"Children": [
						{
							"ID": "20221226102947-99gm30z",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221226102947-99gm30z"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "a",
									"TextMarkAHref": "https://www.cnblogs.com/zccoming/p/15605033.html",
									"TextMarkTextContent": "https://www.cnblogs.com/zccoming/p/15605033.html"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221226102947-zlpxuju",
			"Type": "NodeThematicBreak",
			"Properties": {
				"id": "20221226102947-zlpxuju"
			}
		},
		{
			"ID": "20221226102947-1b3v660",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221226102947-1b3v660"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Prometheus提供了一个非常有用的支持命令行工具promtool。这个小型的Golang二进制文件可用于快速执行几个故障排除操作，并且包含了许多有用的子命令。"
				}
			]
		},
		{
			"ID": "20221226102947-4d92iro",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20221226102947-4d92iro"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "1.检查"
				}
			]
		},
		{
			"ID": "20221226102947-4oi9hpv",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221226102947-4oi9hpv"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "属于这个类别的子命令为用户提供了检查和验证Prometheus服务器的几个配置方面和度量标准遵守从性的能力。"
				}
			]
		},
		{
			"ID": "20221226102947-0zhysat",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20221226102947-0zhysat"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "1.1检查配置"
				}
			]
		},
		{
			"ID": "20221226102947-9fam9cn",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221226102947-9fam9cn"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "promtool提供了几种类型的检查。其中最有价值的是检查Prometheus服务器的著配置文件。"
				}
			]
		},
		{
			"ID": "20221226102947-biw7l04",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221226102947-biw7l04"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "检查配置时，0表示成功，1表示失败。"
				}
			]
		},
		{
			"ID": "20221226102947-qndnmdu",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221226102947-qndnmdu"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "案例如下："
				}
			]
		},
		{
			"ID": "20221226102947-on56e8e",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221226102947-on56e8e"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "$ promtool check config /etc/prometheus/prometheus.ymlChecking /etc/prometheus/prometheus.yml\tSUCCESS: 1 rule files foundChecking /etc/prometheus/first_rules.yml\tSUCCESS: 1 rule rules found\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221226102947-e5g7og3",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20221226102947-e5g7og3"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "1.2规则检查"
				}
			]
		},
		{
			"ID": "20221226102947-fv98lk4",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221226102947-fv98lk4"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "check rules 分析并确定规则配置文件中的错误配置。它允许直接真对特定的规则文件，这允许您测试在主Prometheus配置中尚未引用的文件。这种能力对于规则文件的开发周期和在使用配置管理时验证上述文件中的自动更改非常方便。"
				}
			]
		},
		{
			"ID": "20221226102947-zfosvom",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221226102947-zfosvom"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "案例如下："
				}
			]
		},
		{
			"ID": "20221226102947-dasg1ai",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221226102947-dasg1ai"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "$ promtool check rules /rules/prometheus/first_rules.ymlChecking /etc/prometheus/first_rules.yml\tSUCCESS: 1 rule rules found\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221226102947-1lxf676",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20221226102947-1lxf676"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "1.3度量值检查"
				}
			]
		},
		{
			"ID": "20221226102947-sgi0kh4",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221226102947-sgi0kh4"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "check metrics 子命令验证传递给他的度量在一致性和正确性方面是否遵循Prometheus准则。"
				}
			]
		},
		{
			"ID": "20221226102947-97heek8",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221226102947-97heek8"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "$ curl -s http://prometheus:9090/metrics | promtool check metricsprometheus_tsdb_storage_blocks_bytes_total non-counter should not have \"_total\" suffix\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221226102947-b7350ds",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221226102947-b7350ds"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "可以看到，prometheus_tsdb_storage_blocks_bytes_total度量似乎有问题。让我们看看这个特殊的度量来排除错误："
				}
			]
		},
		{
			"ID": "20221226102947-l33peqd",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221226102947-l33peqd"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "$ curl -s http://prometheus:9090/metrics | grep prometheus_tsdb_storage_blocks_bytes_total# HELP prometheus_tsdb_storage_blocks_bytes_total The number of bytes that are currently used for jocal storage by all blocks.# TYPE prometheus_tsdb_storage_blocks_bytes_total guageprometheus_tsdb_storage_blocks_bytes_total 0\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221226102947-9chizxu",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20221226102947-9chizxu"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "2. 查询"
				}
			]
		},
		{
			"ID": "20221226102947-ok938ki",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221226102947-ok938ki"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "属于这个类别的子命令允许直接从命令行执行PromQL表达式。这些查询依赖于Prometheus公共HTTP API。下面的主题将演示如何使用它们。"
				}
			]
		},
		{
			"ID": "20221226102947-e0lbi7q",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20221226102947-e0lbi7q"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "2.1查询实例"
				}
			]
		},
		{
			"ID": "20221226102947-9o5ezhd",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221226102947-9o5ezhd"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "query instant 子命令允许根据当前时间通过命令行直接查询Prometheus服务器。要使其工作，必须提供一个Prometheus服务器URL作为参数，以及要执行的查询，就像这样。"
				}
			]
		},
		{
			"ID": "20221226102947-le57yez",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221226102947-le57yez"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "cHl0aG9u"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "$ promtool query instant 'http://prometheus:9090' 'up == 1' '''up{group=\"Retail\", instance=\"http://192.168.1.102:80\", job=\"blackbox-http\"} =\u003e 1 @[1637019176.876]up{group=\"Retail\", instance=\"https://baidu.com\", job=\"blackbox-http\"} =\u003e 1 @[1637019176.876]up{instance=\"192.168.1.121:8080\", job=\"docker\"} =\u003e 1 @[1637019176.876]up{instance=\"192.168.1.121:9090\", job=\"prometheus\"} =\u003e 1 @[1637019176.876]up{instance=\"192.168.1.121:9100\", job=\"node\"} =\u003e 1 @[1637019176.876]'''\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221226102947-eg4wk5e",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20221226102947-eg4wk5e"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "2.2 查询范围"
				}
			]
		},
		{
			"ID": "20221226102947-d11m796",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221226102947-d11m796"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "与前面的子命令类似，查询范围允许在指定的时间范围内显示结果。因此，我们必须提供开始和结束unix格式的时间戳，以及查询和Prometheus服务器端点。"
				}
			]
		},
		{
			"ID": "20221226102947-v7y3970",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221226102947-v7y3970"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "例如，我们将使用date命令来定义开始和结束时间戳，生成五分钟前的unix格式时间戳和现在的另一个时间戳。我们还可以使用--step标志指定查询的解析，在我们的示例中，它是一分钟。最后，我们防止PromQL表达式来执行，最后得到一个类似下面的指令："
				}
			]
		},
		{
			"ID": "20221226102947-01g28fv",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221226102947-01g28fv"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "$ promtool query range --start=$(date -d '5minutes ago' +'%s') --end=$(date -d 'now' +'%s') --step=1m 'http://prometheus:9090'\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221226102947-vg7872t",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20221226102947-vg7872t"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "2.3 query series"
				}
			]
		},
		{
			"ID": "20221226102947-cpwtlsy",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221226102947-cpwtlsy"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "使用query series可以搜索与一组度量名称和标签匹配的所有时间序列。以下是使用方法："
				}
			]
		},
		{
			"ID": "20221226102947-m5igunm",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221226102947-m5igunm"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "$ promtool query series 'http://prometheus:9090' --match='up' --match='go_info{job=\"prometheus\"}'{__name__=\"go_info\", instance=\"192.168.1.121:9090\", job=\"prometheus\", version=\"go1.17.3\"}{__name__=\"go_info\", instance=\"zhang.com:9090\", job=\"prometheus\", version=\"go1.17.3\"}{__name__=\"up\", group=\"Retail\", instance=\"http://192.168.1.102:80\", job=\"blackbox-http\"}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221226102947-ho25fa0",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20221226102947-ho25fa0"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "2.4query labels"
				}
			]
		},
		{
			"ID": "20221226102947-2bd6c5u",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221226102947-2bd6c5u"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "使用查询标签，您可以跨所有可用的指标搜索特定的标签，并返回附加到它的所有可能的值；例如："
				}
			]
		},
		{
			"ID": "20221226102947-rd3rnl1",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221226102947-rd3rnl1"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "$ promtool query labels 'http://prometheus:9090' 'mountpoint'//boot/run/run/user/0\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221226102947-i49x3rq",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20221226102947-i49x3rq"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "3. Debug"
				}
			]
		},
		{
			"ID": "20221226102947-b7qh8ob",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221226102947-b7qh8ob"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "属于这个类别的子命令允许从运行的Prometheus服务器提取调试数据，以便对其进行分析。接下来我们将演示如何使用它们。"
				}
			]
		},
		{
			"ID": "20221226102947-qk3uf4g",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20221226102947-qk3uf4g"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "3.1 debug pprof"
				}
			]
		},
		{
			"ID": "20221226102947-dsievw9",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221226102947-dsievw9"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "$ promtool debug pprof 'http://prometheus:9090'collecting: http://192.168.1.121:9090/debug/pprof/profile?seconds=30collecting: http://192.168.1.121:9090/debug/pprof/blockcollecting: http://192.168.1.121:9090/debug/pprof/goroutinecollecting: http://192.168.1.121:9090/debug/pprof/heapcollecting: http://192.168.1.121:9090/debug/pprof/mutexcollecting: http://192.168.1.121:9090/debug/pprof/threadcreatecollecting: http://192.168.1.121:9090/debug/pprof/trace?seconds=30Compiling debug information complete, all files written in \"debug.tar.gz\".\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221226102947-8xaqdcj",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221226102947-8xaqdcj"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "当我们提取前一个命令生成的存档文件时，我们可以看到几个文件："
				}
			]
		},
		{
			"ID": "20221226102947-u69kjb4",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221226102947-u69kjb4"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "$ tar xzvf debug.tar.gzcpu.pbtar: cpu.pb: implausibly old time stamp 1970-01-01 08:00:00block.pbtar: block.pb: implausibly old time stamp 1970-01-01 08:00:00goroutine.pbtar: goroutine.pb: implausibly old time stamp 1970-01-01 08:00:00heap.pbtar: heap.pb: implausibly old time stamp 1970-01-01 08:00:00mutex.pbtar: mutex.pb: implausibly old time stamp 1970-01-01 08:00:00threadcreate.pbtar: threadcreate.pb: implausibly old time stamp 1970-01-01 08:00:00trace.pbtar: trace.pb: implausibly old time stamp 1970-01-01 08:00:00\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221226102947-6bxazcs",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221226102947-6bxazcs"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "使用pprof,我们可以生成转储的镜像，在下一个代码片段中我们可以管擦到这一点。"
				}
			]
		},
		{
			"ID": "20221226102947-brt07o9",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221226102947-brt07o9"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "$ pprof -svg heap.pb \u003e /vagrant/cache/heap.svg\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221226102947-vbg7oqd",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221226102947-vbg7oqd"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在主机上，在./cache/路径（相对于存储库根）下的代码存储库中，您现在应该有一个可伸缩的向量图形文件heap。可由浏览器打开以供查看。下main的截图显示了你可能会看到什么时，看看由上述例子产生的文件："
				}
			]
		},
		{
			"ID": "20221226102947-hhqt0jt",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221226102947-hhqt0jt"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://img2020.cnblogs.com/blog/1727351/202111/1727351-20211116080255072-247400770.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20221226102947-cmmn896",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20221226102947-cmmn896"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "3.2 debug metrics"
				}
			]
		},
		{
			"ID": "20221226102947-hpakwdc",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221226102947-hpakwdc"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "此子命令下载提供的Prometheus示例在压缩归档中公开的度量。调试指标并不常用，因为/metrics Prometheus端点对于任何能够运行此命令的人都是可用的；它的存在是为了在需要时更容易地向外部援助（例如Prometheus的维护者）提供Prometheus实例的当前状态。这个子命令可以使用如下："
				}
			]
		},
		{
			"ID": "20221226102947-dbwhrd6",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221226102947-dbwhrd6"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "$ promtool debug metrics 'http://prometheus:9090'collecting: http://192.168.1.121:9090/metricsCompiling debug information complete, all files written in \"debug.tar.gz\".tar xzvf debug.tar.gzmetrics.txttail -n 5 metrics.txt# HELP promhttp_metric_handler_requests_total Total number of scrapes by HTTP status code.# TYPE promhttp_metric_handler_requests_total counterpromhttp_metric_handler_requests_total{code=\"200\"} 3786promhttp_metric_handler_requests_total{code=\"500\"} 0promhttp_metric_handler_requests_total{code=\"503\"} 0\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221226102947-37rvsbc",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20221226102947-37rvsbc"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "3.3 debug all"
				}
			]
		},
		{
			"ID": "20221226102947-rb8wpad",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221226102947-rb8wpad"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "该选项将之前的调试子命令聚合为一条指令，如下例所示："
				}
			]
		},
		{
			"ID": "20221226102947-wh6qddc",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221226102947-wh6qddc"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "$ promtool debug all 'http://prometheus:9090'collecting: http://192.168.1.121:9090/debug/pprof/mutexcollecting: http://192.168.1.121:9090/debug/pprof/threadcreatecollecting: http://192.168.1.121:9090/debug/pprof/profile?seconds=30collecting: http://192.168.1.121:9090/debug/pprof/blockcollecting: http://192.168.1.121:9090/debug/pprof/goroutinecollecting: http://192.168.1.121:9090/debug/pprof/heapcollecting: http://192.168.1.121:9090/debug/pprof/trace?seconds=30collecting: http://192.168.1.121:9090/metricsCompiling debug information complete, all files written in \"debug.tar.gz\".\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221226102947-kzgvnfp",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20221226102947-kzgvnfp"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "4.Endpoints"
				}
			]
		},
		{
			"ID": "20221226102947-gx5lfbr",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221226102947-gx5lfbr"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "检查Prometheus是否启动并运行通常非常简单，因为它遵循了大多数云本地应用程序用于服务健康状况的惯例：一个端点检查服务是否健康，另一个端点检查服务是否准备好开始处理传入的请求。对于哪些过去使用或曾经使用过Kubernetes的人来说，这些可能听起来很熟悉；实际上，Kubernetes还使用这些约定来评估是否需要重新启动容器（例如，如果应用程序思索并停止响应健康状况探测），以及是否可以开始向容器发送流量。"
				}
			]
		},
		{
			"ID": "20221226102947-g2jgm74",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221226102947-g2jgm74"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在Prometheus中，有/-/healthy 和/-ready 端点。"
				}
			]
		},
		{
			"ID": "20221226102947-qqtbg25",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221226102947-qqtbg25"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "您可以在测试环境中运行以下命令并检查它们的输出以及它们的HTTP状态码，从而亲自尝试这些端点："
				}
			]
		},
		{
			"ID": "20221226102947-su3cn99",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221226102947-su3cn99"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "$ curl -w \"%{http_code}\\n\" http://localhost:9090/-/healthyPrometheus is Healthy.200$ curl -w \"%{http_code}/n\" http://localhost:9090/-/readyPrometheus is Ready.200\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221226102947-5g29uxo",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221226102947-5g29uxo"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "此外，Prometheus公开了一个/debug/pprof/ endpoint,promtool debug pprof 命令使用了这个端点，如前一节所示。这个端点还公开了一个可导航的web UI，可以在其中查询pprof调试信息，比如当前goroutines及其堆栈跟踪、堆分配、内存分配等；"
				}
			]
		},
		{
			"ID": "20221226102947-b5yhzsk",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20221226102947-b5yhzsk"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "5.Logs"
				}
			]
		},
		{
			"ID": "20221226102947-k8ptmfu",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221226102947-k8ptmfu"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "通过 --log.level选项来设置日志级别。"
				}
			]
		},
		{
			"ID": "20221226102947-kj3a39l",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221226102947-kj3a39l"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "查看配置日志级别："
				}
			]
		},
		{
			"ID": "20221226102947-mqw05ib",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221226102947-mqw05ib"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "$ sudo systemctl cat prometheus.serviceExecStart=/usr/bin/prometheus \\        --log.level=debug        --config.file=/etc/prometheus/prometheus.yml \\        --storage.tsdb.path=/var/lib/prometheus/data \\        --web.console.templates=/usr/share/prometheus/consoles \\        --web.console.libraries=/usr/share/prometheus/console_libraries \\        --log.level=debug\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221226102947-qpwymmd",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221226102947-qpwymmd"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "sudo service node_exporter stopsudo journalctl -fu prometheus | grep dubug\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221226102947-9r7pbxg",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221226102947-9r7pbxg"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://img2020.cnblogs.com/blog/1727351/202111/1727351-20211116083246890-99304182.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		}
	]
}