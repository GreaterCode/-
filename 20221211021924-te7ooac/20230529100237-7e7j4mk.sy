{
	"ID": "20230529100237-7e7j4mk",
	"Spec": "1",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20230529100237-7e7j4mk",
		"title": "深度分析容器运行状态可视化工具 cAdvisor 工作原理",
		"updated": "20230529100237"
	},
	"Children": [
		{
			"ID": "20230529100237-ejavh0e",
			"Type": "NodeThematicBreak",
			"Properties": {
				"id": "20230529100237-ejavh0e",
				"updated": "20230529100237"
			}
		},
		{
			"ID": "20230529100237-p2xoje2",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20230529100237-p2xoje2",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"ID": "20230529100237-i0apcfs",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230529100237-i0apcfs",
						"updated": "20230529100237"
					},
					"Children": [
						{
							"ID": "20230529100237-i3dmnlu",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230529100237-i3dmnlu",
								"updated": "20230529100237"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "a",
									"TextMarkAHref": "https://mp.weixin.qq.com/s/RqqW3dag6-Bn8wRteAXy7g",
									"TextMarkTextContent": "https://mp.weixin.qq.com/s/RqqW3dag6-Bn8wRteAXy7g - 微信公众平台"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230529100237-scznex8",
			"Type": "NodeThematicBreak",
			"Properties": {
				"id": "20230529100237-scznex8",
				"updated": "20230529100237"
			}
		},
		{
			"ID": "20230529100237-99pv6i7",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230529100237-99pv6i7",
				"updated": "20230529100246"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​​"
				}
			]
		},
		{
			"ID": "20230529100237-wf9lbha",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230529100237-wf9lbha",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "简介"
				}
			]
		},
		{
			"ID": "20230529100237-1ooe4vr",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230529100237-1ooe4vr",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "cAdvisor 是 Google 开源的一款用于展示和分析容器运行状态的可视化工具。通过在主机上运行 CAdvisor 用户可以轻松的获取到当前主机上容器的运行统计信息，并以图表的形式向用户展示。"
				}
			]
		},
		{
			"ID": "20230529100237-6xpvkpd",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230529100237-6xpvkpd",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "cAdvisor 可以对节点机器上的资源及容器进行实时监控和性能数据采集，包括 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "CPU 使用情况、内存使用情况、网络吞吐量及文件系统使用情况"
				},
				{
					"Type": "NodeText",
					"Data": "​。"
				}
			]
		},
		{
			"ID": "20230529100237-utp9k3o",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230529100237-utp9k3o",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "实现原理"
				}
			]
		},
		{
			"ID": "20230529100237-lyneg1k",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230529100237-lyneg1k",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "cAdvisor 的数据采集分为两个部分 machineInfo 和 containerInfo。"
				}
			]
		},
		{
			"ID": "20230529100237-aqumo0e",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230529100237-aqumo0e",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "图片"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/640-20230529100237-d12i3bt.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20230529100237-c1u4k2r",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230529100237-c1u4k2r",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "启动参数"
				}
			]
		},
		{
			"ID": "20230529100237-x5p5iti",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20230529100237-x5p5iti",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "cAdvisor 服务相关"
				}
			]
		},
		{
			"ID": "20230529100237-tt1hfi5",
			"Type": "NodeTable",
			"TableAligns": [
				0,
				0,
				0,
				0
			],
			"Properties": {
				"colgroup": "|||",
				"id": "20230529100237-tt1hfi5",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeTableHead",
					"Data": "thead",
					"Children": [
						{
							"Type": "NodeTableRow",
							"Data": "tr",
							"Children": [
								{
									"Type": "NodeTableCell",
									"Data": "th",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "参数"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"Data": "th",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "类型"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"Data": "th",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "说明"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"Data": "th",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "默认值"
										}
									]
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "listen_ip"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "string"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "要监听的 IP，默认监听所有 IP"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeBr",
									"Data": "br"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "port"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "int"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "要监听的端口"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "8080"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "max_procs"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "int"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "可同时使用的 CPU 的最大数量。默认值小于 1（核心数）。"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "0"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "version"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "bool"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "打印 cAdvisor 版本然后退出"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "false"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "http_auth_file"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "string"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "web UI 的 HTTP 身份验证文件"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeBr",
									"Data": "br"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "http_auth_realm"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "string"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "web UI 的 HTTP 身份验证领域"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "localhost"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "http_digest_file"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "string"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "web UI 的 HTTP 摘要文件"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeBr",
									"Data": "br"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "http_digest_realm"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "string"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "web UI 的 HTTP 摘要文件"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "localhost"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230529100237-cx5p6ec",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20230529100237-cx5p6ec",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "指标采集相关"
				}
			]
		},
		{
			"ID": "20230529100237-eehbxrk",
			"Type": "NodeTable",
			"TableAligns": [
				0,
				0,
				0,
				0
			],
			"Properties": {
				"colgroup": "||width: 532px;|",
				"id": "20230529100237-eehbxrk",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeTableHead",
					"Data": "thead",
					"Children": [
						{
							"Type": "NodeTableRow",
							"Data": "tr",
							"Children": [
								{
									"Type": "NodeTableCell",
									"Data": "th",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "参数"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"Data": "th",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "类型"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"Data": "th",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "说明"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"Data": "th",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "默认值"
										}
									]
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "prometheus_endpoint"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "string"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "暴露给 Prometheus 的指标采集站点"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "/metrics"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "housekeeping_interval"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Duration"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "容器 housekeeping 的间隔"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "1s"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "max_housekeeping_interval"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Duration"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "容器 housekeeping 的最大间隔"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "60s"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "allow_dynamic_housekeeping"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "bool"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "是否允许动态 housekeeping 间隔。动态管理 housekeeping 间隔可以让 cAdvisor 根据容器的活动性调整它收集统计信息的频率。关闭此选项可提供可预测的采集周期间隔，但会增加 cAdvisor 的资源使用。"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "true"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "global_housekeeping_interval"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Duration"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "cAdvisor 有两个 housekeeping 间隔设定：全局的和每容器的。全局 housekeeping 间隔是 cAdvisor 进行的一次单独的采集操作，通常在检测到新的容器时执行一次。当前，cAdvisor 通过内核事件发现新的容器，因此这种全局 housekeeping 间隔主要用于处理有任何事件遗漏的情况。"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "1min"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "update_machine_info_interval"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Duration"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "机器信息更新间隔"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "5min"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "enable_load_reader"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "bool"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "是否启用 cpu load reader"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "false"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "log_cadvisor_usage"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "bool"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "是否打印 cAdvisor 容器的资源使用情况"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "false"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "event_storage_age_limit"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "string"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "各类事件的最大保存时间。Value 是一个逗号分隔的键值列表，其中键是事件类型（例如：creation、oom）或“default”，值是持续时间。默认值应用于所有未指定的事件类型"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "default=24h"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "event_storage_event_limit"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "string"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "各类事件的最大保存事件个数。Value 是一个逗号分隔的键值列表，其中键是事件类型（例如：creation、oom）或“default”，值是持续时间。默认值应用于所有未指定的事件类型"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "default=100000"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "application_metrics_count_limit"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "int"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "要存储的应用程序指标的最大数量（每个容器）"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "100"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "profiling"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "bool"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "开启 web 界面分析。host:port/debug/pprof/"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeBr",
									"Data": "br"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "collector_cert"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "string"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "指标采集器证书，向站点公开以进行基于证书的身份验证。"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeBr",
									"Data": "br"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "collector_key"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "string"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "指标采集器证书密钥"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeBr",
									"Data": "br"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "store_container_labels"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "bool"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "将容器标签和环境变量转换为每个容器的 prometheus 指标的标签。如果标志设置为 false，则仅导出容器名称、第一别名和镜像名称"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "true"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "whitelisted_container_labels"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "string"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "以逗号分隔的容器标签列表，用于将每个容器转换为 prometheus 指标的标签。storecontainer_labels 必须设置为 false 才能生效。"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeBr",
									"Data": "br"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "url_base_prefix"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "string"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "URL 前缀路径，将附加到所有路径以支持某些反向代理"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeBr",
									"Data": "br"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "raw_cgroup_prefix_whitelist"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "string"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "即使指定了-docker_only，也需要收集的 cgroup 路径前缀列表（用逗号分隔）"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeBr",
									"Data": "br"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "perf_events_config"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "string"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "包含要测量的 perf 事件配置的 JSON 文件的路径。空值表示禁用 perf 事件测量。"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeBr",
									"Data": "br"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "disable_metrics"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "[]string"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "逗号分隔的要禁用的指标集合"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeBr",
									"Data": "br"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "v"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "int"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "日志详细程度"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "2"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "docker_only"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "bool"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "除了 root cgroup 统计信息外，仅报告 docker 容器"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "false"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "disable_root_cgroup_stats"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "bool"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "禁用 root cgroup 状态采集"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "false"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "container_hints"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "string"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "通过一个 JSON 文件向 cAdvisor 传递额外的容器配置信息，JSON 文件的格式参考定义​"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "sup",
									"TextMarkTextContent": "[1]"
								},
								{
									"Type": "NodeText",
									"Data": "​。当前该配置仅用于原生容器驱动。"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "/etc/cadvisor/container_hints.json"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "machine_id_file"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "string"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "以逗号分隔的文件列表，用于检查机器 ID。使用第一个存在的文件。"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "/etc/machine-id,/var/lib/dbus/machine-id"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "boot_id_file"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "string"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "以逗号分隔的文件列表，用于检查 boot-id。使用第一个存在的文件。"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "/proc/sys/kernel/random/boot_id"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230529100237-rge2uqi",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20230529100237-rge2uqi",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "CRI 相关"
				}
			]
		},
		{
			"ID": "20230529100237-o6dd5pb",
			"Type": "NodeTable",
			"TableAligns": [
				0,
				0,
				0,
				0
			],
			"Properties": {
				"colgroup": "|||",
				"id": "20230529100237-o6dd5pb",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeTableHead",
					"Data": "thead",
					"Children": [
						{
							"Type": "NodeTableRow",
							"Data": "tr",
							"Children": [
								{
									"Type": "NodeTableCell",
									"Data": "th",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "参数"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"Data": "th",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "类型"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"Data": "th",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "说明"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"Data": "th",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "默认值"
										}
									]
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "docker"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "string"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "docker endpoint"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "a",
									"TextMarkAHref": "unix:///var/run/docker.sock",
									"TextMarkTextContent": "unix:///var/run/docker.sock"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "docker-tls"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "bool"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "使用 TLS 来访问 Docker"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "false"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "docker-tls-cert"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "string"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "客户端证书路径"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "cert.pem"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "docker-tls-key"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "string"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "私钥路径"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "key.pem"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "docker-tls-ca"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "string"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "可信任 CA 路径"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "ca.pem"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "docker_env_metadata_whitelist"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "string"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "要为 docker 容器收集的环境变量键列表（以逗号分隔，前缀匹配）"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeBr",
									"Data": "br"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "docker_root"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "string"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "已弃用"
								},
								{
									"Type": "NodeText",
									"Data": "​: Docker 根目录，用于获取 Docker 信息（默认 : /var/lib/docker）"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "/var/lib/docker"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "containerd"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "string"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "containerd endpoint"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "/run/containerd/containerd.sock"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "containerd-namespace"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "string"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "containerd namespace"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "k8s.io"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "containerd_env_metadata_whitelist"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "string"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "要为 containerd 容器收集的环境变量键列表（以逗号分隔，前缀匹配）"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeBr",
									"Data": "br"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "mesos_agent"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "string"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Mesos 代理地址"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "127.0.0.1:5051"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "mesos_agent_timeout"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Duration"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Mesos 代理超时时间"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "10s"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230529100237-z944dfz",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20230529100237-z944dfz",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "存储相关"
				}
			]
		},
		{
			"ID": "20230529100237-wabwm7r",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230529100237-wabwm7r",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "|storage_driver|string| 要使用的存储“驱动程序”。数据总是很快缓存在内存中，该参数控制了数据被推送到本地缓存之外的位置。空表示没有，多个用逗号隔开。可选值为："
				}
			]
		},
		{
			"ID": "20230529100237-7mmgigi",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20230529100237-7mmgigi",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"ID": "20230529100237-l6dmava",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230529100237-l6dmava",
						"updated": "20230529100237"
					},
					"Children": [
						{
							"ID": "20230529100237-4o4uo6v",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230529100237-4o4uo6v",
								"updated": "20230529100237"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "BigQuery"
								}
							]
						}
					]
				},
				{
					"ID": "20230529100237-u4uppsd",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230529100237-u4uppsd",
						"updated": "20230529100237"
					},
					"Children": [
						{
							"ID": "20230529100237-c0jlc3o",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230529100237-c0jlc3o",
								"updated": "20230529100237"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "ElasticSearch"
								}
							]
						}
					]
				},
				{
					"ID": "20230529100237-zevgvvl",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230529100237-zevgvvl",
						"updated": "20230529100237"
					},
					"Children": [
						{
							"ID": "20230529100237-lm2l1qo",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230529100237-lm2l1qo",
								"updated": "20230529100237"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "InfluxDB"
								}
							]
						}
					]
				},
				{
					"ID": "20230529100237-ss0sxa3",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230529100237-ss0sxa3",
						"updated": "20230529100237"
					},
					"Children": [
						{
							"ID": "20230529100237-ogm66tw",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230529100237-ogm66tw",
								"updated": "20230529100237"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Kafka"
								}
							]
						}
					]
				},
				{
					"ID": "20230529100237-roqmwmt",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230529100237-roqmwmt",
						"updated": "20230529100237"
					},
					"Children": [
						{
							"ID": "20230529100237-mvme630",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230529100237-mvme630",
								"updated": "20230529100237"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Redis"
								}
							]
						}
					]
				},
				{
					"ID": "20230529100237-9ijf9rx",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230529100237-9ijf9rx",
						"updated": "20230529100237"
					},
					"Children": [
						{
							"ID": "20230529100237-t5jxqng",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230529100237-t5jxqng",
								"updated": "20230529100237"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Statsd"
								}
							]
						}
					]
				},
				{
					"ID": "20230529100237-hk0x27a",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230529100237-hk0x27a",
						"updated": "20230529100237"
					},
					"Children": [
						{
							"ID": "20230529100237-6jdgc5a",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230529100237-6jdgc5a",
								"updated": "20230529100237"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "stdout"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230529100237-12mr8yo",
			"Type": "NodeTable",
			"TableAligns": [
				0,
				0,
				0,
				0
			],
			"Properties": {
				"colgroup": "|||",
				"id": "20230529100237-12mr8yo",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeTableHead",
					"Data": "thead",
					"Children": [
						{
							"Type": "NodeTableRow",
							"Data": "tr",
							"Children": [
								{
									"Type": "NodeTableCell",
									"Data": "th",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "参数"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"Data": "th",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "类型"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"Data": "th",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "说明"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"Data": "th",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "默认值"
										}
									]
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "storage_duration"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Duration"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "数据在内存中保存多长时间（默认：2 分钟）"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "2min"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "storage_driver_user"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "string"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "数据库用户名"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "root"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "storage_driver_password"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "string"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "数据库密码"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "root"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "storage_driver_host"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "string"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "数据库地址"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "localhost:8086"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "storage_driver_db"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "string"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "数据库名称"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "cadvisor"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "storage_driver_table"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "string"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "数据库表名"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "stats"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "storage_driver_secure"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "bool"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "是否使用安全连接数据库"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "false"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "storage_driver_buffer_duration"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Duration"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "存储驱动程序中的写入将在此期间进行缓存，并作为单个事务提交给非内存后端"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "60s"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "bq_id"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "string"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "BigQuery 客户端 ID"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeBr",
									"Data": "br"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "bq_secret"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "string"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "BigQuery 客户端秘钥"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "notasecret"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "bq_project_id"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "string"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "BigQuery 客户端 project ID"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeBr",
									"Data": "br"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "bq_account"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "string"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "BigQuery 客户端服务账户邮箱"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeBr",
									"Data": "br"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "bq_credentials_file"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "string"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "BigQuery 客户端证书"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeBr",
									"Data": "br"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "storage_driver_es_host"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "string"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "ElasticSearch 地址 host:por"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "http://localhost:9200"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "storage_driver_es_index"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "string"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "ElasticSearch 索引名称"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "cadvisor"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "storage_driver_es_type"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "string"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "ElasticSearch 类型名称"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "stats"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "storage_driver_es_enable_sniffer"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "bool"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "默认情况下，ElasticSearch 使用嗅探进程自动查找集群的所有节点"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "false"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "storage_driver_kafka_broker_list"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "string"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "kafka broker(s) csv"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "localhost:9092"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "storage_driver_kafka_topic"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "string"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "kafka topic"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "stats"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "storage_driver_kafka_ssl_cert"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "string"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "用于 TLS 客户端身份验证的证书文件（可选）"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeBr",
									"Data": "br"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "storage_driver_kafka_ssl_key"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "string"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "用于 TLS 客户端身份验证的密钥文件（可选）"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeBr",
									"Data": "br"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "storage_driver_kafka_ssl_ca"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "string"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "用于 TLS 客户端身份验证的证书颁发机构文件（可选）"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeBr",
									"Data": "br"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "storage_driver_kafka_ssl_verify"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "bool"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "是否验证 ssl 证书"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "true"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "storage_driver_influxdb_retention_policy"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "string"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "保留策略"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeBr",
									"Data": "br"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230529100237-xxcqdqw",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230529100237-xxcqdqw",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "指标"
				}
			]
		},
		{
			"ID": "20230529100237-y16oapw",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20230529100237-y16oapw",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Go 运行时指标"
				}
			]
		},
		{
			"ID": "20230529100237-7f2usza",
			"Type": "NodeTable",
			"TableAligns": [
				0,
				0
			],
			"Properties": {
				"colgroup": "|",
				"id": "20230529100237-7f2usza",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeTableHead",
					"Data": "thead",
					"Children": [
						{
							"Type": "NodeTableRow",
							"Data": "tr",
							"Children": [
								{
									"Type": "NodeTableCell",
									"Data": "th",
									"Children": [
										{
											"Type": "NodeTextMark",
											"TextMarkType": "strong",
											"TextMarkTextContent": "指标"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"Data": "th",
									"Children": [
										{
											"Type": "NodeTextMark",
											"TextMarkType": "strong",
											"TextMarkTextContent": "含义"
										}
									]
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "go_gc_duration_seconds"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "持续时间秒"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "go_gc_duration_seconds_sum"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "gc-持续时间-秒数-总和"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "go_memstats_alloc_bytes"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Go 内存统计分配字节"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "go_memstats_alloc_bytes_total"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Go 内存统计分配字节总数"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "go_memstats_buck_hash_sys_bytes"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "用于剖析桶散列表的堆空间字节"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "go_memstats_frees_total"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "内存释放统计"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "go_memstats_gc_cpu_fraction"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "垃圾回收占用服务 CPU 工作的时间总和"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "go_memstats_gc_sys_bytes"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "圾回收标记元信息使用的内存字节"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "go_memstats_heap_alloc_bytes"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "服务分配的堆内存字节数"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "go_memstats_heap_idle_bytes"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "申请但是未分配的堆内存或者回收了的堆内存（空闲）字节数"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "go_memstats_heap_inuse_bytes"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "正在使用的堆内存字节数"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "go_memstats_heap_objects"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "堆内存块申请的量"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "go_memstats_heap_released_bytes"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "返回给 OS 的堆内存"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "go_memstats_heap_sys_bytes"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "系统分配的作为运行栈的内存"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "go_memstats_last_gc_time_seconds"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "持续时间秒"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "go_memstats_mspan_sys_bytes"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "系统为测试用的结构体分配的字节数"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "go_gc_duration_seconds"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "垃圾回收器最后一次执行时间"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "go_memstats_lookups_total"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "被 runtime 监视的指针数"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "go_memstats_mallocs_total"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "服务 malloc 的次数"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "go_memstats_mcache_inuse_bytes"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "mcache 结构体申请的字节数 (不会被视为垃圾回收)"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "go_memstats_mcache_inuse_bytes"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "mcache 结构体申请的字节数 (不会被视为垃圾回收)"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "go_memstats_mcache_sys_bytes"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "操作系统申请的堆空间用于 mcache 的字节数"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "go_memstats_mspan_inuse_bytes"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "用于测试用的结构体使用的字节数"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "go_memstats_next_gc_bytes"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "垃圾回收器检视的内存大小"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "go_memstats_other_sys_bytes"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "golang 系统架构占用的额外空间"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "go_memstats_stack_inuse_bytes"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "正在使用的栈字节数"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "go_memstats_stack_sys_bytes"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "系统分配的作为运行栈的内存"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "go_memstats_sys_bytes"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "服务现在系统使用的内"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "go_threads"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "线程"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "go_goroutines"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "协程数量"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "go_info"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "go 编译器版本"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230529100237-pi9evxr",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20230529100237-pi9evxr",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "进程指标"
				}
			]
		},
		{
			"ID": "20230529100237-9rev0yf",
			"Type": "NodeTable",
			"TableAligns": [
				0,
				0
			],
			"Properties": {
				"colgroup": "|",
				"id": "20230529100237-9rev0yf",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeTableHead",
					"Data": "thead",
					"Children": [
						{
							"Type": "NodeTableRow",
							"Data": "tr",
							"Children": [
								{
									"Type": "NodeTableCell",
									"Data": "th",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "指标"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"Data": "th",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "含义"
										}
									]
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "process_cpu_seconds_total"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "进程用户和系统 CPU 总时间（以秒为单位）。"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "process_max_fds"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "进程打开文件描述符的最大数量。"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "process_open_fds"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "进程打开文件描述符的数量。"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "process_resident_memory_bytes"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "进程驻留内存大小（以字节为单位）。"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "process_start_time_seconds"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "进程的开始时间，以秒为单位（时间戳）。"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "process_virtual_memory_bytes"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "进程以字节为单位的虚拟内存大小。"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "process_virtual_memory_max_bytes"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "可用的最大虚拟内存量（以字节为单位）。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230529100237-yk1s4d1",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20230529100237-yk1s4d1",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "机器指标"
				}
			]
		},
		{
			"ID": "20230529100237-za1ackb",
			"Type": "NodeTable",
			"TableAligns": [
				0,
				0,
				0
			],
			"Properties": {
				"colgroup": "||",
				"id": "20230529100237-za1ackb",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeTableHead",
					"Data": "thead",
					"Children": [
						{
							"Type": "NodeTableRow",
							"Data": "tr",
							"Children": [
								{
									"Type": "NodeTableCell",
									"Data": "th",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "指标"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"Data": "th",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "类型"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"Data": "th",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "含义"
										}
									]
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "machine_cpu_physical_cores"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Gauge"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "物理 CPU 核数"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "machine_cpu_cores"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Gauge"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "逻辑 CPU 核数"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "machine_cpu_sockets"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Gauge"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "CPU 插槽数"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "machine_memory_bytes"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Gauge"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "机器上安装的内存字节数"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "machine_dimm_count"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Gauge"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "由 dimm 类型标记的 RAM DIMM（所有类型的内存模块）值，信息从内核 3.6 中引入的 sysfs edac per-DIMM API (/sys/devices/system/edac/mc/) 检索"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "machine_dimm_capacity_bytes"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Gauge"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "由 dimm 类型标记的总 RAM DIMM 容量（所有类型的内存模块）值，信息从内核 3.6 中引入的 sysfs edac per-DIMM API (/sys/devices/system/edac/mc/) 检索"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "machine_nvm_capacity"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Gauge"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "NVM 模式标记的 NVM 容量值（内存模式或应用程序直接模式）"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "machine_nvm_avg_power_budget_watts"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Gauge"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "NVM 功率预算"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "machine_cpu_cache_capacity_bytes"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Gauge"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "分配给 NUMA 节点和 CPU 内核的缓存大小（以字节为单位）"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "machine_thread_siblings_count"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Gauge"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "同级 CPU 线程数"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "machine_node_memory_capacity_bytes"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Gauge"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "分配给 NUMA 节点的内存量"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "machine_node_hugepages_count"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Gauge"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "分配给 NUMA 节点的大页数"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230529100237-idtiv3y",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20230529100237-idtiv3y",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "容器指标"
				}
			]
		},
		{
			"ID": "20230529100237-peyg3nn",
			"Type": "NodeHeading",
			"HeadingLevel": 5,
			"Properties": {
				"id": "20230529100237-peyg3nn",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "容器指标分类"
				}
			]
		},
		{
			"ID": "20230529100237-3w66dsg",
			"Type": "NodeTable",
			"TableAligns": [
				0,
				0
			],
			"Properties": {
				"colgroup": "|",
				"id": "20230529100237-3w66dsg",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeTableHead",
					"Data": "thead",
					"Children": [
						{
							"Type": "NodeTableRow",
							"Data": "tr",
							"Children": [
								{
									"Type": "NodeTableCell",
									"Data": "th",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "指标"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"Data": "th",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "默认禁用"
										}
									]
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "sched"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "是"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "memory_numa"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "是"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "tcp"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "是"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "advtcp"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "是"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "udp"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "是"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "app"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "是"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "process"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "是"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "hugetlb"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "是"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "referenced_memory"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "是"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "cpu_topology"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "是"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "resctrl"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "是"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "cpuset"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "是"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "accelerator"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "否"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "percpu"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "否"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "network"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "否"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "cpuLoad"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "否"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "diskIO"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "否"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "disk"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "否"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "perf_event"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "否"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "cpu"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "否"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "memory"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "否"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "oom_event"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "否"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230529100237-zb4drnz",
			"Type": "NodeHeading",
			"HeadingLevel": 5,
			"Properties": {
				"id": "20230529100237-zb4drnz",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "指标详情"
				}
			]
		},
		{
			"ID": "20230529100237-nbhsbv0",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230529100237-nbhsbv0",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "详细指标请参考："
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong a",
					"TextMarkAHref": "https://support.huaweicloud.com/devg-cci/cci",
					"TextMarkTextContent": "https://support.huaweicloud.com/devg-cci/cci"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "_05_1003.html#cci_05_1003__table20182130676"
				}
			]
		},
		{
			"ID": "20230529100237-7e8jyao",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230529100237-7e8jyao",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "核心对象"
				}
			]
		},
		{
			"ID": "20230529100237-wrcr8vl",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230529100237-wrcr8vl",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "主流程管理"
				}
			]
		},
		{
			"ID": "20230529100237-1jwis1s",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20230529100237-1jwis1s",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Manager"
				}
			]
		},
		{
			"ID": "20230529100237-ts9y5g1",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230529100237-ts9y5g1",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "负责 cAdvisor 主流程控制。"
				}
			]
		},
		{
			"ID": "20230529100237-ghbrwy3",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230529100237-ghbrwy3",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "type Manager interface {\n  // 启动 cAdvisor Container Manager\n    Start() error\n    // 停止 cAdvisor Container Manager\n    Stop() error\n    // 获取指定容器的信息\n    GetContainerInfo(containerName string, query *info.ContainerInfoRequest) (*info.ContainerInfo, error)\n    // 获取容器的V2信息。\n  // 该方法会尽量递归子容器，在部分失败的情况下，可能会返回部分结果和错误。\n    GetContainerInfoV2(containerName string, options v2.RequestOptions) (map[string]v2.ContainerInfo, error)\n    // 获取指定容器的所有子容器的信息（包含其自身信息）\n    SubcontainersInfo(containerName string, query *info.ContainerInfoRequest) ([]*info.ContainerInfo, error)\n    // 获取所有的 Docker 容器信息，该方法会返回一个以container name为 key 的 map 集合\n    AllDockerContainers(query *info.ContainerInfoRequest) (map[string]info.ContainerInfo, error)\n    // 获取指定的 Docker 容器信息。指定的名称位于Docker命名空间中。\n    DockerContainer(dockerName string, query *info.ContainerInfoRequest) (info.ContainerInfo, error)\n    // 获取指定容器的 spec 信息\n    GetContainerSpec(containerName string, options v2.RequestOptions) (map[string]v2.ContainerSpec, error)\n    // 基于请求选项获取所有容器的摘要统计信息。\n    GetDerivedStats(containerName string, options v2.RequestOptions) (map[string]v2.DerivedStats, error)\n    // 根据请求选项获取所有请求容器的详细信息。\n    GetRequestedContainersInfo(containerName string, options v2.RequestOptions) (map[string]*info.ContainerInfo, error)\n    // 判断容器是否存在，如果存在则返回true\n    Exists(containerName string) bool\n    // 获取宿主机信息\n    GetMachineInfo() (*info.MachineInfo, error)\n    // 获取我们依赖的不同组件的版本信息。\n    GetVersionInfo() (*info.VersionInfo, error)\n  // 返回具有指定文件系统uuid的设备的信息。如果不存在具有UUID的此类设备，则此函数将返回fs.ErrNoSuchDevice错误。\n    GetFsInfoByFsUUID(uuid string) (v2.FsInfo, error)\n  // 获取包含给定目录的文件系统的文件系统信息\n  GetDirFsInfo(dir string) (v2.FsInfo, error)\n    // 获取给定标签的文件系统信息。\n  // 如果标签为空，则返回所有全局文件系统的信息。\n    GetFsInfo(label string) ([]v2.FsInfo, error)\n    // 获取容器的进程列表\n    GetProcessList(containerName string, options v2.RequestOptions) ([]v2.ProcessInfo, error)\n    // 获取通过passedChannel传输的符合请求的事件。\n    WatchForEvents(request *events.Request) (*events.EventChannel, error)\n    // 获取已检测到且符合请求的过去事件。\n    GetPastEvents(request *events.Request) ([]*info.Event, error)\n    // 关闭 Event Channel\n    CloseEventChannel(watch_id int)\n    // 获取 docker info 信息\n    DockerInfo() (info.DockerStatus, error)\n    // 获取docker镜像列表\n    DockerImages() ([]info.DockerImage, error)\n    // 返回调试信息。并按列表分类。\n    DebugInfo() map[string][]string\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230529100237-9gfkyw8",
			"Type": "NodeHeading",
			"HeadingLevel": 5,
			"Properties": {
				"id": "20230529100237-9gfkyw8",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "manager"
				}
			]
		},
		{
			"ID": "20230529100237-vmneiq4",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230529100237-vmneiq4",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "manager 是 Manager 接口的实现类，其中包含 cAdvisor 运行所需的各种信息。"
				}
			]
		},
		{
			"ID": "20230529100237-1qwf4tt",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230529100237-1qwf4tt",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "type manager struct {\n  // 当前受到监控的容器存在一个map中 containerData结构中包括了对容器的各种具体操作方式和相关信息\n    containers               map[namespacedContainerName]*containerData\n  // 对map中数据存取时采用的Lock\n    containersLock           sync.RWMutex\n    // 缓存在内存中的数据，主要是容器的相关信息\n    memoryCache              *memory.InMemoryCache\n  // 宿主机上的实际文件系统的相关信息\n    fsInfo                   fs.FsInfo\n  // 用于获取宿主机信息\n    sysFs                    sysfs.SysFs\n    machineMu                sync.RWMutex // protects machineInfo\n  // 宿主机的相关信息 cpu memory network system信息等等\n    machineInfo              info.MachineInfo\n  // 用于存放退出信号的channel manager关闭的时候会给其中的channel发送退出信号 \n    quitChannels             []chan error\n    // cadvisor本身所运行的那个容器(如果cadvisor运行在容器中)\n    cadvisorContainer        string\n  //是否在host的namespace中\n    inHostNamespace          bool\n  // 对event相关操作进行的封装\n    eventHandler             events.EventManager\n    //manager启动时间\n    startupTime              time.Time\n  // 在内存中保留数据的时间 也就是下次开始搜集容器相关信息并且更新内存信息的时间\n    maxHousekeepingInterval  time.Duration\n  // 是否允许动态设置dynamic housekeeping\n    allowDynamicHousekeeping bool\n  // 要采集的指标信息\n    includedMetrics          container.MetricSet\n  // ContainerWatcher 列表\n    containerWatchers        []watcher.ContainerWatcher\n  // 注册一个通道以监听影响子容器的事件（递归）。\n    eventsChannel            chan watcher.ContainerEvent\n    collectorHttpClient      *http.Client\n    nvidiaManager            stats.Manager\n    perfManager              stats.Manager\n    resctrlManager           stats.Manager\n    // raw 容器cgroup路径前缀白名单列表。\n    rawContainerCgroupPathPrefixWhiteList []string\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230529100237-8p7xmvs",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230529100237-8p7xmvs",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "宿主机管理"
				}
			]
		},
		{
			"ID": "20230529100237-y2rafhj",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20230529100237-y2rafhj",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "MachineInfo"
				}
			]
		},
		{
			"ID": "20230529100237-ybh4vn5",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230529100237-ybh4vn5",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "MachineInfo 用于记录宿主机的各项信息。"
				}
			]
		},
		{
			"ID": "20230529100237-7vj21uh",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230529100237-7vj21uh",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "type MachineInfo struct {\n    // 当前信息的采集事件点\n    Timestamp time.Time `json:\"timestamp\"`\n    // 机器上CPU逻辑核心数\n    NumCores int `json:\"num_cores\"`\n    // 机器上CPU物理核心数\n    NumPhysicalCores int `json:\"num_physical_cores\"`\n    // CPU插槽数\n    NumSockets int `json:\"num_sockets\"`\n    // 最大CPU时钟频率（KHz）\n    CpuFrequency uint64 `json:\"cpu_frequency_khz\"`\n    // 内存容量（字节）\n    MemoryCapacity uint64 `json:\"memory_capacity\"`\n    // 按内存类型划分的内存容量和 DIMM 数量\n    MemoryByType map[string]*MemoryInfo `json:\"memory_by_type\"`\n    // 非易失性内存模块的信息\n    NVMInfo NVMInfo `json:\"nvm\"`\n    // 大页信息\n    HugePages []HugePagesInfo `json:\"hugepages\"`\n    // 机器ID\n    MachineID string `json:\"machine_id\"`\n    // 系统UUID\n    SystemUUID string `json:\"system_uuid\"`\n    // boot id\n    BootID string `json:\"boot_id\"`\n    // 本机文件系统信息\n    Filesystems []FsInfo `json:\"filesystems\"`\n    // 本机磁盘信息\n    DiskMap map[string]DiskInfo `json:\"disk_map\"`\n    // 网络设备信息\n    NetworkDevices []NetInfo `json:\"network_devices\"`\n    // 机器拓扑，描述 cpu/内存布局和层次结构\n    Topology []Node `json:\"topology\"`\n    // 本机的云供应商\n    CloudProvider CloudProvider `json:\"cloud_provider\"`\n    // 机器的云实例类型（例如 GCE 标准）。\n    InstanceType InstanceType `json:\"instance_type\"`\n    // 云提供商提供给它的云实例 ID（例如 instance-1）。\n    InstanceID InstanceID `json:\"instance_id\"`\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230529100237-o5nfgrp",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20230529100237-o5nfgrp",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "SysFs"
				}
			]
		},
		{
			"ID": "20230529100237-h2qzrtg",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230529100237-h2qzrtg",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "SysFs 定义了一系列方法用于获取操作系统底层的一些信息，其接口定义如下："
				}
			]
		},
		{
			"ID": "20230529100237-imrrbqt",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230529100237-imrrbqt",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "type SysFs interface {\n  // 获取所有可用的块设备的目录信息，访问的是 /sys/block 目录\n    GetBlockDevices() ([]os.FileInfo, error)\n  // 获取指定块设备的大小，访问的是 /sys/block/${device-name}/dev 文件\n    GetBlockDeviceSize(string) (string, error)\n  // 获取指定块设备的调度器类型，访问的是 /sys/block/${device-name}/queue/scheduler 文件\n  GetBlockDeviceScheduler(string) (string, error)\n  // 获取块设备的 major:minor 数字字符串，访问的是 /sys/block/${device-name}/size 文件\n  GetBlockDeviceNumbers(string) (string, error)\n  // 获取所有的网络设备信息，访问的是 /sys/class/net 目录\n  GetNetworkDevices() ([]os.FileInfo, error)\n  // 获取指定网络设备的 MAC 地址信息，访问的是 /sys/class/net/${device-name}/address 文件\n  GetNetworkAddress(string) (string, error)\n  // 获取指定网络设备的 MTU（最大传输单元（MTU）指通过联网设备可以接收的最大数据包的值），访问的是 /sys/class/net/${device-name}/mtu 文件\n  GetNetworkMtu(string) (string, error)\n  // 获取网络设备的网速信息，访问的是 /sys/class/net/${device-name}/speed 文件\n  GetNetworkSpeed(string) (string, error)\n  // 获取网络设备的统计信息，访问的是/sys/class/net/${device-name}/statistics 文件\n  GetNetworkStatValue(dev string, stat string) (uint64, error)\n  // 获取指定 cpu 的高速缓存目录信息，访问的是 /sys/devices/system/cpu/cpu${cpu-id}/cache 目录\n  GetCaches(id int) ([]os.FileInfo, error)\n  // 获取指定 cpu 的高速缓存信息，包括size、level、type、cpu 数量\n  // 访问的是 /sys/devices/system/cpu/cpu${cpu-id}/cache/${cache} 文件\n  GetCacheInfo(cpu int, cache string) (CacheInfo, error)\n  // 获取系统的 UUID\n  GetSystemUUID() (string, error)\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230529100237-6a85cd2",
			"Type": "NodeHeading",
			"HeadingLevel": 5,
			"Properties": {
				"id": "20230529100237-6a85cd2",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "realSysFs"
				}
			]
		},
		{
			"ID": "20230529100237-g57pc3e",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230529100237-g57pc3e",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "SysFs 接口的实现类是 realSysFs，位于 github.com/google/cadvisor/utils/sysfs/sysfs.go。"
				}
			]
		},
		{
			"ID": "20230529100237-rhfluze",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230529100237-rhfluze",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "容器管理"
				}
			]
		},
		{
			"ID": "20230529100237-i5lfare",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20230529100237-i5lfare",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "containerData"
				}
			]
		},
		{
			"ID": "20230529100237-80kg5qq",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230529100237-80kg5qq",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "containerData 中封装了操作该容器所需的全部信息和 handler。"
				}
			]
		},
		{
			"ID": "20230529100237-cfe3g9t",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230529100237-cfe3g9t",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "type containerData struct {\n  // 该容器handler，用于与底层 CRI 进行交互，获取容器详细信息\n    handler                  container.ContainerHandler\n  // 该容器的基本信息，包括容器及其子容器的引用、和容器的 info.ContainerSpec 信息\n    info                     containerInfo\n  // 用于缓存该容器的指标信息\n    memoryCache              *memory.InMemoryCache\n    lock                     sync.Mutex\n  // 用于获取容器 load 信息\n    loadReader               cpuload.CpuLoadReader\n  // 用于获取某个cgroups下面容器的某段时间的摘要信息，目前主要追踪的是cpu以及memory的信息。\n    summaryReader            *summary.StatsSummary\n  // 迄今为止的平滑负载平均值\n    loadAvg                  float64 \n    housekeepingInterval     time.Duration\n    maxHousekeepingInterval  time.Duration\n    allowDynamicHousekeeping bool\n  // 最后一次容器信息更新时间\n    infoLastUpdatedTime      time.Time\n  // 最后一次容器指标更新时间\n    statsLastUpdatedTime     time.Time\n  // 最后一次报错时间\n    lastErrorTime            time.Time\n    // 用于跟踪时间\n    clock clock.Clock\n    // 用于负载平均平滑的衰减值。间隔长度为10秒。\n    loadDecay float64\n    // 更新此容器时是否记录其使用情况\n    logUsage bool\n    // 告知容器停止 housekeeping\n    stop chan bool\n    // 告诉容器立即收集统计信息\n    onDemandChan chan chan struct{}\n    // 运行自定义指标收集器\n    collectorManager collector.CollectorManager\n    // nvidiaCollector 更新连接到容器的Nvidia GPU的统计信息\n    nvidiaCollector accelerators.AcceleratorCollector\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230529100237-79nmt87",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20230529100237-79nmt87",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "ContainerHandler"
				}
			]
		},
		{
			"ID": "20230529100237-veanfbb",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230529100237-veanfbb",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "ContainerHandler 用于与 CRI 交互，并完成对关联 containerData 的各种操作（每个  containerData 对象都会有一个专属的  ContainerHandler）。当有容器新增时，ContainerHandlerFactory 会为该容器创建并设置  ContainerHandler。"
				}
			]
		},
		{
			"ID": "20230529100237-3n9q5j8",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230529100237-3n9q5j8",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "type ContainerHandler interface {\n    // 获取 ContainerReference 对象\n    ContainerReference() (info.ContainerReference, error)\n    // 获取 ContainerSpec 对象\n    GetSpec() (info.ContainerSpec, error)\n  // 获取子容器的状态\n    GetStats() (*info.ContainerStats, error)\n  // 获取子容器的 ContainerReference 对象列表\n    ListContainers(listType ListType) ([]info.ContainerReference, error)\n    // 返回容器内进程pid列表\n    ListProcesses(listType ListType) ([]int, error)\n  // 获取容器指定资源的 cgroup 绝对路径\n    GetCgroupPath(resource string) (string, error)\n    // 获取容器的标签map\n    GetContainerLabels() map[string]string\n    // 获取容器的 ip 地址\n    GetContainerIPAddress() string\n    // 判断当前的容器是否还存在，存在返回true，否则返回false\n    Exists() bool\n    // 释放 ContainerHandler 所使用的资源，如 fds、go routines等\n    Cleanup()\n    // 启动所有必须的后端goroutines——必须在 Cleanup() 方法中释放\n    Start()\n    // 关联的容器的类型\n    Type() ContainerType\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230529100237-irjeub6",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20230529100237-irjeub6",
				"updated": "20230529100237"
			}
		},
		{
			"ID": "20230529100237-xnlttsl",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230529100237-xnlttsl",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "ContainerHandlerFactory"
				}
			]
		},
		{
			"ID": "20230529100237-12a2vvv",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230529100237-12a2vvv",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "ContainerHandlerFactory 是 ContainerHandler 的工厂类。其功能是为指定的容器创建关联的 ContainerHandler 对象"
				}
			]
		},
		{
			"ID": "20230529100237-m8u3nru",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230529100237-m8u3nru",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "type ContainerHandlerFactory interface {\n    // 通过该方法为指定的 container 创建一个 ContainerHandler，用于处理对该 container 的操作。CanHandleAndAccept() 必须返回 true\n  // name：容器名称\n  // inHostNamespace：cAdvisor 是否运行在容器中\n    NewContainerHandler(name string, inHostNamespace bool) (c ContainerHandler, err error)\n  // 判断当期的 factory 能否接收并处理指定的容器\n    CanHandleAndAccept(name string) (handle bool, accept bool, err error)\n    // factory 名称\n    String() string\n    // 返回调试信息。Map of lines per category.\n    DebugInfo() map[string][]string\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230529100237-9etj7mx",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230529100237-9etj7mx",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "ContainerHandlerFactory 的种类有："
				}
			]
		},
		{
			"ID": "20230529100237-ubh6yx0",
			"Type": "NodeTable",
			"TableAligns": [
				0,
				0
			],
			"Properties": {
				"colgroup": "|",
				"id": "20230529100237-ubh6yx0",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeTableHead",
					"Data": "thead",
					"Children": [
						{
							"Type": "NodeTableRow",
							"Data": "tr",
							"Children": [
								{
									"Type": "NodeTableCell",
									"Data": "th",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "类型"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"Data": "th",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "处理范围"
										}
									]
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "mesos"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "只处理 mesos 关联容器"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "containerd"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "只处理 containerd 关联容器"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "docker"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "/docker 下处于 Running 状态的容器"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "cri-o"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "/crio 下的容器"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "systemd"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "处理包含 .mount 后缀的容器"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "raw"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "名字为“/”，或 raw_cgroup_prefix_whitelist 中指定前缀的容器"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230529100237-k20mapo",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230529100237-k20mapo",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "ContainerHandlerFactory 插件注册和初始化流程："
				}
			]
		},
		{
			"ID": "20230529100237-e0r2ji1",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230529100237-e0r2ji1",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "图片"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/640-20230529100237-c7lyp2y.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20230529100237-bd8ob89",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20230529100237-bd8ob89",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "ContainerWatcher"
				}
			]
		},
		{
			"ID": "20230529100237-7kcb6xg",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230529100237-7kcb6xg",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "ContainerWatcher 用于监听主机上容器的新增或删除事件。"
				}
			]
		},
		{
			"ID": "20230529100237-pi6tzy9",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230529100237-pi6tzy9",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "type ContainerWatcher interface {\n  // 监听所有子容器的新增或删除事件，并将事件写入到 ContainerEvent 通道中 \n    Start(events chan ContainerEvent) error\n  // 停止监听\n    Stop() error\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230529100237-4u7sry8",
			"Type": "NodeHeading",
			"HeadingLevel": 5,
			"Properties": {
				"id": "20230529100237-4u7sry8",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "rawContainerWatcher"
				}
			]
		},
		{
			"ID": "20230529100237-oa4p25m",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230529100237-oa4p25m",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "ContainerWatcher 接口的实现类是 rawContainerWatcher。一方面，rawContainerWatcher 在 manager 启动时，通过递归遍历 cgroup 子系统目录，完成机器上容器列表的初始化。另一方面，rawContainerWatcher  通过递归遍历 cgroup 子系统目录，并设置 InotifyWatcher，从而监听所有 cgroup  子目录的变化情况，并抛出相关事件，然后将这些事件放入 eventsChannel  中交由消费者去处理。在一方面，rawContainerWatcher 还会定期（通过--global_housekeeping_interval 参数设置）全量扫描容器列表，避免事件遗漏，从而保证内存中容器列表与机器上保持一致。"
				}
			]
		},
		{
			"ID": "20230529100237-s7vgloy",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230529100237-s7vgloy",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "文件系统管理"
				}
			]
		},
		{
			"ID": "20230529100237-t7sjir6",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20230529100237-t7sjir6",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "FsHandler"
				}
			]
		},
		{
			"ID": "20230529100237-2ak5pvj",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230529100237-2ak5pvj",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "FsHandler 负责定期收集"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "容器"
				},
				{
					"Type": "NodeText",
					"Data": "各文件系统的使用情况。在新增容器并创建 ContainerHandler 时，会为容器创建关联的 FsHandler 实例。"
				}
			]
		},
		{
			"ID": "20230529100237-g8fu8s4",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230529100237-g8fu8s4",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "type FsHandler interface {\n  // 定期收集容器各文件系统使用情况\n    Start()\n  // 获取容器文件系统使用情况\n    Usage() FsUsage\n  // 停止容器文件系统指标采集\n    Stop()\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230529100237-fv9zhmi",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230529100237-fv9zhmi",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "FsHandler 有两个实现类："
				}
			]
		},
		{
			"ID": "20230529100237-uewpqbt",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20230529100237-uewpqbt",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"ID": "20230529100237-wl9ahlx",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230529100237-wl9ahlx",
						"updated": "20230529100237"
					},
					"Children": [
						{
							"ID": "20230529100237-4vlcp6x",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230529100237-4vlcp6x",
								"updated": "20230529100237"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "realFsHandler：用于定期收集并更新容器 rootfs 和 extraDir（/opt/lib/docker/containers/${容器 ID} 目录）文件系统使用情况。"
								}
							]
						}
					]
				},
				{
					"ID": "20230529100237-r1ikb6k",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230529100237-r1ikb6k",
						"updated": "20230529100237"
					},
					"Children": [
						{
							"ID": "20230529100237-ct9wzrq",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230529100237-ct9wzrq",
								"updated": "20230529100237"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "dockerFsHandler：专为 Docker 设计的复合 FsHandler ，可用于收集 devicemapper、zfs 等文件系统的使用情况。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230529100237-6j9yi3m",
			"Type": "NodeHeading",
			"HeadingLevel": 5,
			"Properties": {
				"id": "20230529100237-6j9yi3m",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "realFsHandler"
				}
			]
		},
		{
			"ID": "20230529100237-hb5cdcc",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230529100237-hb5cdcc",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "realFsHandler 是一个通用 FsHandler，用于定期收集并更新容器 rootfs 和 extraDir（/opt/lib/docker/containers/${容器 ID} 目录）的文件系统使用情况。"
				}
			]
		},
		{
			"ID": "20230529100237-d3r00kb",
			"Type": "NodeHeading",
			"HeadingLevel": 5,
			"Properties": {
				"id": "20230529100237-d3r00kb",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "dockerFsHandler"
				}
			]
		},
		{
			"ID": "20230529100237-dy4sbat",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230529100237-dy4sbat",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "dockerFsHandler 是一个专为 Docker 设计的复合 FsHandler 实现，它包含 realFsHandler、devicemapper ThinPoolWatcher 和 zfsWatcher"
				}
			]
		},
		{
			"ID": "20230529100237-1ip2z34",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230529100237-1ip2z34",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "type dockerFsHandler struct {\n    fsHandler common.FsHandler    // thinPoolWatcher is the devicemapper thin pool watcher\n    thinPoolWatcher *devicemapper.ThinPoolWatcher\n    // deviceID is the id of the container's fs device\n    deviceID string    // zfsWatcher is the zfs filesystem watcher\n    zfsWatcher *zfs.ZfsWatcher\n    // zfsFilesystem is the docker zfs filesystem\n    zfsFilesystem string\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230529100237-2xvafh3",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20230529100237-2xvafh3",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "FsInfo"
				}
			]
		},
		{
			"ID": "20230529100237-nwonhik",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230529100237-nwonhik",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "FsInfo 用于获取"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "主机"
				},
				{
					"Type": "NodeText",
					"Data": "文件系统信息，及相关的设备、挂载点等信息。"
				}
			]
		},
		{
			"ID": "20230529100237-wm00oq3",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230529100237-wm00oq3",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "type FsInfo interface {\n    // 返回主机上所有ext2、ext3和ext4文件系统的容量和可用空间（以字节为单位）。\n    GetGlobalFsInfo() ([]Fs, error)\n    // 返回传递的挂载点集合的容量和可用空间（以字节为单位）。\n    GetFsInfoForPath(mountSet map[string]struct{}) ([]Fs, error)\n    // 返回指定目录的使用情况\n    GetDirUsage(dir string) (UsageInfo, error)\n  // 返回指定文件系统uuid关联的设备的信息。如果不存在此类设备，则此函数将返回ErrNoSuchDevice错误。\n    GetDeviceInfoByFsUUID(uuid string) (*DeviceInfo, error)\n    // 返回“dir”所在文件系统的块设备信息。\n    GetDirFsDevice(dir string) (*DeviceInfo, error)\n    // 返回与特定标签关联的设备名称。\n    GetDeviceForLabel(label string) (string, error)\n    // 返回与特定设备名称关联的所有标签。\n    GetLabelsForDevice(device string) ([]string, error)\n    // 返回与特定设备关联的挂载点。\n    GetMountpointForDevice(device string) (string, error)\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230529100237-do26uad",
			"Type": "NodeHeading",
			"HeadingLevel": 5,
			"Properties": {
				"id": "20230529100237-do26uad",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "RealFsInfo"
				}
			]
		},
		{
			"ID": "20230529100237-layf7p6",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230529100237-layf7p6",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "RealFsInfo 是对 FsInfo 接口的实现"
				}
			]
		},
		{
			"ID": "20230529100237-t9dhm3v",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230529100237-t9dhm3v",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "type RealFsInfo struct {\n    // 从块设备路径映射到分区信息。\n    partitions map[string]partition\n    // 从标签映射到块设备路径。\n    // 标签是自动检测到的特定于意图的标签。\n    labels map[string]string\n    // 从挂载点映射到挂载信息。\n    mounts map[string]mount.Info\n    // devicemapper 客户端\n    dmsetup devicemapper.DmsetupClient\n    // fsUUIDToDeviceName 是从文件系统UUID到其设备名称的映射。\n    fsUUIDToDeviceName map[string]string\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230529100237-s9tbf2l",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230529100237-s9tbf2l",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "事件管理"
				}
			]
		},
		{
			"ID": "20230529100237-j0corfp",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20230529100237-j0corfp",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "EventManager"
				}
			]
		},
		{
			"ID": "20230529100237-4b90d99",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230529100237-4b90d99",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "EventManager 用于管理容器生命周期中一些重要的事件，调用方可以通过调用 WatchEvents() 方法监听自己关心的事件，或调用 AddEvent() 方法新增事件到 EventManager。"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "用户可以通过调用 HTTP 接口设置要监听的事件，并获取这些事件。"
				},
				{
					"Type": "NodeText",
					"Data": " 目前已定义的事件包括："
				}
			]
		},
		{
			"ID": "20230529100237-k2jscbx",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20230529100237-k2jscbx",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"ID": "20230529100237-vsknx57",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230529100237-vsknx57",
						"updated": "20230529100237"
					},
					"Children": [
						{
							"ID": "20230529100237-jo07bcr",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230529100237-jo07bcr",
								"updated": "20230529100237"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "oom：通过监听 /dev/kmsg 内核日志，获取容器 OOM 事件。"
								}
							]
						}
					]
				},
				{
					"ID": "20230529100237-6ahp8m0",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230529100237-6ahp8m0",
						"updated": "20230529100237"
					},
					"Children": [
						{
							"ID": "20230529100237-ige5qsi",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230529100237-ige5qsi",
								"updated": "20230529100237"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "oomKill：同上。"
								}
							]
						}
					]
				},
				{
					"ID": "20230529100237-7kod0h8",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230529100237-7kod0h8",
						"updated": "20230529100237"
					},
					"Children": [
						{
							"ID": "20230529100237-ng9mudl",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230529100237-ng9mudl",
								"updated": "20230529100237"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "containerCreation：容器新增事件。"
								}
							]
						}
					]
				},
				{
					"ID": "20230529100237-17einhd",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230529100237-17einhd",
						"updated": "20230529100237"
					},
					"Children": [
						{
							"ID": "20230529100237-mbftv06",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230529100237-mbftv06",
								"updated": "20230529100237"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "containerDeletion：容器销毁事件。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230529100237-sx5zie2",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230529100237-sx5zie2",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "type EventManager interface {\n    // 当 WatchEvents() 方法被调用时，就会生成一个新的 watch 对象，并注册到 EventManager 中\n  // 该方法会返回一个 EventChannel 通道，监听到的满足条件的事件会被放入该通道中，调用方从该通道中读取事件\n    WatchEvents(request *Request) (*EventChannel, error)\n    // 从 eventStore 中查询满足指定条件的事件列表\n    GetEvents(request *Request) ([]*info.Event, error)\n    // 允许调用方添加一个事件到事件队列中，该方法的执行流程为：\n  // 1\\. 将 event 添加到 eventStore 中\n  // 2\\. 遍历所有的 watch，判断是否满足 watch 条件，如果满足，则放入 watch 的 eventChannel 中，这样对应的调用方就能收到该事件\n    AddEvent(e *info.Event) error\n    // 取消对 watch_id 所要求的事件的监听，从 watchers 中移除 watch 对象，并关闭其 eventChannel\n    StopWatch(watch_id int)\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230529100237-35nztt8",
			"Type": "NodeHeading",
			"HeadingLevel": 5,
			"Properties": {
				"id": "20230529100237-35nztt8",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "events"
				}
			]
		},
		{
			"ID": "20230529100237-eui9v19",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230529100237-eui9v19",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "events 类是 EventManager 接口的默认实现类。"
				}
			]
		},
		{
			"ID": "20230529100237-jfow94o",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230529100237-jfow94o",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "type events struct {\n  // 按类型存储各种事件\n  eventStore map[info.EventType]*utils.TimedStore\n  // 已注册的 watch 列表，以 watch id 为key\n  watchers map[int]*watch\n  // lock guarding the eventStore.\n  eventsLock sync.RWMutex\n  // lock guarding watchers.\n  watcherLock sync.RWMutex\n  // 上一个已分配的 watch id，每个 watch 对象都有一个唯一的id。每次有新的 watch 生成时，该值加1\n  lastId int\n  // 事件存储策略\n  storagePolicy StoragePolicy\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230529100237-jmkfdod",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20230529100237-jmkfdod",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "EventChannel"
				}
			]
		},
		{
			"ID": "20230529100237-ct72pja",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230529100237-ct72pja",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "事件通道，用于缓存近期生成的事件。"
				}
			]
		},
		{
			"ID": "20230529100237-rw4m6b2",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230529100237-rw4m6b2",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "type EventChannel struct {\n// Watch ID. Can be used by the caller to request cancellation of watch events.\nwatchId int\n// Channel on which the caller can receive watch events.\nchannel chan *info.Event\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230529100237-ohly185",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20230529100237-ohly185",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "StoragePolicy"
				}
			]
		},
		{
			"ID": "20230529100237-wo9ot95",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230529100237-wo9ot95",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "StoragePolicy 定义了事件在内存中存储的策略，包括事件存储最大时长（默认 24 小时）、最大可保存事件数量（默认 10w 条）、各类型事件事件存储最大时长和最大可保存事件数量。"
				}
			]
		},
		{
			"ID": "20230529100237-84o5zph",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230529100237-84o5zph",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "type StoragePolicy struct {\n    // 各类事件默认保留的最大时长\n    DefaultMaxAge       time.Duration\n  // 各类事件默认保留的最大条数\n    DefaultMaxNumEvents int\n    // 各类事件保留的最大时长\n    PerTypeMaxAge       map[info.EventType]time.Duration\n  // 各类事件保留的最大条数\n    PerTypeMaxNumEvents map[info.EventType]int\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230529100237-xb6gl1v",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230529100237-xb6gl1v",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "指标存储"
				}
			]
		},
		{
			"ID": "20230529100237-7775otu",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20230529100237-7775otu",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "StorageDriver"
				}
			]
		},
		{
			"ID": "20230529100237-pmbwo14",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230529100237-pmbwo14",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "StorageDriver 用于将数据转存到​"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "外部存储"
				},
				{
					"Type": "NodeText",
					"Data": "​，它的特点是容量较大，但存取速度较慢。"
				}
			]
		},
		{
			"ID": "20230529100237-28a8i7v",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230529100237-28a8i7v",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "type StorageDriver interface {\n  // 添加指标数据\n    AddStats(cInfo *info.ContainerInfo, stats *info.ContainerStats) error    // 将清除存储驱动程序的状态。存储在底层存储器中的元素可以被删除，\n  // 也可以不被删除，这取决于存储驱动程序的实现。\n    Close() error\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230529100237-2u6t6u1",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230529100237-2u6t6u1",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "cAdvisor 支持的 StorageDriver 类型有："
				}
			]
		},
		{
			"ID": "20230529100237-0ulytgf",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20230529100237-0ulytgf",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"ID": "20230529100237-uf72h60",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230529100237-uf72h60",
						"updated": "20230529100237"
					},
					"Children": [
						{
							"ID": "20230529100237-7t4jprj",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230529100237-7t4jprj",
								"updated": "20230529100237"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "BigQuery"
								}
							]
						}
					]
				},
				{
					"ID": "20230529100237-p1hk4vo",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230529100237-p1hk4vo",
						"updated": "20230529100237"
					},
					"Children": [
						{
							"ID": "20230529100237-2uzf70c",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230529100237-2uzf70c",
								"updated": "20230529100237"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "ElasticSearch"
								}
							]
						}
					]
				},
				{
					"ID": "20230529100237-mf1fmke",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230529100237-mf1fmke",
						"updated": "20230529100237"
					},
					"Children": [
						{
							"ID": "20230529100237-o466u1h",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230529100237-o466u1h",
								"updated": "20230529100237"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "InfluxDB"
								}
							]
						}
					]
				},
				{
					"ID": "20230529100237-449aj5y",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230529100237-449aj5y",
						"updated": "20230529100237"
					},
					"Children": [
						{
							"ID": "20230529100237-gg2pcls",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230529100237-gg2pcls",
								"updated": "20230529100237"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Kafka"
								}
							]
						}
					]
				},
				{
					"ID": "20230529100237-lfvoscy",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230529100237-lfvoscy",
						"updated": "20230529100237"
					},
					"Children": [
						{
							"ID": "20230529100237-ifdgo94",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230529100237-ifdgo94",
								"updated": "20230529100237"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Redis"
								}
							]
						}
					]
				},
				{
					"ID": "20230529100237-n0nq0d4",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230529100237-n0nq0d4",
						"updated": "20230529100237"
					},
					"Children": [
						{
							"ID": "20230529100237-bvm635e",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230529100237-bvm635e",
								"updated": "20230529100237"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Statsd"
								}
							]
						}
					]
				},
				{
					"ID": "20230529100237-a806lkg",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230529100237-a806lkg",
						"updated": "20230529100237"
					},
					"Children": [
						{
							"ID": "20230529100237-l1smqig",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230529100237-l1smqig",
								"updated": "20230529100237"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "stdout"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230529100237-ro88qca",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20230529100237-ro88qca",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "InMemoryCache"
				}
			]
		},
		{
			"ID": "20230529100237-kf4orad",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230529100237-kf4orad",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "InMemoryCache 用于将数据保存在内存中，它的特点是存取速度快，但容量有限。"
				}
			]
		},
		{
			"ID": "20230529100237-pleidgl",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230529100237-pleidgl",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "// 添加指标数据\nfunc (c *InMemoryCache) AddStats(cInfo *info.ContainerInfo, stats *info.ContainerStats) error\n// 获取最近一个时间区间的指标数据\nfunc (c *InMemoryCache) RecentStats(name string, start, end time.Time, maxStats int) ([]*info.ContainerStats, error)\n// 关闭缓存\nfunc (c *InMemoryCache) Close() error\n// 删除指定 Container 关联的指标\nfunc (c *InMemoryCache) RemoveContainer(containerName string) error\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230529100237-3l098ps",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230529100237-3l098ps",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "StorageDriver 注册和初始化流程如下图所示："
				}
			]
		},
		{
			"ID": "20230529100237-yjnoi5a",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230529100237-yjnoi5a",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "图片"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/640-20230529100237-tif3wie.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20230529100237-iy789cq",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230529100237-iy789cq",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "指标采集"
				}
			]
		},
		{
			"ID": "20230529100237-fu7vhgm",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20230529100237-fu7vhgm",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Collector"
				}
			]
		},
		{
			"ID": "20230529100237-vvohmir",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230529100237-vvohmir",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "type Collector interface {\n    // 从当前 collector 中采集指标\n  // 返回该 collector 下次需要采集的时间。该接口每次都会返回 collector 下次需要采集的时间，即便发生了错误\n  // 如果无需继续采集，该接口返回的时间为0\n    Collect(map[string][]v1.MetricVal) (time.Time, map[string][]v1.MetricVal, error)\n  // 返回该 collector 关联的所有指标的spec信息\n    GetSpec() []v1.MetricSpec\n  // collector的名称\n    Name() string\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230529100237-pdldy6e",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230529100237-pdldy6e",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "cAdvisor 中 Collector 接口的实现类有两个："
				}
			]
		},
		{
			"ID": "20230529100237-0hhc1jr",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20230529100237-0hhc1jr",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"ID": "20230529100237-qg556gk",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230529100237-qg556gk",
						"updated": "20230529100237"
					},
					"Children": [
						{
							"ID": "20230529100237-rmvt8nb",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230529100237-rmvt8nb",
								"updated": "20230529100237"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "PrometheusCollector：Prometheus 指标采集器"
								}
							]
						}
					]
				},
				{
					"ID": "20230529100237-eptqcwt",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230529100237-eptqcwt",
						"updated": "20230529100237"
					},
					"Children": [
						{
							"ID": "20230529100237-tvrcz5t",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230529100237-tvrcz5t",
								"updated": "20230529100237"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "GenericCollector：通用指标采集器"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230529100237-wt7oq0z",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20230529100237-wt7oq0z",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "CollectorManager"
				}
			]
		},
		{
			"ID": "20230529100237-zlbpxha",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230529100237-zlbpxha",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "CollectorManager 用于管理和运行 Collectors。"
				}
			]
		},
		{
			"ID": "20230529100237-5xq2eal",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230529100237-5xq2eal",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "type CollectorManager interface {\n    // 注册一个 collector\n    RegisterCollector(collector Collector) error\n  // 从所有已经准备就绪的 collector 采集指标，并返回 collector 下次可以被采集的时间。\n  // 该接口每次都会返回 collector 下次需要采集的时间，即便发生了错误\n  // 如果无需继续采集，该接口返回的时间为0\n    Collect() (time.Time, map[string][]v1.MetricVal, error)\n    // 获取所有已注册的 collector 关联的指标的spec信息\n    GetSpec() ([]v1.MetricSpec, error)\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230529100237-06xxo71",
			"Type": "NodeHeading",
			"HeadingLevel": 5,
			"Properties": {
				"id": "20230529100237-06xxo71",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "GenericCollectorManager"
				}
			]
		},
		{
			"ID": "20230529100237-5d7snbp",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230529100237-5d7snbp",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "GenericCollectorManager 是 CollectorManager 接口的实现类，用于管理和运行 Collectors。"
				}
			]
		},
		{
			"ID": "20230529100237-own5x24",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230529100237-own5x24",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "type GenericCollectorManager struct {\n  // 已注册的 Collector 列表\n    Collectors         []*collectorData\n  // 下次指标采集时间\n    NextCollectionTime time.Time\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230529100237-6gj60gf",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230529100237-6gj60gf",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "核心流程"
				}
			]
		},
		{
			"ID": "20230529100237-tlkcp69",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230529100237-tlkcp69",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "cAdvisor 初始化流程"
				}
			]
		},
		{
			"ID": "20230529100237-ow6edms",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230529100237-ow6edms",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "图片"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/640-20230529100237-eb444j6.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20230529100237-65qg2kv",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230529100237-65qg2kv",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "manager 启动流程"
				}
			]
		},
		{
			"ID": "20230529100237-7aa4nkg",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230529100237-7aa4nkg",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "图片"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/640-20230529100237-xr3sglv.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20230529100237-neg7gx3",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230529100237-neg7gx3",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Container 创建流程"
				}
			]
		},
		{
			"ID": "20230529100237-68tqqxi",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230529100237-68tqqxi",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "图片"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/640-20230529100237-u6vcnm2.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20230529100237-0o7nrxq",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230529100237-0o7nrxq",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "容器指标生成流程"
				}
			]
		},
		{
			"ID": "20230529100237-y4727ta",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230529100237-y4727ta",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "图片"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/640-20230529100237-qfbw28e.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20230529100237-7g1m98e",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230529100237-7g1m98e",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "指标采集流程"
				}
			]
		},
		{
			"ID": "20230529100237-pbposml",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230529100237-pbposml",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "图片"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/640-20230529100237-6ev413e.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20230529100237-q4zb9xn",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230529100237-q4zb9xn",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "kubelet 与 cAdvisor 交互流程"
				}
			]
		},
		{
			"ID": "20230529100237-876o1er",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230529100237-876o1er",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "图片"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/640-20230529100237-23pobz3.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20230529100237-y3b7kii",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230529100237-y3b7kii",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "引用链接"
				}
			]
		},
		{
			"ID": "20230529100237-m85ho4a",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230529100237-m85ho4a",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "[1]定义: "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "em a",
					"TextMarkAHref": "https://github.com/google/cadvisor/blob/master/container/common/test",
					"TextMarkTextContent": "https://github.com/google/cadvisor/blob/master/container/common/test"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "em",
					"TextMarkTextContent": "_resources/container_hints.json"
				}
			]
		},
		{
			"ID": "20230529100237-eyktaft",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230529100237-eyktaft",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​​"
				}
			]
		},
		{
			"ID": "20230529100237-5f26mwe",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230529100237-5f26mwe",
				"updated": "20230529100322"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "a",
					"TextMarkAHref": "http://mp.weixin.qq.com/s?__biz=MzI3MTI2NzkxMA==\u0026mid=2247521912\u0026idx=1\u0026sn=6af91b98c30a012d55acaea95ca60d77\u0026chksm=eac6b751ddb13e47149b60eb1bef3605567a3992eb9dd48e7ef54561c9f634997e2b89b4e5c2\u0026scene=21#wechat_redirect",
					"TextMarkTextContent": "http://mp.weixin.qq.com/s?__biz=MzI3MTI2NzkxMA==\u0026amp;mid=2247521912\u0026amp;idx=1\u0026amp;sn=6af91b98c30a012d55acaea95ca60d77\u0026amp;chksm=eac6b751ddb13e47149b60eb1bef3605567a3992eb9dd48e7ef54561c9f634997e2b89b4e5c2\u0026amp;scene=21#wechat_redirect"
				}
			]
		},
		{
			"ID": "20230529100237-ob2amhq",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230529100237-ob2amhq",
				"updated": "20230529100237"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "全网最详保姆级 Kubernetes 应用调试中文指南"
				}
			]
		},
		{
			"ID": "20230529100237-qhgr7zd",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230529100237-qhgr7zd",
				"updated": "20230529100333"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "a",
					"TextMarkAHref": "http://mp.weixin.qq.com/s?__biz=MzI3MTI2NzkxMA==\u0026mid=2247497936\u0026idx=1\u0026sn=ec9442c73de91c5ab35dbd21dfbedcbd\u0026chksm=eac6d9f9ddb150ef9fc91129ab2b34d35ffef884a726fd90bc1fe9d4014456d910b3baa73afc\u0026scene=21#wechat_redirect",
					"TextMarkTextContent": "http://mp.weixin.qq.com/s?__biz=MzI3MTI2NzkxMA==\u0026amp;mid=2247497936\u0026amp;idx=1\u0026amp;sn=ec9442c73de91c5ab35dbd21dfbedcbd\u0026amp;chksm=eac6d9f9ddb150ef9fc91129ab2b34d35ffef884a726fd90bc1fe9d4014456d910b3baa73afc\u0026amp;scene=21#wechat_redirect"
				},
				{
					"Type": "NodeText",
					"Data": "\n"
				}
			]
		},
		{
			"ID": "20230529100237-plj0lna",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230529100237-plj0lna",
				"updated": "20230529100328"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​​"
				}
			]
		},
		{
			"ID": "20230529100237-i0wqp8z",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230529100237-i0wqp8z",
				"updated": "20230529100331"
			}
		}
	]
}