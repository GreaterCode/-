{
	"ID": "20230112143204-m362ds6",
	"Spec": "1",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20230112143204-m362ds6",
		"title": "接口类型（interface）",
		"updated": "20230130184712"
	},
	"Children": [
		{
			"ID": "20230130184435-zgxvgzv",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20230130184435-zgxvgzv",
				"updated": "20230130184520"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "1. 接口"
				}
			]
		},
		{
			"ID": "20230112143204-zyxwptp",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230112143204-zyxwptp",
				"updated": "20230130165257"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "空接口是接口类型的特殊形式，空接口没有任何方法，因此任何类型都无须实现空接口。从实现的角度看，任何值都满足这个接口的需求。因此空接口类型可以保存任何值，也可以从空接口中取出原值。"
				}
			]
		},
		{
			"ID": "20230130165535-9j00qmu",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230130165535-9j00qmu",
				"updated": "20230130165548"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "mark",
					"TextMarkTextContent": "空接口的内部实现保存了对象的类型和指针。使用空接口保存一个数据的过程会比直接用数据对应类型的变量保存稍慢"
				},
				{
					"Type": "NodeText",
					"Data": "。因此在开发中，应在需要的地方使用空接口，而不是在所有地方使用空接口。"
				}
			]
		},
		{
			"ID": "20230130184531-7di4r6c",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20230130184531-7di4r6c",
				"updated": "20230130184546"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "2. 实现接口的条件"
				}
			]
		},
		{
			"ID": "20230130184559-hnk1zf9",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20230130184559-hnk1zf9",
				"updated": "20230130184603"
			},
			"Children": [
				{
					"ID": "20230130184603-q8ld51o",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230130184603-q8ld51o"
					},
					"Children": [
						{
							"ID": "20230130184613-61fhqpw",
							"Type": "NodeHeading",
							"HeadingLevel": 2,
							"Properties": {
								"id": "20230130184613-61fhqpw"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "口的方法与实现接口的类型方法格式一致"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230130184646-vw0825l",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230130184646-vw0825l",
				"updated": "20230130184712"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在类型中添加与接口签名一致的方法就可以实现该方法。"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "mark",
					"TextMarkTextContent": "签名包括方法中的名称、参数列表、返回参数列表"
				},
				{
					"Type": "NodeText",
					"Data": "。也就是说，只要实现接口类型中的方法的名称、参数列表、返回参数列表中的任意一项与接口要实现的方法不一致，那么接口的这个方法就不会被实现。"
				}
			]
		},
		{
			"ID": "20230130184702-wlk9far",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20230130184702-wlk9far",
				"updated": "20230130184704"
			},
			"Children": [
				{
					"ID": "20230130184703-rje0s1j",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230130184703-rje0s1j",
						"updated": "20230130184704"
					},
					"Children": [
						{
							"ID": "20230130184704-6j180ek",
							"Type": "NodeHeading",
							"HeadingLevel": 2,
							"Properties": {
								"id": "20230130184704-6j180ek",
								"updated": "20230130184704"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "接口中所有方法均被实现"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230130184546-5lpkozr",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230130184546-5lpkozr",
				"updated": "20230130184547"
			}
		},
		{
			"ID": "20230130165344-n4iux2j",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230130165344-n4iux2j",
				"updated": "20230130165344"
			}
		}
	]
}