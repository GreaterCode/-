{
	"ID": "20230102123534-zq6i1yy",
	"Spec": "1",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20230102123534-zq6i1yy",
		"title": "BoltDB 入门实践 ",
		"updated": "20230102123534"
	},
	"Children": [
		{
			"ID": "20230102123534-6a74ax2",
			"Type": "NodeThematicBreak",
			"Properties": {
				"id": "20230102123534-6a74ax2",
				"updated": "20230102123534"
			}
		},
		{
			"ID": "20230102123534-lzwsd80",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230102123534-lzwsd80"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "安装"
				}
			]
		},
		{
			"ID": "20230102123534-9a8u5kf",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230102123534-9a8u5kf"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "Z28="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "go get go.etcd.io/bbolt/...\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230102123534-ghats04",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230102123534-ghats04"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "会 get 两项"
				}
			]
		},
		{
			"ID": "20230102123534-uhsvz0l",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20230102123534-uhsvz0l"
			},
			"Children": [
				{
					"ID": "20230102123534-0btii05",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20230102123534-0btii05"
					},
					"Children": [
						{
							"ID": "20230102123534-epvsq4u",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230102123534-epvsq4u"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "go package -\u003e "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "$GOPATH"
								}
							]
						}
					]
				},
				{
					"ID": "20230102123534-m3iob89",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20230102123534-m3iob89"
					},
					"Children": [
						{
							"ID": "20230102123534-qdfs6ms",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230102123534-qdfs6ms"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "bolt"
								},
								{
									"Type": "NodeText",
									"Data": " command line -\u003e "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "$GOBIN"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230102123534-uxz8w93",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230102123534-uxz8w93"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Open Database"
				}
			]
		},
		{
			"ID": "20230102123534-lkiz19g",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230102123534-lkiz19g"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "使用 kv 数据库都很简单，只需要一个文件路径即可搭建完成环境。"
				}
			]
		},
		{
			"ID": "20230102123534-d45pxzz",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230102123534-d45pxzz"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "Z28="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "package main\n\nimport (\n    \"log\"\n\n    bolt \"go.etcd.io/bbolt\"\n)\n\nfunc main() {\n    // Open the my.db data file in your current directory.\n    // It will be created if it doesn't exist.\n    db, err := bolt.Open(\"my.db\", 0600, nil)\n    if err != nil {\n        log.Fatal(err)\n    }\n    defer db.Close()\n\n    ...\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230102123534-49ddm5i",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230102123534-49ddm5i"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "这里到 db 不支持多链接。这是因为对于 database file 一个链接保持了一个文件锁 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "file lock"
				},
				{
					"Type": "NodeText",
					"Data": "。"
				}
			]
		},
		{
			"ID": "20230102123534-aywoz28",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230102123534-aywoz28"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "如果并发，后续链接会阻塞。"
				}
			]
		},
		{
			"ID": "20230102123534-vt7cemm",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230102123534-vt7cemm"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "可以为单个链接添加 超时控制"
				}
			]
		},
		{
			"ID": "20230102123534-yakenmy",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230102123534-yakenmy"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "Z28="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "db, err := bolt.Open(\"my.db\", 0600, \u0026bolt.Options{Timeout: 1 * time.Second})\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230102123534-tq2p04f",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230102123534-tq2p04f"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "事务"
				}
			]
		},
		{
			"ID": "20230102123534-b3b0a18",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230102123534-b3b0a18"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "并发读写"
				}
			]
		},
		{
			"ID": "20230102123534-esrlsb0",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230102123534-esrlsb0"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "同时只能有"
				}
			]
		},
		{
			"ID": "20230102123534-xqp1wan",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20230102123534-xqp1wan"
			},
			"Children": [
				{
					"ID": "20230102123534-ps9zzqh",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230102123534-ps9zzqh"
					},
					"Children": [
						{
							"ID": "20230102123534-qt48hc1",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230102123534-qt48hc1"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "一个读写事务"
								}
							]
						}
					]
				},
				{
					"ID": "20230102123534-zp3vwqd",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230102123534-zp3vwqd"
					},
					"Children": [
						{
							"ID": "20230102123534-rqnxssi",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230102123534-rqnxssi"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "多个只读事务"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230102123534-t0m2atc",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230102123534-t0m2atc"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "actions⚠️：在事务开始时，会保持一个数据视图 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "这意味着事务处理过程中不会由于别处更改而改变"
				}
			]
		},
		{
			"ID": "20230102123534-m2jmvk3",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230102123534-m2jmvk3"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "线程安全"
				}
			]
		},
		{
			"ID": "20230102123534-7dsu34a",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230102123534-7dsu34a"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "单个事务和它所创建的所有对象（桶，键）都不是线程安全的。"
				}
			]
		},
		{
			"ID": "20230102123534-dz3ar3e",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230102123534-dz3ar3e"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "建议加锁 或者 每一个 goroutine 并发都开启 一个 事务"
				}
			]
		},
		{
			"ID": "20230102123534-woptmbq",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230102123534-woptmbq"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "当然，从 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "db"
				},
				{
					"Type": "NodeText",
					"Data": " 这个 bbolt 的顶级结构创建 事务 是 线程安全 的"
				}
			]
		},
		{
			"ID": "20230102123534-au4mpma",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230102123534-au4mpma"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "死锁"
				}
			]
		},
		{
			"ID": "20230102123534-fuhmhoj",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230102123534-fuhmhoj"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "前面提到的 读写事务 和 只读事务 拒绝相互依赖。当然也不能在同一个 goroutine 里。"
				}
			]
		},
		{
			"ID": "20230102123534-kuoyo2a",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230102123534-kuoyo2a"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "死锁原因是 读写事务 需要周期性重新映射 data 文件（即 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "database"
				},
				{
					"Type": "NodeText",
					"Data": "）。这在开启只读事务时是不可行的。"
				}
			]
		},
		{
			"ID": "20230102123534-j9ftldx",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230102123534-j9ftldx"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "读写事务"
				}
			]
		},
		{
			"ID": "20230102123534-ro9u5te",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230102123534-ro9u5te"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "使用 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "db.Update"
				},
				{
					"Type": "NodeText",
					"Data": " 开启一个读写事务"
				}
			]
		},
		{
			"ID": "20230102123534-lkdzhmy",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230102123534-lkdzhmy"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "Z28="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "err := db.Update(func(tx *bolt.Tx) error{\n    ···\n    return nil\n})\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230102123534-s018vfb",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230102123534-s018vfb"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "上文提过，在一个事务中 ，数据视图是一样的。 （详细解释就是，在这个函数作用域中，数据对你呈现最终一致性）"
				}
			]
		},
		{
			"ID": "20230102123534-6rpkhpw",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230102123534-6rpkhpw"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "返回值"
				}
			]
		},
		{
			"ID": "20230102123534-abyxjcc",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230102123534-abyxjcc"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "bboltdb 根据你的返回值判断事务状态，你可以添加任意逻辑并认为出错时返回 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "return err"
				},
				{
					"Type": "NodeText",
					"Data": " bboltdb 会回滚，如果 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "return nil"
				},
				{
					"Type": "NodeText",
					"Data": " 则提交你的事务。"
				}
			]
		},
		{
			"ID": "20230102123534-5anunpm",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230102123534-5anunpm"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "建议永远检查 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "Update"
				},
				{
					"Type": "NodeText",
					"Data": " 的返回值，因为他会返回如 硬盘压力 等造成事务失败的信息（这是在你的逻辑之外的情况）"
				}
			]
		},
		{
			"ID": "20230102123534-ihap9ib",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230102123534-ihap9ib"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "⚠️：你自定义返回 error 的 error 信息同样会被传递出来。"
				}
			]
		},
		{
			"ID": "20230102123534-4lk4pur",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230102123534-4lk4pur"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "只读事务"
				}
			]
		},
		{
			"ID": "20230102123534-khfmhdr",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230102123534-khfmhdr"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "使用 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "db.View"
				},
				{
					"Type": "NodeText",
					"Data": " 来新建一个 只读事务"
				}
			]
		},
		{
			"ID": "20230102123534-922nmkv",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230102123534-922nmkv"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "Z28="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "err := db.View(func(tx *bolt.Tx) error {\n    ···\n    return nil\n})\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230102123534-cdiulxv",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230102123534-cdiulxv"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "同上，你会获得一个一致性的数据视图。"
				}
			]
		},
		{
			"ID": "20230102123534-2v1uco8",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230102123534-2v1uco8"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "当然，只读事务 只能检索信息，不会有任何更改。（btw, 但是你可以 copy 一个 database 的副本，毕竟这只需要读数据）"
				}
			]
		},
		{
			"ID": "20230102123534-7p7g31v",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230102123534-7p7g31v"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "批量读写事务"
				}
			]
		},
		{
			"ID": "20230102123534-1yxy3nu",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230102123534-1yxy3nu"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "读写事务 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "db.Update"
				},
				{
					"Type": "NodeText",
					"Data": " 最后需要对 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "database"
				},
				{
					"Type": "NodeText",
					"Data": " 提交更改，这会等待硬盘就绪。"
				}
			]
		},
		{
			"ID": "20230102123534-pe1plpa",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230102123534-pe1plpa"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "每一次文件读写都是和磁盘交互。这不是一个小开销。"
				}
			]
		},
		{
			"ID": "20230102123534-vrfbdrx",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230102123534-vrfbdrx"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "你可以使用 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "db.Batch"
				},
				{
					"Type": "NodeText",
					"Data": " 开启一个 批处理事务。他会在最后批量提交（其实是多个 goroutines 开启 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "db.Batch"
				},
				{
					"Type": "NodeText",
					"Data": " 事务时有机会合并之后一起提交）从而减小了开销。 ⚠️："
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "db.Batch"
				},
				{
					"Type": "NodeText",
					"Data": " 只对 goroutine 起效"
				}
			]
		},
		{
			"ID": "20230102123534-elv7eh7",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230102123534-elv7eh7"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "使用 批处理事务 需要做取舍，用 幂等函数 换取 速度 ⚠️： "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "db.Batch"
				},
				{
					"Type": "NodeText",
					"Data": " 在一部分事务失败的时候会尝试多次调用那些事务函数，如果不是幂等会造成不可预知的非最终一致性。"
				}
			]
		},
		{
			"ID": "20230102123534-xxejbbz",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230102123534-xxejbbz"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "例：使用事务外的变量来使你的日志不那么奇怪"
				}
			]
		},
		{
			"ID": "20230102123534-v8xvsso",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230102123534-v8xvsso"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "Z28="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "var id uint64\nerr := db.Batch(func(tx *bolt.Tx) error {\n    // Find last key in bucket, decode as bigendian uint64, increment\n    // by one, encode back to []byte, and add new key.\n    ...\n    id = newValue\n    return nil\n})\nif err != nil {\n    return ...\n}\nfmt.Println(\"Allocated ID %d\", id)\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230102123534-hcly71f",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230102123534-hcly71f"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "手动事务"
				}
			]
		},
		{
			"ID": "20230102123534-vmm8w0z",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230102123534-vmm8w0z"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "可以手动进行事务的 开启 ，回滚，新建对象，提交等操作。因为本身 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "db.Update"
				},
				{
					"Type": "NodeText",
					"Data": " 和 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "db.View"
				},
				{
					"Type": "NodeText",
					"Data": " 就是他们的包装 ⚠️：手动事务记得 关闭 （Close）"
				}
			]
		},
		{
			"ID": "20230102123534-71ugx8t",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230102123534-71ugx8t"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "开启事务使用 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "db.Begin(bool)"
				},
				{
					"Type": "NodeText",
					"Data": " 同时参数代表着是否可以写操作。如下："
				}
			]
		},
		{
			"ID": "20230102123534-fzof3bn",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20230102123534-fzof3bn"
			},
			"Children": [
				{
					"ID": "20230102123534-90eayz5",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230102123534-90eayz5"
					},
					"Children": [
						{
							"ID": "20230102123534-fpgnaqw",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230102123534-fpgnaqw"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "true - 读写事务"
								}
							]
						}
					]
				},
				{
					"ID": "20230102123534-xhusb8j",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230102123534-xhusb8j"
					},
					"Children": [
						{
							"ID": "20230102123534-6mr61wt",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230102123534-6mr61wt"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "false - 只读事务"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230102123534-jsmwarl",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230102123534-jsmwarl"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "Z28="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "// Start a writable transaction.\ntx, err := db.Begin(true)\nif err != nil {\n    return err\n}\ndefer tx.Rollback()\n\n// Use the transaction...\n_, err := tx.CreateBucket([]byte(\"MyBucket\"))\nif err != nil {\n    return err\n}\n\n// Commit the transaction and check for error.\nif err := tx.Commit(); err != nil {\n    return err\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230102123534-2s6ms4p",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230102123534-2s6ms4p"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Using Store ?"
				}
			]
		},
		{
			"ID": "20230102123534-x4n78fm",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230102123534-x4n78fm"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Using Buckets"
				}
			]
		},
		{
			"ID": "20230102123534-np3c5ha",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230102123534-np3c5ha"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "桶是键值对的集合。在一个桶中，键值唯一。"
				}
			]
		},
		{
			"ID": "20230102123534-b664b7l",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230102123534-b664b7l"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "创建"
				}
			]
		},
		{
			"ID": "20230102123534-i5hix4i",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230102123534-i5hix4i"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "使用 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "Tx.CreateBucket()"
				},
				{
					"Type": "NodeText",
					"Data": " 和 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "Tx.CreateBucketIfNotExists()"
				},
				{
					"Type": "NodeText",
					"Data": " 建立一个新桶（推荐使用第二个） 接受参数是 桶的名字"
				}
			]
		},
		{
			"ID": "20230102123534-aka9346",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230102123534-aka9346"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "删除"
				}
			]
		},
		{
			"ID": "20230102123534-qxdhary",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230102123534-qxdhary"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "使用 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "Tx.DeleteBucket()"
				},
				{
					"Type": "NodeText",
					"Data": " 根据桶的名字来删除"
				}
			]
		},
		{
			"ID": "20230102123534-xptev2y",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230102123534-xptev2y"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "例子"
				}
			]
		},
		{
			"ID": "20230102123534-1z6k4kk",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230102123534-1z6k4kk"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "Z28="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "func main() {\n    db, err := bbolt.Open(\"./data\", 0666, nil)\n    if err != nil {\n        log.Fatal(err)\n    }\n    defer db.Close()\n\n    db.Update(func(tx *bbolt.Tx) error {\n        b, err := tx.CreateBucketIfNotExists([]byte(\"MyBucket\"))\n        if err != nil {\n            return fmt.Errorf(\"create bucket: %v\", err)\n        }\n\n        if err = tx.DeleteBucket([]byte(\"MyBucket\")); err != nil {\n            return err\n        }\n\n        return nil\n    })\n\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230102123534-hrre34g",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230102123534-hrre34g"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Using key/value pairs ?"
				}
			]
		},
		{
			"ID": "20230102123534-iprr5uc",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230102123534-iprr5uc"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "最重要的部分，就是 kv 存储怎么使用了，首先需要一个 桶 来存储键值对。"
				}
			]
		},
		{
			"ID": "20230102123534-1l7e6pi",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230102123534-1l7e6pi"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Put"
				}
			]
		},
		{
			"ID": "20230102123534-bwmqfhz",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230102123534-bwmqfhz"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "使用 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "Bucket.Put()"
				},
				{
					"Type": "NodeText",
					"Data": " 来存储键值对，接收两个 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "[]byte"
				},
				{
					"Type": "NodeText",
					"Data": " 类型的参数"
				}
			]
		},
		{
			"ID": "20230102123534-6snq2kc",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230102123534-6snq2kc"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "Z28="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "db.Update(func(tx *bolt.Tx) error {\n    b := tx.Bucket([]byte(\"MyBucket\"))\n    err := b.Put([]byte(\"answer\"), []byte(\"42\"))\n    return err\n})\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230102123534-x9z29kp",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230102123534-x9z29kp"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "很明显，上面的例子设置了 Pair: key：answer value：42"
				}
			]
		},
		{
			"ID": "20230102123534-ddoszwk",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230102123534-ddoszwk"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Get"
				}
			]
		},
		{
			"ID": "20230102123534-jhhcd4r",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230102123534-jhhcd4r"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "使用 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "Bucket.Get()"
				},
				{
					"Type": "NodeText",
					"Data": " 来查询键值。参数是一个 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "[]byte"
				},
				{
					"Type": "NodeText",
					"Data": "（别忘了这次我们只是查询，可以使用 只读事务）"
				}
			]
		},
		{
			"ID": "20230102123534-bq1cnss",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230102123534-bq1cnss"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "Z28="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "db.View(func(tx *bolt.Tx) error {\n    b := tx.Bucket([]byte(\"MyBucket\"))\n    v := b.Get([]byte(\"answer\"))\n    fmt.Printf(\"The answer is: %s\\n\", v)\n    return nil\n})\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230102123534-jdwc7op",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230102123534-jdwc7op"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "细心会注意到，"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "Get"
				},
				{
					"Type": "NodeText",
					"Data": " 是不会返回 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "error"
				},
				{
					"Type": "NodeText",
					"Data": " 的，这是因为 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "Get()"
				},
				{
					"Type": "NodeText",
					"Data": " 一定能正常工作（除非系统错误），相应的，当返回 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "nil"
				},
				{
					"Type": "NodeText",
					"Data": " 时，查询的键值对不存在。 ⚠️：注意 0 长度的值 和 不存在键值对 的行为是不一样的。（一个返回是 nil， 一个不是）"
				}
			]
		},
		{
			"ID": "20230102123534-x9jpga5",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230102123534-x9jpga5"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "Z28="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "func main() {\n    db, err := bolt.Open(\"./data.db\", 0666, nil)\n    if err != nil {\n        log.Fatal(err)\n    }\n    defer db.Close()\n\n    err = db.Update(func(tx *bolt.Tx) error {\n        b, err := tx.CreateBucketIfNotExists([]byte(\"MyBucket\"))\n        if err != nil {\n            return fmt.Errorf(\"create bucket: %v\", err)\n        }\n\n        if err = b.Put([]byte(\"answer\"), []byte(\"42\")); err != nil {\n            return err\n        }\n\n        if err = b.Put([]byte(\"zero\"), []byte(\"\")); err != nil {\n            return err\n        }\n\n        return nil\n    })\n\n    db.View(func(tx *bolt.Tx) error {\n        b := tx.Bucket([]byte(\"MyBucket\"))\n        v := b.Get([]byte(\"noexists\"))\n        fmt.Println(reflect.DeepEqual(v, nil)) // false\n        fmt.Println(v == nil)                  // true\n\n        v = b.Get([]byte(\"zero\"))\n        fmt.Println(reflect.DeepEqual(v, nil)) // false\n        fmt.Println(v == nil)                  // true\n        return nil\n    })\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230102123534-7lzf1nl",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230102123534-7lzf1nl"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Delete"
				}
			]
		},
		{
			"ID": "20230102123534-qocm318",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230102123534-qocm318"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "使用 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "Bucket.Delete()"
				},
				{
					"Type": "NodeText",
					"Data": " 删除键值对"
				}
			]
		},
		{
			"ID": "20230102123534-21r8wq6",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230102123534-21r8wq6"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "Z28="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "db.View(func(tx *bolt.Tx) error {\n    b := tx.Bucket([]byte(\"MyBucket\"))\n    fmt.Println(b.Get([]byte(\"answer\")))\n\n    err := b.Delete([]byte(\"answer\"))\n    if err != nil {\n        return err\n    }\n    return nil\n})\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230102123534-6mp5v9c",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230102123534-6mp5v9c"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "⚠️： "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "Get()"
				},
				{
					"Type": "NodeText",
					"Data": " 获取到的字节切片值只在当前事务（当前函数作用域）有效，如果要在其他事务中使用需要使用 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "copy()"
				},
				{
					"Type": "NodeText",
					"Data": " 将其拷贝到其他的字节切片"
				}
			]
		},
		{
			"ID": "20230102123534-fqih56v",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230102123534-fqih56v"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Tricks"
				}
			]
		},
		{
			"ID": "20230102123534-l623m3e",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230102123534-l623m3e"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "桶的自增键"
				}
			]
		},
		{
			"ID": "20230102123534-i8br4pe",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230102123534-i8br4pe"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "使用 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "NextSequence()"
				},
				{
					"Type": "NodeText",
					"Data": " 来创建自增键，见下例"
				}
			]
		},
		{
			"ID": "20230102123534-2atgph8",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230102123534-2atgph8"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "Z28="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "// CreateUser saves u to the store. The new user ID is set on u once the data is persisted.\nfunc (s *Store) CreateUser(u *User) error {\n    return s.db.Update(func(tx *bolt.Tx) error {\n        // Retrieve the users bucket.\n        // This should be created when the DB is first opened.\n        b := tx.Bucket([]byte(\"users\"))\n\n        // Generate ID for the user.\n        // This returns an error only if the Tx is closed or not writeable.\n        // That can't happen in an Update() call so I ignore the error check.\n        id, _ := b.NextSequence()\n        u.ID = int(id)\n\n        // Marshal user data into bytes.\n        buf, err := json.Marshal(u)\n        if err != nil {\n            return err\n        }\n\n        // Persist bytes to users bucket.\n        return b.Put(itob(u.ID), buf)\n    })\n}\n\n// itob returns an 8-byte big endian representation of v.\nfunc itob(v int) []byte {\n    b := make([]byte, 8)\n    binary.BigEndian.PutUint64(b, uint64(v))\n    return b\n}\n\ntype User struct {\n    ID int\n    ...\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230102123534-dkmmf1c",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230102123534-dkmmf1c"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "嵌套桶"
				}
			]
		},
		{
			"ID": "20230102123534-s4hicsc",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230102123534-s4hicsc"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "很简单的，桶可以实现嵌套存储"
				}
			]
		},
		{
			"ID": "20230102123534-jfii1rz",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230102123534-jfii1rz"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "Z28="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "func (*Bucket) CreateBucket(key []byte) (*Bucket, error)\nfunc (*Bucket) CreateBucketIfNotExists(key []byte) (*Bucket, error)\nfunc (*Bucket) DeleteBucket(key []byte) error\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230102123534-t8slxyw",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230102123534-t8slxyw"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "例子"
				}
			]
		},
		{
			"ID": "20230102123534-xck5hmm",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230102123534-xck5hmm"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "假设您有一个多租户应用程序，其中根级别存储桶是帐户存储桶。该存储桶内部有一系列帐户的序列，这些帐户本身就是存储桶。在序列存储桶（子桶）中，可能有许多相关的存储桶（Users，Note 等）。"
				}
			]
		},
		{
			"ID": "20230102123534-uore84u",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230102123534-uore84u"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://cdn.learnku.com/uploads/images/201910/02/41293/PoEk7aj8Fm.jpeg!large"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20230102123534-szqbxow",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230102123534-szqbxow"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "\\"
				}
			]
		},
		{
			"ID": "20230102123534-lxks2bq",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230102123534-lxks2bq"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "Z28="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "// createUser creates a new user in the given account.\nfunc createUser(accountID int, u *User) error {\n    // Start the transaction.\n    tx, err := db.Begin(true)\n    if err != nil {\n        return err\n    }\n    defer tx.Rollback()\n\n    // Retrieve the root bucket for the account.\n    // Assume this has already been created when the account was set up.\n    root := tx.Bucket([]byte(strconv.FormatUint(accountID, 10)))\n\n    // Setup the users bucket.\n    bkt, err := root.CreateBucketIfNotExists([]byte(\"USERS\"))\n    if err != nil {\n        return err\n    }\n\n    // Generate an ID for the new user.\n    userID, err := bkt.NextSequence()\n    if err != nil {\n        return err\n    }\n    u.ID = userID\n\n    // Marshal and save the encoded user.\n    if buf, err := json.Marshal(u); err != nil {\n        return err\n    } else if err := bkt.Put([]byte(strconv.FormatUint(u.ID, 10)), buf); err != nil {\n        return err\n    }\n\n    // Commit the transaction.\n    if err := tx.Commit(); err != nil {\n        return err\n    }\n\n    return nil\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230102123534-ko233i7",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230102123534-ko233i7"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "遍历键值"
				}
			]
		},
		{
			"ID": "20230102123534-esy5804",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230102123534-esy5804"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在桶中，键值对根据 键 的 值是有字节序的。 使用 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "Bucket.Cursor()"
				},
				{
					"Type": "NodeText",
					"Data": " 对其进行迭代"
				}
			]
		},
		{
			"ID": "20230102123534-eo92f20",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230102123534-eo92f20"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "Z28="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "db.View(func(tx *bolt.Tx) error {\n    // Assume bucket exists and has keys\n    b := tx.Bucket([]byte(\"MyBucket\"))\n\n    c := b.Cursor()\n\n    for k, v := c.First(); k != nil; k, v = c.Next() {\n        fmt.Printf(\"key=%s, value=%s\\n\", k, v)\n    }\n\n    return nil\n})\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230102123534-mcjh05t",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230102123534-mcjh05t"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Cursor 有 5 种方法进行迭代"
				}
			]
		},
		{
			"ID": "20230102123534-jzdf606",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20230102123534-jzdf606"
			},
			"Children": [
				{
					"ID": "20230102123534-ko5l1xn",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20230102123534-ko5l1xn"
					},
					"Children": [
						{
							"ID": "20230102123534-l8n4y5r",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230102123534-l8n4y5r"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "First()"
								},
								{
									"Type": "NodeText",
									"Data": " Move to the first key."
								}
							]
						}
					]
				},
				{
					"ID": "20230102123534-8jm8mwl",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20230102123534-8jm8mwl"
					},
					"Children": [
						{
							"ID": "20230102123534-majwz7b",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230102123534-majwz7b"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Last()"
								},
								{
									"Type": "NodeText",
									"Data": " Move to the last key."
								}
							]
						}
					]
				},
				{
					"ID": "20230102123534-mak624c",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "My4=",
						"Num": 3
					},
					"Properties": {
						"id": "20230102123534-mak624c"
					},
					"Children": [
						{
							"ID": "20230102123534-v7eoy5d",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230102123534-v7eoy5d"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Seek()"
								},
								{
									"Type": "NodeText",
									"Data": " Move to a specific key.\\"
								}
							]
						}
					]
				},
				{
					"ID": "20230102123534-nb3c4k5",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "NC4=",
						"Num": 4
					},
					"Properties": {
						"id": "20230102123534-nb3c4k5"
					},
					"Children": [
						{
							"ID": "20230102123534-f5q1ud9",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230102123534-f5q1ud9"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Next()"
								},
								{
									"Type": "NodeText",
									"Data": " Move to the next key.\\"
								}
							]
						}
					]
				},
				{
					"ID": "20230102123534-x661oue",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "NS4=",
						"Num": 5
					},
					"Properties": {
						"id": "20230102123534-x661oue"
					},
					"Children": [
						{
							"ID": "20230102123534-odug7ru",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230102123534-odug7ru"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Prev()"
								},
								{
									"Type": "NodeText",
									"Data": " Move to the previous key."
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230102123534-qlko0js",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230102123534-qlko0js"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "每一个方法都返回 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "(key []byte, value []byte)"
				},
				{
					"Type": "NodeText",
					"Data": " 两个值 当方法所指值不存在时返回 两个 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "nil"
				},
				{
					"Type": "NodeText",
					"Data": " 值，发生在以下情况："
				}
			]
		},
		{
			"ID": "20230102123534-3qmbj42",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20230102123534-3qmbj42"
			},
			"Children": [
				{
					"ID": "20230102123534-urfoujh",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20230102123534-urfoujh"
					},
					"Children": [
						{
							"ID": "20230102123534-y3qwtrw",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230102123534-y3qwtrw"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "迭代到最后一个键值对时，再一次调用 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Cursor.Next()"
								}
							]
						}
					]
				},
				{
					"ID": "20230102123534-qcg8jaz",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20230102123534-qcg8jaz"
					},
					"Children": [
						{
							"ID": "20230102123534-eheszav",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230102123534-eheszav"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "当前所指为第一个键值对时，调用 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Cursor.Prev()"
								}
							]
						}
					]
				},
				{
					"ID": "20230102123534-k7ieayw",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "My4=",
						"Num": 3
					},
					"Properties": {
						"id": "20230102123534-k7ieayw"
					},
					"Children": [
						{
							"ID": "20230102123534-wzvgymf",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230102123534-wzvgymf"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "当使用 4."
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Next()"
								},
								{
									"Type": "NodeText",
									"Data": " 和 5. "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Prev()"
								},
								{
									"Type": "NodeText",
									"Data": " 方法而未使用 1."
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "First()"
								},
								{
									"Type": "NodeText",
									"Data": " 2."
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Last()"
								},
								{
									"Type": "NodeText",
									"Data": " 3. "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Seek()"
								},
								{
									"Type": "NodeText",
									"Data": " 指定初始位置时"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230102123534-oz48o1p",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230102123534-oz48o1p"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "⚠️特殊情况：当 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "key"
				},
				{
					"Type": "NodeText",
					"Data": " 为 非 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "nil"
				},
				{
					"Type": "NodeText",
					"Data": " 但 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "value"
				},
				{
					"Type": "NodeText",
					"Data": " 是 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "nil"
				},
				{
					"Type": "NodeText",
					"Data": " 是，说明这是嵌套桶，"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "value"
				},
				{
					"Type": "NodeText",
					"Data": " 值是子桶，使用 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "Bucket.Bucket()"
				},
				{
					"Type": "NodeText",
					"Data": " 方法访问 子桶，参数是 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "key"
				},
				{
					"Type": "NodeText",
					"Data": " 值"
				}
			]
		},
		{
			"ID": "20230102123534-yl3a5w4",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230102123534-yl3a5w4"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "Z28="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "db.View(func(tx *bolt.Tx) error {\n    c := b.Cursor()\n    fmt.Println(c.First())\n    k, v := c.Prev()\n    fmt.Println(k == nil, v == nil) // true,true\n\n    if k != nil \u0026\u0026 v == nil {\n        subBucket := b.Bucket()\n        // doanything\n    }\n    return nil\n})\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230102123534-6l0t3y8",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230102123534-6l0t3y8"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "前缀遍历"
				}
			]
		},
		{
			"ID": "20230102123534-bdhn00a",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230102123534-bdhn00a"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "通过使用 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "Cursor"
				},
				{
					"Type": "NodeText",
					"Data": " 我们能够做到一些特殊的遍历，如：遍历拥有特定前缀的 键值对"
				}
			]
		},
		{
			"ID": "20230102123534-diemyrl",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230102123534-diemyrl"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "Z28="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "db.View(func(tx *bolt.Tx) error {\n    // Assume bucket exists and has keys\n    c := tx.Bucket([]byte(\"MyBucket\")).Cursor()\n\n    prefix := []byte(\"1234\")\n    for k, v := c.Seek(prefix); k != nil \u0026\u0026 bytes.HasPrefix(k, prefix); k, v = c.Next() {\n        fmt.Printf(\"key=%s, value=%s\\n\", k, v)\n    }\n\n    return nil\n})\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230102123534-6puu49t",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230102123534-6puu49t"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "范围遍历"
				}
			]
		},
		{
			"ID": "20230102123534-e5r4ntp",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230102123534-e5r4ntp"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在一个范围里遍历，如：使用可排序的时间编码（RFC3339）可以遍历特定日期范围的数据"
				}
			]
		},
		{
			"ID": "20230102123534-km6jplp",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230102123534-km6jplp"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "Z28="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "db.View(func(tx *bolt.Tx) error {\n    // Assume our events bucket exists and has RFC3339 encoded time keys.\n    c := tx.Bucket([]byte(\"Events\")).Cursor()\n\n    // Our time range spans the 90's decade.\n    min := []byte(\"1990-01-01T00:00:00Z\")\n    max := []byte(\"2000-01-01T00:00:00Z\")\n\n    // Iterate over the 90's.\n    for k, v := c.Seek(min); k != nil \u0026\u0026 bytes.Compare(k, max) \u003c= 0; k, v = c.Next() {\n        fmt.Printf(\"%s: %s\\n\", k, v)\n    }\n\n    return nil\n})\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230102123534-29t71dk",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230102123534-29t71dk"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "⚠️：Golang 实现的 RFC3339Nano 是不可排序的"
				}
			]
		},
		{
			"ID": "20230102123534-w7o6qzm",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230102123534-w7o6qzm"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "ForEach"
				}
			]
		},
		{
			"ID": "20230102123534-2lm7ghg",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230102123534-2lm7ghg"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在桶中有值的情况下，可以使用 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "ForEach()"
				},
				{
					"Type": "NodeText",
					"Data": " 遍历"
				}
			]
		},
		{
			"ID": "20230102123534-acxikri",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230102123534-acxikri"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "Z28="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "db.View(func(tx *bolt.Tx) error {\n    // Assume bucket exists and has keys\n    b := tx.Bucket([]byte(\"MyBucket\"))\n\n    b.ForEach(func(k, v []byte) error {\n        fmt.Printf(\"key=%s, value=%s\\n\", k, v)\n        return nil\n    })\n    return nil\n})\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230102123534-7o3n7jc",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230102123534-7o3n7jc"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "⚠️：在 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "ForEach()"
				},
				{
					"Type": "NodeText",
					"Data": " 中遍历的键值对需要 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "copy()"
				},
				{
					"Type": "NodeText",
					"Data": " 到事务外才能在事务外使用"
				}
			]
		},
		{
			"ID": "20230102123534-1gqjokv",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230102123534-1gqjokv"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Advance"
				}
			]
		},
		{
			"ID": "20230102123534-6c1tm1v",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230102123534-6c1tm1v"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Backup"
				}
			]
		},
		{
			"ID": "20230102123534-vv6c2pg",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230102123534-vv6c2pg"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "boltdb 是一个单一的文件，所以很容易备份。你可以使用 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "Tx.writeto()"
				},
				{
					"Type": "NodeText",
					"Data": " 函数写一致的数据库。如果从只读事务调用这个函数，它将执行热备份，而不会阻塞其他数据库的读写操作。"
				}
			]
		},
		{
			"ID": "20230102123534-t02agw4",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230102123534-t02agw4"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "默认情况下，它将使用一个常规文件句柄，该句柄将利用操作系统的页面缓存。"
				}
			]
		},
		{
			"ID": "20230102123534-ifciajz",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230102123534-ifciajz"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "有关优化大于 RAM 数据集的信息，请参见 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "[Tx](https://link.zhihu.com/?target=https%3A//godoc.org/go.etcd.io/bbolt%23Tx)"
				},
				{
					"Type": "NodeText",
					"Data": " 文档。"
				}
			]
		},
		{
			"ID": "20230102123534-p75lzrs",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230102123534-p75lzrs"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "一个常见的用例是在 HTTP 上进行备份，这样您就可以使用像 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "cURL"
				},
				{
					"Type": "NodeText",
					"Data": " 这样的工具来进行数据库备份："
				}
			]
		},
		{
			"ID": "20230102123534-2mlwjhf",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230102123534-2mlwjhf"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "Z28="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "func BackupHandleFunc(w http.ResponseWriter, req *http.Request) {\n    err := db.View(func(tx *bolt.Tx) error {\n        w.Header().Set(\"Content-Type\", \"application/octet-stream\")\n        w.Header().Set(\"Content-Disposition\", `attachment; filename=\"my.db\"`)\n        w.Header().Set(\"Content-Length\", strconv.Itoa(int(tx.Size())))\n        _, err := tx.WriteTo(w)\n        return err\n    })\n    if err != nil {\n        http.Error(w, err.Error(), http.StatusInternalServerError)\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230102123534-5xv82u8",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230102123534-5xv82u8"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "然后您可以使用此命令进行备份："
				}
			]
		},
		{
			"ID": "20230102123534-28tsm1a",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230102123534-28tsm1a"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "$ curl http://localhost/backup \u0026gt; my.db"
				}
			]
		},
		{
			"ID": "20230102123534-6mjjjwl",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230102123534-6mjjjwl"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "或者你可以打开你的浏览器以 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "a",
					"TextMarkAHref": "https://link.zhihu.com/?target=http%3A//localhost/backup",
					"TextMarkTextContent": "http://localhost/backup"
				},
				{
					"Type": "NodeText",
					"Data": "，它会自动下载。"
				}
			]
		},
		{
			"ID": "20230102123534-o1ulm7b",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230102123534-o1ulm7b"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "如果你想备份到另一个文件，你可以使用 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "TX.copyfile()"
				},
				{
					"Type": "NodeText",
					"Data": " 辅助功能。"
				}
			]
		},
		{
			"ID": "20230102123534-s4djkjo",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230102123534-s4djkjo"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Statistics"
				}
			]
		},
		{
			"ID": "20230102123534-0ai2b4g",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230102123534-0ai2b4g"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "数据库对运行的许多内部操作保持一个运行计数，这样您就可以更好地了解发生了什么。通过捕捉两个时间点数据的快照，我们可以看到在这个时间范围内执行了哪些操作。"
				}
			]
		},
		{
			"ID": "20230102123534-gme9dq4",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230102123534-gme9dq4"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "例如，我们可以用一个 goroutine 里记录统计每一个 10 秒："
				}
			]
		},
		{
			"ID": "20230102123534-7llz6qs",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230102123534-7llz6qs"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "Z28="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "go func() {\n    // Grab the initial stats.\n    prev := db.Stats()\n    for {\n        // Wait for 10s.\n        time.Sleep(10 * time.Second)\n        // Grab the current stats and diff them.\n        stats := db.Stats()\n        diff := stats.Sub(\u0026prev)\n        // Encode stats to JSON and print to STDERR.\n        json.NewEncoder(os.Stderr).Encode(diff)\n        // Save stats for the next loop.\n        prev = stats\n    }\n}()\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230102123534-m1vylop",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230102123534-m1vylop"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "将这些信息通过管道输出到监控也很有用。"
				}
			]
		},
		{
			"ID": "20230102123534-dd1w37j",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230102123534-dd1w37j"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Read-Only Mode"
				}
			]
		},
		{
			"ID": "20230102123534-eo6m5l2",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230102123534-eo6m5l2"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "可以开启只读模式防止错误更改"
				}
			]
		},
		{
			"ID": "20230102123534-gdimhbi",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230102123534-gdimhbi"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "Z28="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "db, err := bolt.Open(\"my.db\", 0666, \u0026bolt.Options{ReadOnly: true})\nif err != nil {\n    log.Fatal(err)\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230102123534-9rkjoyp",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230102123534-9rkjoyp"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "现在使用 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "db.Update()"
				},
				{
					"Type": "NodeText",
					"Data": " 等开启读写事务 将会阻塞"
				}
			]
		},
		{
			"ID": "20230102123534-u6vdtom",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230102123534-u6vdtom"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Mobile Use"
				}
			]
		},
		{
			"ID": "20230102123534-nhsa0sq",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230102123534-nhsa0sq"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "移动端支持由 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "a",
					"TextMarkAHref": "https://link.zhihu.com/?target=https%3A//github.com/golang/mobile",
					"TextMarkTextContent": "gomobile"
				},
				{
					"Type": "NodeText",
					"Data": " 工具提供"
				}
			]
		},
		{
			"ID": "20230102123534-fsm9ud1",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230102123534-fsm9ud1"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Create a struct that will contain your database logic and a reference to a "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "*bolt.DB"
				},
				{
					"Type": "NodeText",
					"Data": " with a initializing constructor that takes in a filepath where the database file will be stored. Neither Android nor iOS require extra permissions or cleanup from using this method."
				}
			]
		},
		{
			"ID": "20230102123534-bgorou7",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230102123534-bgorou7"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "Z28="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "func NewBoltDB(filepath string) *BoltDB {\n db, err := bolt.Open(filepath+\"/demo.db\", 0600, nil)\n if err != nil {\n    log.Fatal(err)\n }\n return \u0026BoltDB{db}\n}\ntype BoltDB struct {\n db *bolt.DB\n ...\n}\nfunc (b *BoltDB) Path() string {\n return b.db.Path()\n}\nfunc (b *BoltDB) Close() {\n b.db.Close()\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230102123534-rucecor",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230102123534-rucecor"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Database logic should be defined as methods on this wrapper struct. To initialize this struct from the native language (both platforms now sync their local storage to the cloud. These snippets disable that functionality for the database file):"
				}
			]
		},
		{
			"ID": "20230102123534-6ir3f4b",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230102123534-6ir3f4b"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Android"
				}
			]
		},
		{
			"ID": "20230102123534-19llgpl",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230102123534-19llgpl"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "Z28="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "String path;\nif (android.os.Build.VERSION.SDK_INT \u003e=android.os.Build.VERSION_CODES.LOLLIPOP){\n    path = getNoBackupFilesDir().getAbsolutePath();\n} else{\n    path = getFilesDir().getAbsolutePath();\n}\nBoltmobiledemo.BoltDB boltDB = Boltmobiledemo.NewBoltDB(path)\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230102123534-mtr4dcf",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230102123534-mtr4dcf"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "iOS"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "a",
					"TextMarkAHref": "#1bdf60",
					"TextMarkTextContent": "#"
				}
			]
		},
		{
			"ID": "20230102123534-m0uofuc",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230102123534-m0uofuc"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "Z28="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "- (void)demo {\n    NSString* path = [NSSearchPathForDirectoriesInDomains(NSLibraryDirectory,\n                                                          NSUserDomainMask,\n                                                          YES) objectAtIndex:0];\n GoBoltmobiledemoBoltDB * demo = GoBoltmobiledemoNewBoltDB(path);\n [self addSkipBackupAttributeToItemAtPath:demo.path];\n //Some DB Logic would go here\n [demo close];\n}\n- (BOOL)addSkipBackupAttributeToItemAtPath:(NSString *) filePathString\n{\n    NSURL* URL= [NSURL fileURLWithPath: filePathString];\n    assert([[NSFileManager defaultManager] fileExistsAtPath: [URL path]]);\n    NSError *error = nil;\n    BOOL success = [URL setResourceValue: [NSNumber numberWithBool: YES]\n                                  forKey: NSURLIsExcludedFromBackupKey error: \u0026error];\n    if(!success){\n        NSLog(@\"Error excluding %@ from backup %@\", [URL lastPathComponent], error);\n    }\n    return success;\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230102123534-v1il4n5",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230102123534-v1il4n5"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "扩展阅读"
				}
			]
		},
		{
			"ID": "20230102123534-w2fenza",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230102123534-w2fenza"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "更多指导"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "a",
					"TextMarkAHref": "#0ef2e5",
					"TextMarkTextContent": "#"
				}
			]
		},
		{
			"ID": "20230102123534-30o4vwb",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230102123534-30o4vwb"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "For more information on getting started with Bolt, check out the following articles:"
				}
			]
		},
		{
			"ID": "20230102123534-bqkyuh5",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20230102123534-bqkyuh5"
			},
			"Children": [
				{
					"ID": "20230102123534-0f4bngo",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230102123534-0f4bngo"
					},
					"Children": [
						{
							"ID": "20230102123534-14247cg",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230102123534-14247cg"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "a",
									"TextMarkAHref": "https://link.zhihu.com/?target=http%3A//npf.io/2014/07/intro-to-boltdb-painless-performant-persistence/",
									"TextMarkTextContent": "Intro to BoltDB: Painless Performant Persistence"
								},
								{
									"Type": "NodeText",
									"Data": " by "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "a",
									"TextMarkAHref": "https://link.zhihu.com/?target=https%3A//github.com/natefinch",
									"TextMarkTextContent": "Nate Finch"
								},
								{
									"Type": "NodeText",
									"Data": "."
								}
							]
						}
					]
				},
				{
					"ID": "20230102123534-vnnb63c",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230102123534-vnnb63c"
					},
					"Children": [
						{
							"ID": "20230102123534-feq3qen",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230102123534-feq3qen"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "a",
									"TextMarkAHref": "https://link.zhihu.com/?target=https%3A//www.progville.com/go/bolt-embedded-db-golang/",
									"TextMarkTextContent": "Bolt -- an embedded key/value database for Go"
								},
								{
									"Type": "NodeText",
									"Data": " by Progville"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230102123534-on9efb5",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230102123534-on9efb5"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "与其他数据库的比较"
				}
			]
		},
		{
			"ID": "20230102123534-v2fiikv",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230102123534-v2fiikv"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Postgres，MySQL 和其他关系数据库"
				}
			]
		},
		{
			"ID": "20230102123534-f4wszbl",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230102123534-f4wszbl"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "关系数据库将数据组织成行，并且只能通过使用 SQL 进行访问。这种方法在存储和查询数据方面提供了灵活性，但是在解析和计划 SQL 语句时也会产生开销。Bolt 通过字节切片键访问所有数据。这使得 Bolt 可以快速地通过键读取和写入数据，但是不提供将值连接在一起的内置支持。 大多数关系数据库（SQLite 除外）都是独立于应用程序运行的独立服务器。这使您的系统具有将多个应用程序服务器连接到单个数据库服务器的灵活性，但同时也增加了在网络上序列化和传输数据的开销。Bolt 作为应用程序中包含的库运行，因此所有数据访问都必须经过应用程序的过程。这使数据更接近您的应用程序，但限制了对数据的多进程访问。"
				}
			]
		},
		{
			"ID": "20230102123534-1n9aht0",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230102123534-1n9aht0"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "LevelDB，RocksDB"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "a",
					"TextMarkAHref": "#e07d1b",
					"TextMarkTextContent": "#"
				}
			]
		},
		{
			"ID": "20230102123534-oz9umlb",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230102123534-oz9umlb"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "LevelDB 及其派生类（RocksDB，HyperLevelDB）与 Bolt 类似，因为它们是捆绑到应用程序中的库，但是它们的底层结构是日志结构的合并树（LSM 树）。LSM 树通过使用预写日志和称为 SSTables 的多层排序文件来优化随机写入。Bolt 在内部使用 B + 树，并且仅使用一个文件。两种方法都需要权衡。 如果您需要较高的随机写入吞吐量（\u003e 10,000 w /sec），或者需要使用旋转磁盘，那么 LevelDB 可能是一个不错的选择。如果您的应用程序是大量读取或进行大量范围扫描，那么 Bolt 可能是一个不错的选择。 另一个重要的考虑因素是 LevelDB 没有事务。它支持键 / 值对的批量写入，并且支持读取快照，但不能使您安全地执行比较和交换操作。Bolt 支持完全可序列化的 ACID 事务。"
				}
			]
		},
		{
			"ID": "20230102123534-dvfs5be",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230102123534-dvfs5be"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "LMDB"
				}
			]
		},
		{
			"ID": "20230102123534-hd4qxsv",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230102123534-hd4qxsv"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Bolt 最初是 LMDB 的端口，因此在架构上相似。两者都使用 B + 树，具有 ACID 语义和完全可序列化的事务，并支持使用单个写入器和多个读取器的无锁 MVCC。 这两个项目有些分歧。LMDB 专注于原始性能，而 Bolt 专注于简单性和易用性。例如，出于性能考虑，LMDB 允许执行几种不安全的操作，例如直接写入。Bolt 选择禁止可能使数据库处于损坏状态的操作。Bolt 唯一的例外是 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "DB.NoSync"
				},
				{
					"Type": "NodeText",
					"Data": "。 API 也有一些区别。打开 LMDB 时需要最大的 mmap 大小，"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "mdb_env"
				},
				{
					"Type": "NodeText",
					"Data": " 而 Bolt 会自动处理增量 mmap 的大小。LMDB 使用多个标志来重载 getter 和 setter 函数，而 Bolt 将这些特殊情况拆分为自己的函数。"
				}
			]
		},
		{
			"ID": "20230102123534-iv8brtv",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230102123534-iv8brtv"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "注意事项和局限性"
				}
			]
		},
		{
			"ID": "20230102123534-814c1ge",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230102123534-814c1ge"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "选择合适的工具来完成这项工作很重要，而 Bolt 也不例外。在评估和使用 Bolt 时，需要注意以下几点："
				}
			]
		},
		{
			"ID": "20230102123534-80ytxjz",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20230102123534-80ytxjz"
			},
			"Children": [
				{
					"ID": "20230102123534-cflad0m",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230102123534-cflad0m"
					},
					"Children": [
						{
							"ID": "20230102123534-j1nsfds",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230102123534-j1nsfds"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Bolt 非常适合读取密集型工作负载。顺序写入性能也很快，但是随机写入可能会很慢。您可以使用 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "DB.Batch()"
								},
								{
									"Type": "NodeText",
									"Data": " 或添加预写日志来帮助缓解此问题。\\"
								}
							]
						}
					]
				},
				{
					"ID": "20230102123534-ozxwox7",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230102123534-ozxwox7"
					},
					"Children": [
						{
							"ID": "20230102123534-lsh8kg5",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230102123534-lsh8kg5"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Bolt 在内部使用 B + tree，因此可以有很多随机页面访问。与旋转磁盘相比，SSD 可以显着提高性能。\\"
								}
							]
						}
					]
				},
				{
					"ID": "20230102123534-4ih9wu1",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230102123534-4ih9wu1"
					},
					"Children": [
						{
							"ID": "20230102123534-aw5p7d7",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230102123534-aw5p7d7"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "尝试避免长时间运行的读取事务。Bolt 使用写时复制功能，因此在旧事务使用旧页时无法回收这些旧页。\\"
								}
							]
						}
					]
				},
				{
					"ID": "20230102123534-xwruagf",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230102123534-xwruagf"
					},
					"Children": [
						{
							"ID": "20230102123534-evbc440",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230102123534-evbc440"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "从 Bolt 返回的字节片仅在事务期间有效。一旦事务被提交或回滚，它们所指向的内存就可以被新页面重用，或者可以从虚拟内存中取消映射，"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "unexpected fault address"
								},
								{
									"Type": "NodeText",
									"Data": " 访问时会出现恐慌。\\"
								}
							]
						}
					]
				},
				{
					"ID": "20230102123534-3zsl0z3",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230102123534-3zsl0z3"
					},
					"Children": [
						{
							"ID": "20230102123534-6z4h7fc",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230102123534-6z4h7fc"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Bolt 在数据库文件上使用排他写锁定，因此不能被多个进程共享。\\"
								}
							]
						}
					]
				},
				{
					"ID": "20230102123534-vefgy7w",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230102123534-vefgy7w"
					},
					"Children": [
						{
							"ID": "20230102123534-bqt6i3z",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230102123534-bqt6i3z"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "使用时要小心 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Bucket.FillPercent"
								},
								{
									"Type": "NodeText",
									"Data": "。为具有随机插入的存储桶设置较高的填充百分比将导致数据库的页面利用率非常差。\\"
								}
							]
						}
					]
				},
				{
					"ID": "20230102123534-k70yac3",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230102123534-k70yac3"
					},
					"Children": [
						{
							"ID": "20230102123534-tmouu2r",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230102123534-tmouu2r"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "通常使用较大的水桶。较小的存储桶一旦超过页面大小（通常为 4KB），就会导致页面利用率下降。\\"
								}
							]
						}
					]
				},
				{
					"ID": "20230102123534-y9iv9pq",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230102123534-y9iv9pq"
					},
					"Children": [
						{
							"ID": "20230102123534-naw7fg9",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230102123534-naw7fg9"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "批量加载大量随机写入新的存储桶可能很慢，因为在提交事务之前页面不会拆分。建议不要在单个事务中将 100,000 个以上的键 / 值对随机插入到一个新的存储桶中。\\"
								}
							]
						}
					]
				},
				{
					"ID": "20230102123534-5gm2yja",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230102123534-5gm2yja"
					},
					"Children": [
						{
							"ID": "20230102123534-v9tgbq6",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230102123534-v9tgbq6"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Bolt 使用内存映射文件，因此底层操作系统可以处理数据的缓存。通常，操作系统将在内存中缓存尽可能多的文件，并根据需要将内存释放给其他进程。这意味着在使用大型数据库时，Bolt 可能会显示很高的内存使用率。但是，这是预料之中的，操作系统将根据需要释放内存。只要 Bolt 的内存映射适合进程虚拟地址空间，它就可以处理比可用物理 RAM 大得多的数据库。在 32 位系统上可能会出现问题。\\"
								}
							]
						}
					]
				},
				{
					"ID": "20230102123534-kbt36p9",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230102123534-kbt36p9"
					},
					"Children": [
						{
							"ID": "20230102123534-lcj2ncr",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230102123534-lcj2ncr"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Bolt 数据库中的数据结构是内存映射的，因此数据文件将是特定于字节序的。这意味着您无法将 Bolt 文件从小字节序计算机复制到大字节序计算机并使其正常工作。对于大多数用户而言，这不是问题，因为大多数现代 CPU 的字节序都很少。\\"
								}
							]
						}
					]
				},
				{
					"ID": "20230102123534-tqkikok",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230102123534-tqkikok"
					},
					"Children": [
						{
							"ID": "20230102123534-n88og7x",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230102123534-n88og7x"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "由于页面在磁盘上的布局方式，Bolt 无法截断数据文件并将可用页面返回到磁盘。取而代之的是，Bolt 会在其数据文件中维护未使用页面的空闲列表。这些空闲页面可以被以后的事务重用。由于数据库通常会增长，因此这在许多用例中效果很好。但是，请务必注意，删除大块数据将不允许您回收磁盘上的该空间。 有关页面分配的更多信息，"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "a",
									"TextMarkAHref": "https://link.zhihu.com/?target=https%3A//github.com/boltdb/bolt/issues/308%23issuecomment-74811638",
									"TextMarkTextContent": "请参见此注释"
								},
								{
									"Type": "NodeText",
									"Data": "。\\"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230102123534-vtkw538",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230102123534-vtkw538"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "阅读资料"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "a",
					"TextMarkAHref": "#81f5d5",
					"TextMarkTextContent": "#"
				}
			]
		},
		{
			"ID": "20230102123534-wu6gk2m",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230102123534-wu6gk2m"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "对于嵌入式，可序列化的事务性键 / 值数据库，Bolt 是一个相对较小的代码库（\u003c5KLOC），因此对于那些对数据库的工作方式感兴趣的人来说，Bolt 可能是一个很好的起点。"
				}
			]
		},
		{
			"ID": "20230102123534-kpc14pk",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230102123534-kpc14pk"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "最佳起点是 Bolt 的主要切入点："
				}
			]
		},
		{
			"ID": "20230102123534-nz51684",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20230102123534-nz51684"
			},
			"Children": [
				{
					"ID": "20230102123534-i5vjlnm",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230102123534-i5vjlnm"
					},
					"Children": [
						{
							"ID": "20230102123534-ct61vd5",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230102123534-ct61vd5"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Open()"
								},
								{
									"Type": "NodeText",
									"Data": "- 初始化对数据库的引用。它负责创建数据库（如果不存在），获得文件的排他锁，读取元页面以及对文件进行内存映射。\\"
								}
							]
						}
					]
				},
				{
					"ID": "20230102123534-5fjf4hz",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230102123534-5fjf4hz"
					},
					"Children": [
						{
							"ID": "20230102123534-fk82164",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230102123534-fk82164"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "DB.Begin()"
								},
								{
									"Type": "NodeText",
									"Data": "- 根据 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "writable"
								},
								{
									"Type": "NodeText",
									"Data": " 参数的值启动只读或读写事务。这需要短暂获得 “元” 锁以跟踪未结交易。一次只能存在一个读写事务，因此在读写事务期间将获得 “ rwlock”。\\"
								}
							]
						}
					]
				},
				{
					"ID": "20230102123534-x34iaa5",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230102123534-x34iaa5"
					},
					"Children": [
						{
							"ID": "20230102123534-l3u284x",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230102123534-l3u284x"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Bucket.Put()"
								},
								{
									"Type": "NodeText",
									"Data": "- 将键 / 值对写入存储桶。验证参数之后，使用光标将 B + 树遍历到将键和值写入的页面和位置。找到位置后，存储桶会将基础页面和页面的父页面具体化为 “节点” 到内存中。这些节点是在读写事务期间发生突变的地方。提交期间，这些更改将刷新到磁盘。\\"
								}
							]
						}
					]
				},
				{
					"ID": "20230102123534-vnoz6yx",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230102123534-vnoz6yx"
					},
					"Children": [
						{
							"ID": "20230102123534-vzo5of5",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230102123534-vzo5of5"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Bucket.Get()"
								},
								{
									"Type": "NodeText",
									"Data": "- 从存储桶中检索键 / 值对。这使用光标移动到键 / 值对的页面和位置。在只读事务期间，键和值数据将作为对基础 mmap 文件的直接引用返回，因此没有分配开销。对于读写事务，此数据可以引用 mmap 文件或内存节点值之一。\\"
								}
							]
						}
					]
				},
				{
					"ID": "20230102123534-xfu4rx9",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230102123534-xfu4rx9"
					},
					"Children": [
						{
							"ID": "20230102123534-0cffcws",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230102123534-0cffcws"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Cursor"
								},
								{
									"Type": "NodeText",
									"Data": "- 该对象仅用于遍历磁盘页或内存节点的 B + 树。它可以查找特定的键，移至第一个或最后一个值，也可以向前或向后移动。光标对最终用户透明地处理 B + 树的上下移动。\\"
								}
							]
						}
					]
				},
				{
					"ID": "20230102123534-hst67h0",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230102123534-hst67h0"
					},
					"Children": [
						{
							"ID": "20230102123534-bbrjhri",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230102123534-bbrjhri"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Tx.Commit()"
								},
								{
									"Type": "NodeText",
									"Data": "- 将内存中的脏节点和可用页面列表转换为要写入磁盘的页面。然后写入磁盘分为两个阶段。首先，脏页被写入磁盘并 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "fsync()"
								},
								{
									"Type": "NodeText",
									"Data": " 发生。其次，写入具有递增的事务 ID 的新元页面，然后 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "fsync()"
								},
								{
									"Type": "NodeText",
									"Data": " 发生另一个页面 。这两个阶段的写入操作确保崩溃时会忽略部分写入的数据页，因为指向它们的元页不会被写入。部分写入的元页面是无效的，因为它们是用校验和写入的。\\"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230102123534-67ffxxq",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230102123534-67ffxxq"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "如果您还有其他可能对他人有用的注释，请通过请求请求将其提交。"
				}
			]
		},
		{
			"ID": "20230102123534-28v7u9f",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230102123534-28v7u9f"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "其他使用螺栓的项目"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "a",
					"TextMarkAHref": "#947e63",
					"TextMarkTextContent": "#"
				}
			]
		},
		{
			"ID": "20230102123534-fov35jh",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230102123534-fov35jh"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "以下是使用 Bolt 的公共开源项目的列表："
				}
			]
		},
		{
			"ID": "20230102123534-nhlolsr",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20230102123534-nhlolsr"
			},
			"Children": [
				{
					"ID": "20230102123534-0qwqq4j",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230102123534-0qwqq4j"
					},
					"Children": [
						{
							"ID": "20230102123534-fiyfn1k",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230102123534-fiyfn1k"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "a",
									"TextMarkAHref": "https://link.zhihu.com/?target=https%3A//github.com/xyproto/algernon",
									"TextMarkTextContent": "Algernon"
								},
								{
									"Type": "NodeText",
									"Data": " - A HTTP/2 web server with built-in support for Lua. Uses BoltDB as the default database backend."
								}
							]
						}
					]
				},
				{
					"ID": "20230102123534-b21tod3",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230102123534-b21tod3"
					},
					"Children": [
						{
							"ID": "20230102123534-rckvgmc",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230102123534-rckvgmc"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "a",
									"TextMarkAHref": "https://link.zhihu.com/?target=https%3A//bazil.org/",
									"TextMarkTextContent": "Bazil"
								},
								{
									"Type": "NodeText",
									"Data": " - A file system that lets your data reside where it is most convenient for it to reside."
								}
							]
						}
					]
				},
				{
					"ID": "20230102123534-wnde6z0",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230102123534-wnde6z0"
					},
					"Children": [
						{
							"ID": "20230102123534-l3rlte6",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230102123534-l3rlte6"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "a",
									"TextMarkAHref": "https://link.zhihu.com/?target=https%3A//github.com/hasit/bolter",
									"TextMarkTextContent": "bolter"
								},
								{
									"Type": "NodeText",
									"Data": " - Command-line app for viewing BoltDB file in your terminal."
								}
							]
						}
					]
				},
				{
					"ID": "20230102123534-4pgs2u8",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230102123534-4pgs2u8"
					},
					"Children": [
						{
							"ID": "20230102123534-10uvv9s",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230102123534-10uvv9s"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "a",
									"TextMarkAHref": "https://link.zhihu.com/?target=https%3A//github.com/spacewander/boltcli",
									"TextMarkTextContent": "boltcli"
								},
								{
									"Type": "NodeText",
									"Data": " - the redis-cli for boltdb with Lua script support."
								}
							]
						}
					]
				},
				{
					"ID": "20230102123534-ossglz9",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230102123534-ossglz9"
					},
					"Children": [
						{
							"ID": "20230102123534-z24lb0w",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230102123534-z24lb0w"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "a",
									"TextMarkAHref": "https://link.zhihu.com/?target=https%3A//github.com/timshannon/bolthold",
									"TextMarkTextContent": "BoltHold"
								},
								{
									"Type": "NodeText",
									"Data": " - An embeddable NoSQL store for Go types built on BoltDB"
								}
							]
						}
					]
				},
				{
					"ID": "20230102123534-seqgamo",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230102123534-seqgamo"
					},
					"Children": [
						{
							"ID": "20230102123534-4jqldxm",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230102123534-4jqldxm"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "a",
									"TextMarkAHref": "https://link.zhihu.com/?target=https%3A//github.com/yosssi/boltstore",
									"TextMarkTextContent": "BoltStore"
								},
								{
									"Type": "NodeText",
									"Data": " - Session store using Bolt."
								}
							]
						}
					]
				},
				{
					"ID": "20230102123534-dv38hwg",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230102123534-dv38hwg"
					},
					"Children": [
						{
							"ID": "20230102123534-mn5wet5",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230102123534-mn5wet5"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "a",
									"TextMarkAHref": "https://link.zhihu.com/?target=https%3A//github.com/bobintornado/boltdb-boilerplate",
									"TextMarkTextContent": "Boltdb Boilerplate"
								},
								{
									"Type": "NodeText",
									"Data": " - Boilerplate wrapper around bolt aiming to make simple calls one-liners."
								}
							]
						}
					]
				},
				{
					"ID": "20230102123534-74fpzpa",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230102123534-74fpzpa"
					},
					"Children": [
						{
							"ID": "20230102123534-p0zgyw8",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230102123534-p0zgyw8"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "a",
									"TextMarkAHref": "https://link.zhihu.com/?target=https%3A//github.com/evnix/boltdbweb",
									"TextMarkTextContent": "BoltDbWeb"
								},
								{
									"Type": "NodeText",
									"Data": " - A web based GUI for BoltDB files."
								}
							]
						}
					]
				},
				{
					"ID": "20230102123534-anwzode",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230102123534-anwzode"
					},
					"Children": [
						{
							"ID": "20230102123534-8byrxir",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230102123534-8byrxir"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "a",
									"TextMarkAHref": "https://link.zhihu.com/?target=http%3A//www.blevesearch.com/",
									"TextMarkTextContent": "bleve"
								},
								{
									"Type": "NodeText",
									"Data": " - A pure Go search engine similar to ElasticSearch that uses Bolt as the default storage backend."
								}
							]
						}
					]
				},
				{
					"ID": "20230102123534-b343u3m",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230102123534-b343u3m"
					},
					"Children": [
						{
							"ID": "20230102123534-yf98ovp",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230102123534-yf98ovp"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "a",
									"TextMarkAHref": "https://link.zhihu.com/?target=https%3A//github.com/btcsuite/btcwallet",
									"TextMarkTextContent": "btcwallet"
								},
								{
									"Type": "NodeText",
									"Data": " - A bitcoin wallet."
								}
							]
						}
					]
				},
				{
					"ID": "20230102123534-mdtsinp",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230102123534-mdtsinp"
					},
					"Children": [
						{
							"ID": "20230102123534-fnhpd28",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230102123534-fnhpd28"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "a",
									"TextMarkAHref": "https://link.zhihu.com/?target=https%3A//github.com/joyrexus/buckets",
									"TextMarkTextContent": "buckets"
								},
								{
									"Type": "NodeText",
									"Data": " - a bolt wrapper streamlining simple tx and key scans."
								}
							]
						}
					]
				},
				{
					"ID": "20230102123534-2b3qaev",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230102123534-2b3qaev"
					},
					"Children": [
						{
							"ID": "20230102123534-v54272v",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230102123534-v54272v"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "a",
									"TextMarkAHref": "https://link.zhihu.com/?target=https%3A//github.com/google/cayley",
									"TextMarkTextContent": "cayley"
								},
								{
									"Type": "NodeText",
									"Data": " - Cayley is an open-source graph database using Bolt as optional backend."
								}
							]
						}
					]
				},
				{
					"ID": "20230102123534-iiqi8vi",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230102123534-iiqi8vi"
					},
					"Children": [
						{
							"ID": "20230102123534-sfbgc3r",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230102123534-sfbgc3r"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "a",
									"TextMarkAHref": "https://link.zhihu.com/?target=https%3A//github.com/pressly/chainstore",
									"TextMarkTextContent": "ChainStore"
								},
								{
									"Type": "NodeText",
									"Data": " - Simple key-value interface to a variety of storage engines organized as a chain of operations."
								}
							]
						}
					]
				},
				{
					"ID": "20230102123534-7pu6rl4",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230102123534-7pu6rl4"
					},
					"Children": [
						{
							"ID": "20230102123534-2wvyarb",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230102123534-2wvyarb"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "a",
									"TextMarkAHref": "https://link.zhihu.com/?target=https%3A//github.com/hashicorp/consul",
									"TextMarkTextContent": "Consul"
								},
								{
									"Type": "NodeText",
									"Data": " - Consul is service discovery and configuration made easy. Distributed, highly available, and datacenter-aware."
								}
							]
						}
					]
				},
				{
					"ID": "20230102123534-kttcd4e",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230102123534-kttcd4e"
					},
					"Children": [
						{
							"ID": "20230102123534-wztg1ua",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230102123534-wztg1ua"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "a",
									"TextMarkAHref": "https://link.zhihu.com/?target=https%3A//github.com/janelia-flyem/dvid",
									"TextMarkTextContent": "DVID"
								},
								{
									"Type": "NodeText",
									"Data": " - Added Bolt as optional storage engine and testing it against Basho-tuned leveldb."
								}
							]
						}
					]
				},
				{
					"ID": "20230102123534-e1t2n3a",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230102123534-e1t2n3a"
					},
					"Children": [
						{
							"ID": "20230102123534-o0rqtt0",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230102123534-o0rqtt0"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "a",
									"TextMarkAHref": "https://link.zhihu.com/?target=https%3A//github.com/decred/dcrwallet",
									"TextMarkTextContent": "dcrwallet"
								},
								{
									"Type": "NodeText",
									"Data": " - A wallet for the Decred cryptocurrency."
								}
							]
						}
					]
				},
				{
					"ID": "20230102123534-ap6p1am",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230102123534-ap6p1am"
					},
					"Children": [
						{
							"ID": "20230102123534-k9izakt",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230102123534-k9izakt"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "a",
									"TextMarkAHref": "https://link.zhihu.com/?target=https%3A//github.com/odeke-em/drive",
									"TextMarkTextContent": "drive"
								},
								{
									"Type": "NodeText",
									"Data": " - drive is an unofficial Google Drive command line client for *NIX operating systems."
								}
							]
						}
					]
				},
				{
					"ID": "20230102123534-7lh83s7",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230102123534-7lh83s7"
					},
					"Children": [
						{
							"ID": "20230102123534-u4qm5g2",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230102123534-u4qm5g2"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "a",
									"TextMarkAHref": "https://link.zhihu.com/?target=https%3A//github.com/sclasen/event-shuttle",
									"TextMarkTextContent": "event-shuttle"
								},
								{
									"Type": "NodeText",
									"Data": " - A Unix system service to collect and reliably deliver messages to Kafka."
								}
							]
						}
					]
				},
				{
					"ID": "20230102123534-iwmulh6",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230102123534-iwmulh6"
					},
					"Children": [
						{
							"ID": "20230102123534-yzhp80x",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230102123534-yzhp80x"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "a",
									"TextMarkAHref": "https://link.zhihu.com/?target=http%3A//tshannon.bitbucket.org/freehold/",
									"TextMarkTextContent": "Freehold"
								},
								{
									"Type": "NodeText",
									"Data": " - An open, secure, and lightweight platform for your files and data."
								}
							]
						}
					]
				},
				{
					"ID": "20230102123534-7blecz7",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230102123534-7blecz7"
					},
					"Children": [
						{
							"ID": "20230102123534-nt214m5",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230102123534-nt214m5"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "a",
									"TextMarkAHref": "https://link.zhihu.com/?target=https%3A//goreportcard.com/",
									"TextMarkTextContent": "Go Report Card"
								},
								{
									"Type": "NodeText",
									"Data": " - Go code quality report cards as a (free and open source) service."
								}
							]
						}
					]
				},
				{
					"ID": "20230102123534-bv5bvrj",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230102123534-bv5bvrj"
					},
					"Children": [
						{
							"ID": "20230102123534-l3ag5bd",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230102123534-l3ag5bd"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "a",
									"TextMarkAHref": "https://link.zhihu.com/?target=https%3A//github.com/josephspurrier/gowebapp",
									"TextMarkTextContent": "GoWebApp"
								},
								{
									"Type": "NodeText",
									"Data": " - A basic MVC web application in Go using BoltDB."
								}
							]
						}
					]
				},
				{
					"ID": "20230102123534-qh4g76m",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230102123534-qh4g76m"
					},
					"Children": [
						{
							"ID": "20230102123534-5jdx5bn",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230102123534-5jdx5bn"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "a",
									"TextMarkAHref": "https://link.zhihu.com/?target=https%3A//github.com/pankajkhairnar/goShort",
									"TextMarkTextContent": "GoShort"
								},
								{
									"Type": "NodeText",
									"Data": " - GoShort is a URL shortener written in Golang and BoltDB for persistent key/value storage and for routing it's using high performent HTTPRouter."
								}
							]
						}
					]
				},
				{
					"ID": "20230102123534-rqbqkbr",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230102123534-rqbqkbr"
					},
					"Children": [
						{
							"ID": "20230102123534-q1ieayj",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230102123534-q1ieayj"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "a",
									"TextMarkAHref": "https://link.zhihu.com/?target=https%3A//github.com/gopherpit/gopherpit",
									"TextMarkTextContent": "gopherpit"
								},
								{
									"Type": "NodeText",
									"Data": " - A web service to manage Go remote import paths with custom domains"
								}
							]
						}
					]
				},
				{
					"ID": "20230102123534-b23hvfi",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230102123534-b23hvfi"
					},
					"Children": [
						{
							"ID": "20230102123534-wf89s7u",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230102123534-wf89s7u"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "a",
									"TextMarkAHref": "https://link.zhihu.com/?target=https%3A//github.com/gitchain/gitchain",
									"TextMarkTextContent": "Gitchain"
								},
								{
									"Type": "NodeText",
									"Data": " - Decentralized, peer-to-peer Git repositories aka \"Git meets Bitcoin\"."
								}
							]
						}
					]
				},
				{
					"ID": "20230102123534-0re4ug2",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230102123534-0re4ug2"
					},
					"Children": [
						{
							"ID": "20230102123534-87hou0b",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230102123534-87hou0b"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "a",
									"TextMarkAHref": "https://link.zhihu.com/?target=https%3A//influxdata.com/",
									"TextMarkTextContent": "InfluxDB"
								},
								{
									"Type": "NodeText",
									"Data": " - Scalable datastore for metrics, events, and real-time analytics."
								}
							]
						}
					]
				},
				{
					"ID": "20230102123534-javt7fn",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230102123534-javt7fn"
					},
					"Children": [
						{
							"ID": "20230102123534-vsxo6fk",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230102123534-vsxo6fk"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "a",
									"TextMarkAHref": "https://link.zhihu.com/?target=https%3A//github.com/AndreasBriese/ipLocator",
									"TextMarkTextContent": "ipLocator"
								},
								{
									"Type": "NodeText",
									"Data": " - A fast ip-geo-location-server using bolt with bloom filters."
								}
							]
						}
					]
				},
				{
					"ID": "20230102123534-om7lb33",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230102123534-om7lb33"
					},
					"Children": [
						{
							"ID": "20230102123534-m3wjbge",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230102123534-m3wjbge"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "a",
									"TextMarkAHref": "https://link.zhihu.com/?target=https%3A//github.com/kelseyhightower/ipxed",
									"TextMarkTextContent": "ipxed"
								},
								{
									"Type": "NodeText",
									"Data": " - Web interface and api for ipxed."
								}
							]
						}
					]
				},
				{
					"ID": "20230102123534-7b6r0eg",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230102123534-7b6r0eg"
					},
					"Children": [
						{
							"ID": "20230102123534-kg4z5oe",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230102123534-kg4z5oe"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "a",
									"TextMarkAHref": "https://link.zhihu.com/?target=https%3A//github.com/timshannon/ironsmith",
									"TextMarkTextContent": "Ironsmith"
								},
								{
									"Type": "NodeText",
									"Data": " - A simple, script-driven continuous integration (build - \u003e test -\u003e release) tool, with no external dependencies"
								}
							]
						}
					]
				},
				{
					"ID": "20230102123534-1sz43vn",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230102123534-1sz43vn"
					},
					"Children": [
						{
							"ID": "20230102123534-7ofrlf5",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230102123534-7ofrlf5"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "a",
									"TextMarkAHref": "https://link.zhihu.com/?target=https%3A//github.com/ajvb/kala",
									"TextMarkTextContent": "Kala"
								},
								{
									"Type": "NodeText",
									"Data": " - Kala is a modern job scheduler optimized to run on a single node. It is persistent, JSON over HTTP API, ISO 8601 duration notation, and dependent jobs."
								}
							]
						}
					]
				},
				{
					"ID": "20230102123534-jfmmhn9",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230102123534-jfmmhn9"
					},
					"Children": [
						{
							"ID": "20230102123534-lm7bijy",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230102123534-lm7bijy"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "a",
									"TextMarkAHref": "https://link.zhihu.com/?target=https%3A//github.com/kval-access-language",
									"TextMarkTextContent": "Key Value Access Langusge (KVAL)"
								},
								{
									"Type": "NodeText",
									"Data": " - A proposed grammar for key-value datastores offering a bbolt binding."
								}
							]
						}
					]
				},
				{
					"ID": "20230102123534-7j6qiqv",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230102123534-7j6qiqv"
					},
					"Children": [
						{
							"ID": "20230102123534-0zryv3w",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230102123534-0zryv3w"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "a",
									"TextMarkAHref": "https://link.zhihu.com/?target=https%3A//github.com/siddontang/ledisdb",
									"TextMarkTextContent": "LedisDB"
								},
								{
									"Type": "NodeText",
									"Data": " - A high performance NoSQL, using Bolt as optional storage."
								}
							]
						}
					]
				},
				{
					"ID": "20230102123534-2o1z459",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230102123534-2o1z459"
					},
					"Children": [
						{
							"ID": "20230102123534-dsqz6x4",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230102123534-dsqz6x4"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "a",
									"TextMarkAHref": "https://link.zhihu.com/?target=https%3A//github.com/crowdriff/lru",
									"TextMarkTextContent": "lru"
								},
								{
									"Type": "NodeText",
									"Data": " - Easy to use Bolt-backed Least-Recently-Used (LRU) read-through cache with chainable remote stores."
								}
							]
						}
					]
				},
				{
					"ID": "20230102123534-06ia9ut",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230102123534-06ia9ut"
					},
					"Children": [
						{
							"ID": "20230102123534-w3zz3i9",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230102123534-w3zz3i9"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "a",
									"TextMarkAHref": "https://link.zhihu.com/?target=https%3A//github.com/abhigupta912/mbuckets",
									"TextMarkTextContent": "mbuckets"
								},
								{
									"Type": "NodeText",
									"Data": " - A Bolt wrapper that allows easy operations on multi level (nested) buckets."
								}
							]
						}
					]
				},
				{
					"ID": "20230102123534-3ytosf5",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230102123534-3ytosf5"
					},
					"Children": [
						{
							"ID": "20230102123534-rf9tm17",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230102123534-rf9tm17"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "a",
									"TextMarkAHref": "https://link.zhihu.com/?target=https%3A//github.com/msiebuhr/MetricBase",
									"TextMarkTextContent": "MetricBase"
								},
								{
									"Type": "NodeText",
									"Data": " - Single-binary version of Graphite."
								}
							]
						}
					]
				},
				{
					"ID": "20230102123534-ytr68dx",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230102123534-ytr68dx"
					},
					"Children": [
						{
							"ID": "20230102123534-on2uqx1",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230102123534-on2uqx1"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "a",
									"TextMarkAHref": "https://link.zhihu.com/?target=https%3A//github.com/dankomiocevic/mulifs",
									"TextMarkTextContent": "MuLiFS"
								},
								{
									"Type": "NodeText",
									"Data": " - Music Library Filesystem creates a filesystem to organise your music files."
								}
							]
						}
					]
				},
				{
					"ID": "20230102123534-fjepd0t",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230102123534-fjepd0t"
					},
					"Children": [
						{
							"ID": "20230102123534-f03w5xn",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230102123534-f03w5xn"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "a",
									"TextMarkAHref": "https://link.zhihu.com/?target=https%3A//github.com/nats-io/nats-streaming-server",
									"TextMarkTextContent": "NATS"
								},
								{
									"Type": "NodeText",
									"Data": " - NATS Streaming uses bbolt for message and metadata storage."
								}
							]
						}
					]
				},
				{
					"ID": "20230102123534-pdzy59h",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230102123534-pdzy59h"
					},
					"Children": [
						{
							"ID": "20230102123534-ty9wqab",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230102123534-ty9wqab"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "a",
									"TextMarkAHref": "https://link.zhihu.com/?target=http%3A//gocode.io/",
									"TextMarkTextContent": "Operation Go: A Routine Mission"
								},
								{
									"Type": "NodeText",
									"Data": " - An online programming game for Golang using Bolt for user accounts and a leaderboard."
								}
							]
						}
					]
				},
				{
					"ID": "20230102123534-k0yb0x2",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230102123534-k0yb0x2"
					},
					"Children": [
						{
							"ID": "20230102123534-h7uxix4",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230102123534-h7uxix4"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "a",
									"TextMarkAHref": "https://link.zhihu.com/?target=https%3A//godoc.org/bitbucket.org/kardianos/photosite/session",
									"TextMarkTextContent": "photosite/session"
								},
								{
									"Type": "NodeText",
									"Data": " - Sessions for a photo viewing site."
								}
							]
						}
					]
				},
				{
					"ID": "20230102123534-ecsuux0",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230102123534-ecsuux0"
					},
					"Children": [
						{
							"ID": "20230102123534-lic72ea",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230102123534-lic72ea"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "a",
									"TextMarkAHref": "https://link.zhihu.com/?target=https%3A//github.com/oliver006/prom_annotation_server",
									"TextMarkTextContent": "Prometheus Annotation Server"
								},
								{
									"Type": "NodeText",
									"Data": " - Annotation server for PromDash \u0026 Prometheus service monitoring system."
								}
							]
						}
					]
				},
				{
					"ID": "20230102123534-hxez0dy",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230102123534-hxez0dy"
					},
					"Children": [
						{
							"ID": "20230102123534-8iyjv36",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230102123534-8iyjv36"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "a",
									"TextMarkAHref": "https://link.zhihu.com/?target=https%3A//github.com/reef-pi/reef-pi",
									"TextMarkTextContent": "reef-pi"
								},
								{
									"Type": "NodeText",
									"Data": " - reef-pi is an award winning, modular, DIY reef tank controller using easy to learn electronics based on a Raspberry Pi."
								}
							]
						}
					]
				},
				{
					"ID": "20230102123534-sue5b1r",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230102123534-sue5b1r"
					},
					"Children": [
						{
							"ID": "20230102123534-m9zgejc",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230102123534-m9zgejc"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "a",
									"TextMarkAHref": "https://link.zhihu.com/?target=https%3A//github.com/darklynx/request-baskets",
									"TextMarkTextContent": "Request Baskets"
								},
								{
									"Type": "NodeText",
									"Data": " - A web service to collect arbitrary HTTP requests and inspect them via REST API or simple web UI, similar to "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "a",
									"TextMarkAHref": "https://link.zhihu.com/?target=http%3A//requestb.in/",
									"TextMarkTextContent": "RequestBin"
								},
								{
									"Type": "NodeText",
									"Data": " service"
								}
							]
						}
					]
				},
				{
					"ID": "20230102123534-33grhmo",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230102123534-33grhmo"
					},
					"Children": [
						{
							"ID": "20230102123534-onafqru",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230102123534-onafqru"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "a",
									"TextMarkAHref": "https://link.zhihu.com/?target=https%3A//github.com/chrislusf/seaweedfs",
									"TextMarkTextContent": "Seaweed File System"
								},
								{
									"Type": "NodeText",
									"Data": " - Highly scalable distributed key~file system with O(1) disk read."
								}
							]
						}
					]
				},
				{
					"ID": "20230102123534-c0do4fi",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230102123534-c0do4fi"
					},
					"Children": [
						{
							"ID": "20230102123534-yufpd17",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230102123534-yufpd17"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "a",
									"TextMarkAHref": "https://link.zhihu.com/?target=https%3A//github.com/djherbis/stow",
									"TextMarkTextContent": "stow"
								},
								{
									"Type": "NodeText",
									"Data": " - a persistence manager for objects backed by boltdb."
								}
							]
						}
					]
				},
				{
					"ID": "20230102123534-0na1c9s",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230102123534-0na1c9s"
					},
					"Children": [
						{
							"ID": "20230102123534-bea1msg",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230102123534-bea1msg"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "a",
									"TextMarkAHref": "https://link.zhihu.com/?target=https%3A//github.com/asdine/storm",
									"TextMarkTextContent": "Storm"
								},
								{
									"Type": "NodeText",
									"Data": " - Simple and powerful ORM for BoltDB."
								}
							]
						}
					]
				},
				{
					"ID": "20230102123534-w2mwgqo",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230102123534-w2mwgqo"
					},
					"Children": [
						{
							"ID": "20230102123534-ltanz9t",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230102123534-ltanz9t"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "a",
									"TextMarkAHref": "https://link.zhihu.com/?target=https%3A//github.com/xyproto/simplebolt",
									"TextMarkTextContent": "SimpleBolt"
								},
								{
									"Type": "NodeText",
									"Data": " - A simple way to use BoltDB. Deals mainly with strings."
								}
							]
						}
					]
				},
				{
					"ID": "20230102123534-ybpxnp7",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230102123534-ybpxnp7"
					},
					"Children": [
						{
							"ID": "20230102123534-mhqhguw",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230102123534-mhqhguw"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "a",
									"TextMarkAHref": "https://link.zhihu.com/?target=https%3A//github.com/skybox/skybox",
									"TextMarkTextContent": "Skybox Analytics"
								},
								{
									"Type": "NodeText",
									"Data": " - A standalone funnel analysis tool for web analytics."
								}
							]
						}
					]
				},
				{
					"ID": "20230102123534-lrlivdl",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230102123534-lrlivdl"
					},
					"Children": [
						{
							"ID": "20230102123534-dsautzh",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230102123534-dsautzh"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "a",
									"TextMarkAHref": "https://link.zhihu.com/?target=https%3A//github.com/benbjohnson/scuttlebutt",
									"TextMarkTextContent": "Scuttlebutt"
								},
								{
									"Type": "NodeText",
									"Data": " - Uses Bolt to store and process all Twitter mentions of GitHub projects."
								}
							]
						}
					]
				},
				{
					"ID": "20230102123534-81v7wee",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230102123534-81v7wee"
					},
					"Children": [
						{
							"ID": "20230102123534-dfbhybx",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230102123534-dfbhybx"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "a",
									"TextMarkAHref": "https://link.zhihu.com/?target=https%3A//github.com/optiflows/tentacool",
									"TextMarkTextContent": "tentacool"
								},
								{
									"Type": "NodeText",
									"Data": " - REST api server to manage system stuff (IP, DNS, Gateway...) on a linux server."
								}
							]
						}
					]
				},
				{
					"ID": "20230102123534-b2602m6",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230102123534-b2602m6"
					},
					"Children": [
						{
							"ID": "20230102123534-dqvu5d5",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230102123534-dqvu5d5"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "a",
									"TextMarkAHref": "https://link.zhihu.com/?target=https%3A//github.com/anacrolix/torrent",
									"TextMarkTextContent": "torrent"
								},
								{
									"Type": "NodeText",
									"Data": " - Full-featured BitTorrent client package and utilities in Go. BoltDB is a storage backend in development."
								}
							]
						}
					]
				},
				{
					"ID": "20230102123534-p4apd8x",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230102123534-p4apd8x"
					},
					"Children": [
						{
							"ID": "20230102123534-qchx8ui",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230102123534-qchx8ui"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "a",
									"TextMarkAHref": "https://link.zhihu.com/?target=https%3A//github.com/peterhellberg/wiki",
									"TextMarkTextContent": "Wiki"
								},
								{
									"Type": "NodeText",
									"Data": " - A tiny wiki using Goji, BoltDB and Blackfriday."
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230102123534-nf25t8f",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230102123534-nf25t8f"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "If you are using Bolt in a project please send a pull request to add it to the list."
				}
			]
		},
		{
			"ID": "20230102123534-o8705il",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230102123534-o8705il"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "                        \u003e"
				}
			]
		},
		{
			"ID": "20230102123534-20h0mtk",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20230102123534-20h0mtk"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20230102123534-hn1r3f4",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20230102123534-hn1r3f4"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "本作品采用"
						},
						{
							"Type": "NodeTextMark",
							"TextMarkType": "a",
							"TextMarkAHref": "https://learnku.com/docs/guide/cc4.0/6589",
							"TextMarkTextContent": "《CC 协议》"
						},
						{
							"Type": "NodeText",
							"Data": "，转载必须注明作者和本文链接"
						}
					]
				}
			]
		},
		{
			"ID": "20230102123534-qzx7kld",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230102123534-qzx7kld"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "                                                    []()\n                                **\n                                    @free to work for free\n                                **"
				}
			]
		}
	]
}