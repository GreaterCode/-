{
	"ID": "20230219013618-379hxom",
	"Spec": "1",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20230219013618-379hxom",
		"title": "logrus使用",
		"updated": "20230220145820"
	},
	"Children": [
		{
			"ID": "20230219013618-dafs5qi",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20230219013618-dafs5qi",
				"updated": "20230219015254"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "1. 简介"
				}
			]
		},
		{
			"ID": "20230219015609-9ecrqmr",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230219015609-9ecrqmr",
				"updated": "20230219015609"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "github地址："
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "a",
					"TextMarkAHref": "https://github.com/sirupsen/logrus",
					"TextMarkTextContent": "https://github.com/sirupsen/logrus"
				}
			]
		},
		{
			"ID": "20230219015310-7hsuihj",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230219015310-7hsuihj",
				"updated": "20230219015927"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Logrus是Go（golang）的结构化logger，与标准库logger完全API兼容。"
				}
			]
		},
		{
			"ID": "20230219015931-1hvccsh",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230219015931-1hvccsh",
				"updated": "20230219015931"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "logrus是目前Github上star数量最多的日志库。logrus功能强大，性能高效，而且具有高度灵活性，提供了自定义插件的功能。很多开源项目，如docker，prometheus等，都是用了logrus来记录其日志。"
				}
			]
		},
		{
			"ID": "20230219015318-2b9gfkh",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230219015318-2b9gfkh",
				"updated": "20230219015326"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "特点："
				}
			]
		},
		{
			"ID": "20230219015327-o5ynmks",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20230219015327-o5ynmks",
				"updated": "20230219015327"
			},
			"Children": [
				{
					"ID": "20230219015327-69ccbbd",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230219015327-69ccbbd"
					},
					"Children": [
						{
							"ID": "20230219015332-u287lyl",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230219015332-u287lyl",
								"updated": "20230219015335"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "完全兼容标准日志库，拥有七种日志级别："
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Trace"
								},
								{
									"Type": "NodeText",
									"Data": ", "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Debug"
								},
								{
									"Type": "NodeText",
									"Data": ", "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Info"
								},
								{
									"Type": "NodeText",
									"Data": ", "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Warning"
								},
								{
									"Type": "NodeText",
									"Data": ", "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Error"
								},
								{
									"Type": "NodeText",
									"Data": ", "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Fatal"
								},
								{
									"Type": "NodeText",
									"Data": "and "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Panic"
								},
								{
									"Type": "NodeText",
									"Data": "。"
								}
							]
						}
					]
				},
				{
					"ID": "20230219015341-9d1ql12",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230219015341-9d1ql12"
					},
					"Children": [
						{
							"ID": "20230219015341-7pzjd1d",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230219015341-7pzjd1d"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "可扩展的Hook机制，允许使用者通过Hook的方式将日志分发到任意地方，如本地文件系统，logstash，elasticsearch或者mq等，或者通过Hook定义日志内容和格式等"
								}
							]
						}
					]
				},
				{
					"ID": "20230219015341-esnsc8z",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230219015341-esnsc8z"
					},
					"Children": [
						{
							"ID": "20230219015341-nzux2sg",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230219015341-nzux2sg"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "线程安全"
								}
							]
						}
					]
				},
				{
					"ID": "20230219015341-mynlwip",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230219015341-mynlwip"
					},
					"Children": [
						{
							"ID": "20230219015341-m0x5et8",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230219015341-m0x5et8"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Field机制，通过Filed机制进行结构化的日志记录"
								}
							]
						}
					]
				},
				{
					"ID": "20230219015341-o9d8klz",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230219015341-o9d8klz"
					},
					"Children": [
						{
							"ID": "20230219015341-j8j43tm",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230219015341-j8j43tm"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "可选的日志输出格式，内置了两种日志格式JSONFormater和TextFormatter，还可以自定义日志格式"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230219015255-hibiysg",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20230219015255-hibiysg",
				"updated": "20230219015300"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "2. 安装"
				}
			]
		},
		{
			"ID": "20230219015410-a13w2w6",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230219015410-a13w2w6",
				"updated": "20230219015430"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "go get github.com/sirupsen/logrus"
				}
			]
		},
		{
			"ID": "20230219015301-yt1jqwj",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20230219015301-yt1jqwj",
				"updated": "20230219015304"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "3. 示例"
				}
			]
		},
		{
			"ID": "20230219015405-zpa7xif",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20230219015405-zpa7xif",
				"updated": "20230219021428"
			},
			"Children": [
				{
					"ID": "20230219021303-44fg0w0",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230219021303-44fg0w0",
						"updated": "20230219021428"
					},
					"Children": [
						{
							"ID": "20230219021303-28esogc",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230219021303-28esogc",
								"updated": "20230219021316"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "设置日志输出位置"
								}
							]
						},
						{
							"ID": "20230219021327-5rcltmp",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20230219021327-5rcltmp",
								"updated": "20230219021428"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "XA=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": " // 设置日志输出为os.Stdout\n  log.Out = os.Stdout\n\n // 可以设置像文件等任意`io.Writer`类型作为日志输出\n file, err := os.OpenFile(\"logrus.log\", os.O_CREATE|os.O_WRONLY|os.O_APPEND, 0666)\n if err == nil {\n\tlog.Out = file\n} else {\n \tlog.Info(\"Failed to log to file, using default stderr\")\n}\n\n\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230219021456-o7kybgr",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20230219021456-o7kybgr",
				"updated": "20230219021540"
			},
			"Children": [
				{
					"ID": "20230219021458-y8y6r99",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230219021458-y8y6r99",
						"updated": "20230219021540"
					},
					"Children": [
						{
							"ID": "20230219021458-7sx40op",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230219021458-7sx40op",
								"updated": "20230219021506"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "设置日志级别"
								}
							]
						},
						{
							"ID": "20230219021506-liz9bw5",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230219021506-liz9bw5",
								"updated": "20230219021540"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "只会记录具有该级别或以上级别任何内容的条目，Logrus有七个日志级别："
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Trace"
								},
								{
									"Type": "NodeText",
									"Data": ", "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Debug"
								},
								{
									"Type": "NodeText",
									"Data": ", "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Info"
								},
								{
									"Type": "NodeText",
									"Data": ", "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Warning"
								},
								{
									"Type": "NodeText",
									"Data": ", "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Error"
								},
								{
									"Type": "NodeText",
									"Data": ", "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Fatal"
								},
								{
									"Type": "NodeText",
									"Data": "and "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Panic"
								}
							]
						},
						{
							"ID": "20230219021514-6ztzdnf",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20230219021514-6ztzdnf",
								"updated": "20230219021514"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "XA=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "// 会记录info及以上级别 (warn, error, fatal, panic)\nlog.SetLevel(log.InfoLevel)"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230219021609-u6r67v3",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20230219021609-u6r67v3",
				"updated": "20230219021619"
			},
			"Children": [
				{
					"ID": "20230219021613-jx9nnuy",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230219021613-jx9nnuy",
						"updated": "20230219021619"
					},
					"Children": [
						{
							"ID": "20230219021613-xg6hsw3",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230219021613-xg6hsw3",
								"updated": "20230219021619"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "格式化"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230219021630-8b9fa5x",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230219021630-8b9fa5x",
				"updated": "20230219021648"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "\tlogrus内置以下两种日志格式化程序："
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "logrus.TextFormatter"
				},
				{
					"Type": "NodeText",
					"Data": " "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "logrus.JSONFormatter"
				},
				{
					"Type": "NodeText",
					"Data": "，还支持一些第三方的格式化程序"
				}
			]
		},
		{
			"ID": "20230219021715-nz8gdgx",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20230219021715-nz8gdgx",
				"updated": "20230219084303"
			},
			"Children": [
				{
					"ID": "20230219021716-5dqnuvw",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230219021716-5dqnuvw",
						"updated": "20230219084303"
					},
					"Children": [
						{
							"ID": "20230219021716-umhrz50",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230219021716-umhrz50",
								"updated": "20230219021719"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "字段"
								}
							]
						},
						{
							"ID": "20230219021720-2j6xwog",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230219021720-2j6xwog",
								"updated": "20230219021726"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Logrus鼓励通过日志字段进行谨慎的结构化日志记录，而不是冗长的、不可解析的错误消息。"
								}
							]
						},
						{
							"ID": "20230219022011-6ajregq",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230219022011-6ajregq",
								"updated": "20230219022120"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "例如："
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "WithFields"
								},
								{
									"Type": "NodeText",
									"Data": "是可选的"
								}
							]
						},
						{
							"ID": "20230219022039-8wdqg5w",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20230219022039-8wdqg5w",
								"updated": "20230219084303"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "XA=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "log.Fatalf(\"Failed to send event %s to topic %s with key %d\", event, topic, key)\n \n//替代方案\n \nlog.WithFields(log.Fields{\n \"event\": event,\n \"topic\": topic,\n \"key\": key,\n}).Fatal(\"Failed to send event\")\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						},
						{
							"ID": "20230219021751-ps40vti",
							"Type": "NodeList",
							"ListData": {},
							"Properties": {
								"id": "20230219021751-ps40vti",
								"updated": "20230219022223"
							},
							"Children": [
								{
									"ID": "20230219021750-1msh679",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20230219021750-1msh679"
									},
									"Children": [
										{
											"ID": "20230219021750-yveup2r",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20230219021750-yveup2r",
												"updated": "20230219021756"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "设置默认字段"
												}
											]
										},
										{
											"ID": "20230219021908-tk3sbc4",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20230219021908-tk3sbc4",
												"updated": "20230219022000"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "可以如下面requestLogger 示例首先设置logrus.Entry传递这些字段"
												}
											]
										},
										{
											"ID": "20230219021757-mcncmuj",
											"Type": "NodeCodeBlock",
											"IsFencedCodeBlock": true,
											"Properties": {
												"id": "20230219021757-mcncmuj",
												"updated": "20230219021900"
											},
											"Children": [
												{
													"Type": "NodeCodeBlockFenceOpenMarker",
													"Data": "```"
												},
												{
													"Type": "NodeCodeBlockFenceInfoMarker",
													"CodeBlockInfo": "XA=="
												},
												{
													"Type": "NodeCodeBlockCode",
													"Data": "requestLogger := log.WithFields(log.Fields{\"request_id\": request_id, \"user_ip\": user_ip})\nrequestLogger.Info(\"something happened on that request\") # will log request_id and user_ip\nrequestLogger.Warn(\"something not great happened\")\n"
												},
												{
													"Type": "NodeCodeBlockFenceCloseMarker",
													"Data": "```"
												}
											]
										}
									]
								},
								{
									"ID": "20230219022158-pgzyyjp",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20230219022158-pgzyyjp",
										"updated": "20230219022223"
									},
									"Children": [
										{
											"ID": "20230219022158-05zbcwc",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20230219022158-05zbcwc",
												"updated": "20230219022213"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "下面字段会自动加入日志中"
												}
											]
										},
										{
											"ID": "20230219022223-3bi69hb",
											"Type": "NodeList",
											"ListData": {},
											"Properties": {
												"id": "20230219022223-3bi69hb",
												"updated": "20230219022223"
											},
											"Children": [
												{
													"ID": "20230219022223-hniladr",
													"Type": "NodeListItem",
													"ListData": {
														"BulletChar": 42,
														"Marker": "Kg=="
													},
													"Properties": {
														"id": "20230219022223-hniladr"
													},
													"Children": [
														{
															"ID": "20230219022223-8rbe5q7",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20230219022223-8rbe5q7"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "time：记录日志时的时间戳"
																}
															]
														}
													]
												},
												{
													"ID": "20230219022223-gdmhoz5",
													"Type": "NodeListItem",
													"ListData": {
														"BulletChar": 42,
														"Marker": "Kg=="
													},
													"Properties": {
														"id": "20230219022223-gdmhoz5"
													},
													"Children": [
														{
															"ID": "20230219022223-jn9ukzi",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20230219022223-jn9ukzi"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "msg：记录的日志信息"
																}
															]
														}
													]
												},
												{
													"ID": "20230219022223-a0ixv8c",
													"Type": "NodeListItem",
													"ListData": {
														"BulletChar": 42,
														"Marker": "Kg=="
													},
													"Properties": {
														"id": "20230219022223-a0ixv8c"
													},
													"Children": [
														{
															"ID": "20230219022223-xrfd73z",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20230219022223-xrfd73z"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "level：记录的日志级别"
																}
															]
														}
													]
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230219022216-gddbsro",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20230219022216-gddbsro",
				"updated": "20230220151831"
			},
			"Children": [
				{
					"ID": "20230219022318-kegkdds",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230219022318-kegkdds",
						"updated": "20230219022403"
					},
					"Children": [
						{
							"ID": "20230219022318-loa1v6l",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230219022318-loa1v6l",
								"updated": "20230219022322"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "记录函数名"
								}
							]
						},
						{
							"ID": "20230219022345-fzxq1tf",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230219022345-fzxq1tf",
								"updated": "20230219022403"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "日志中打印调用的函数名，可以按照如下设置："
								}
							]
						},
						{
							"ID": "20230219022323-5xt517v",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230219022323-5xt517v",
								"updated": "20230219022337"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "log.SetReportCaller(true)"
								}
							]
						}
					]
				},
				{
					"ID": "20230220151029-tocjos8",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230220151029-tocjos8",
						"updated": "20230220151831"
					},
					"Children": [
						{
							"ID": "20230220151029-q7gi10q",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230220151029-q7gi10q",
								"updated": "20230220151254"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "mark",
									"TextMarkTextContent": "logrus默认不支持输出文件名和行号"
								}
							]
						},
						{
							"ID": "20230220151100-y5tfkne",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230220151100-y5tfkne",
								"updated": "20230220151439"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "可以使用hook扩展，实现相关功能，但是较为损耗性能，在生产环境比较损耗性能"
								}
							]
						},
						{
							"ID": "20230220151453-lh07kj9",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230220151453-lh07kj9",
								"updated": "20230220151455"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "”hook是扩展日志的功能，在每次写入日志的时候就拦截，修改其中的entry。”"
								}
							]
						},
						{
							"ID": "20230220151502-oyitkq5",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20230220151502-oyitkq5",
								"updated": "20230220151506"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "XA=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "这个是logrus中定义的接口\n\npackage logrus\n\n// A hook to be fired when logging on the logging levels returned from\n// `Levels()` on your implementation of the interface. Note that this is not\n// fired in a goroutine or a channel with workers, you should handle such\n// functionality yourself if your call is non-blocking and you don't wish for\n// the logging calls for levels returned from `Levels()` to block.\ntype Hook interface {\n   Levels() []Level\n   Fire(*Entry) error\n}\n\n// Internal type for storing the hooks on a logger instance.\ntype LevelHooks map[Level][]Hook\n\n// Add a hook to an instance of logger. This is called with\n// `log.Hooks.Add(new(MyHook))` where `MyHook` implements the `Hook` interface.\nfunc (hooks LevelHooks) Add(hook Hook) {\n   for _, level := range hook.Levels() {\n      hooks[level] = append(hooks[level], hook)\n   }\n}\n\n// Fire all the hooks for the passed level. Used by `entry.log` to fire\n// appropriate hooks for a log entry.\nfunc (hooks LevelHooks) Fire(level Level, entry *Entry) error {\n   for _, hook := range hooks[level] {\n      if err := hook.Fire(entry); err != nil {\n         return err\n      }\n   }\n\n   return nil\n}\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						},
						{
							"ID": "20230220151637-d4e5osz",
							"Type": "NodeList",
							"ListData": {},
							"Properties": {
								"id": "20230220151637-d4e5osz",
								"updated": "20230220151831"
							},
							"Children": [
								{
									"ID": "20230220151722-7x3sg63",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20230220151722-7x3sg63"
									},
									"Children": [
										{
											"ID": "20230220151722-g087mto",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20230220151722-g087mto",
												"updated": "20230220151745"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "增加请求ID，保证请求统一记录"
												}
											]
										},
										{
											"ID": "20230220151745-2kvwol9",
											"Type": "NodeCodeBlock",
											"IsFencedCodeBlock": true,
											"Properties": {
												"id": "20230220151745-2kvwol9",
												"updated": "20230220151755"
											},
											"Children": [
												{
													"Type": "NodeCodeBlockFenceOpenMarker",
													"Data": "```"
												},
												{
													"Type": "NodeCodeBlockFenceInfoMarker",
													"CodeBlockInfo": "XA=="
												},
												{
													"Type": "NodeCodeBlockCode",
													"Data": "package tool\n\nimport (\n   \"github.com/sirupsen/logrus\"\n)\n\ntype LogrusHook struct {\n}\n\n//设置所有的日志等级都走这个钩子\nfunc (hook *LogrusHook) Levels() []logrus.Level {\n   return logrus.AllLevels\n}\n//修改其中的数据，或者进行其他操作\nfunc (hook *LogrusHook) Fire(entry *logrus.Entry) error {\n   entry.Data[\"request_id\"] = GetNewUid()\n   return nil\n}\n"
												},
												{
													"Type": "NodeCodeBlockFenceCloseMarker",
													"Data": "```"
												}
											]
										}
									]
								},
								{
									"ID": "20230220151639-q7esdh5",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20230220151639-q7esdh5",
										"updated": "20230220151831"
									},
									"Children": [
										{
											"ID": "20230220151639-l1p3c3u",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20230220151639-l1p3c3u",
												"updated": "20230220151817"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "扩展 错误日志记录，获取错误信息所在的文件以及行数"
												}
											]
										},
										{
											"ID": "20230220151819-3y51sq5",
											"Type": "NodeCodeBlock",
											"IsFencedCodeBlock": true,
											"Properties": {
												"id": "20230220151819-3y51sq5",
												"updated": "20230220151831"
											},
											"Children": [
												{
													"Type": "NodeCodeBlockFenceOpenMarker",
													"Data": "```"
												},
												{
													"Type": "NodeCodeBlockFenceInfoMarker",
													"CodeBlockInfo": "XA=="
												},
												{
													"Type": "NodeCodeBlockCode",
													"Data": "func getErrorFileAndLine(err error) {\n   //获取上层运行时的文件以及行数\n   for skip := 1; true; skip++ {\n      //获取上层运行时的文件以及行数\n      _, file, line, ok := runtime.Caller(skip)\n      if ok {\n         var resultBody logrus.Fields\n         resultBody = make(map[string]interface{})\n         resultBody[\"file_path\"] = file\n         resultBody[\"error_line\"] = line\n         resultBody[\"error_message\"] = err.Error()\n         LogErrorInfoToFile(resultBody)\n      }else {\n         break\n      }\n   }\n}\n \n"
												},
												{
													"Type": "NodeCodeBlockFenceCloseMarker",
													"Data": "```"
												}
											]
										},
										{
											"ID": "20230220151808-0agc88u",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20230220151808-0agc88u"
											}
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20230220143833-61hl8lf",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230220143833-61hl8lf"
					},
					"Children": [
						{
							"ID": "20230220143833-2cgdebu",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230220143833-2cgdebu",
								"updated": "20230220143844"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "日志切割"
								}
							]
						},
						{
							"ID": "20230220143845-s7zx5t5",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230220143845-s7zx5t5",
								"updated": "20230220144026"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "logrus本身无日志切割功能，可以利用第三方工具实现"
								}
							]
						},
						{
							"ID": "20230220144027-0jp0aqo",
							"Type": "NodeList",
							"ListData": {},
							"Properties": {
								"id": "20230220144027-0jp0aqo"
							},
							"Children": [
								{
									"ID": "20230220144026-gp00rl1",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20230220144026-gp00rl1"
									},
									"Children": [
										{
											"ID": "20230220144026-23rhs18",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20230220144026-23rhs18",
												"updated": "20230220144054"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "使用linux系统的 logrotate 命令来 切割"
												}
											]
										}
									]
								},
								{
									"ID": "20230220144055-vb40i46",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20230220144055-vb40i46"
									},
									"Children": [
										{
											"ID": "20230220144055-ekbirhu",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20230220144055-ekbirhu",
												"updated": "20230220144115"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "使用 "
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "a",
													"TextMarkAHref": "https://github.com/lestrrat-go/file-rotatelogs",
													"TextMarkTextContent": "file-rotatelogs"
												},
												{
													"Type": "NodeText",
													"Data": "插件"
												}
											]
										}
									]
								},
								{
									"ID": "20230220144116-zkeiz4k",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20230220144116-zkeiz4k"
									},
									"Children": [
										{
											"ID": "20230220144116-8w73kms",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20230220144116-8w73kms",
												"updated": "20230220144128"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "使用 "
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "a",
													"TextMarkAHref": "https://github.com/natefinch/lumberjack",
													"TextMarkTextContent": "https://github.com/natefinch/lumberjack"
												},
												{
													"Type": "NodeText",
													"Data": " 库"
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230219022314-th4q30z",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20230219022314-th4q30z",
				"updated": "20230220084448"
			},
			"Children": [
				{
					"ID": "20230219022415-k33ih51",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230219022415-k33ih51",
						"updated": "20230220084448"
					},
					"Children": [
						{
							"ID": "20230219022415-pvxh9j4",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230219022415-pvxh9j4",
								"updated": "20230219022419"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Hooks"
								}
							]
						},
						{
							"ID": "20230220084448-6ifpsq2",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230220084448-6ifpsq2",
								"updated": "20230220084448"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "logrus 也有一些内置插件"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "a",
									"TextMarkAHref": "https://github.com/sirupsen/logrus/blob/master/hooks",
									"TextMarkTextContent": "hooks"
								},
								{
									"Type": "NodeText",
									"Data": "。"
								}
							]
						},
						{
							"ID": "20230220084448-503u393",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230220084448-503u393",
								"updated": "20230220084448"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "第三方给 logrus 编写的 hook， "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "a",
									"TextMarkAHref": "https://github.com/sirupsen/logrus/wiki/Hooks",
									"TextMarkTextContent": "第三方hook列表"
								},
								{
									"Type": "NodeText",
									"Data": "。"
								}
							]
						},
						{
							"ID": "20230219022420-tccj87n",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230219022420-tccj87n",
								"updated": "20230219022730"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "logrus配有内置钩子，可以在在init函数中添加内置钩子或者 自定义钩子，将日志发送到多个位置，如日志服务器进行日志审计"
								}
							]
						},
						{
							"ID": "20230219022733-5acanil",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20230219022733-5acanil",
								"updated": "20230219022745"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "XA=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "import (\n  log \"github.com/sirupsen/logrus\"\n  \"gopkg.in/gemnasium/logrus-airbrake-hook.v2\" // the package is named \"airbrake\"\n  logrus_syslog \"github.com/sirupsen/logrus/hooks/syslog\"\n  \"log/syslog\"\n)\n\nfunc init() {\n\n  // Use the Airbrake hook to report errors that have Error severity or above to\n  // an exception tracker. You can create custom hooks, see the Hooks section.\n  log.AddHook(airbrake.NewHook(123, \"xyz\", \"production\"))\n\n  hook, err := logrus_syslog.NewSyslogHook(\"udp\", \"localhost:514\", syslog.LOG_INFO, \"\")\n  if err != nil {\n    log.Error(\"Unable to connect to local syslog daemon\")\n  } else {\n    log.AddHook(hook)\n  }\n}\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230219022813-a0awsgh",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230219022813-a0awsgh",
				"updated": "20230219022818"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "\t注意：Syslog钩子还支持连接到本地syslog（例如. “/dev/log” or “/var/run/syslog” or “/var/run/log”)。有关详细信息，请查看"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "a",
					"TextMarkAHref": "https://github.com/sirupsen/logrus/blob/master/hooks/syslog/README.md",
					"TextMarkTextContent": "syslog hook README"
				},
				{
					"Type": "NodeText",
					"Data": "。"
				}
			]
		},
		{
			"ID": "20230220144713-efvv1bf",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20230220144713-efvv1bf",
				"updated": "20230220145820"
			},
			"Children": [
				{
					"ID": "20230220144715-3czmmai",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230220144715-3czmmai"
					},
					"Children": [
						{
							"ID": "20230220144715-cnzkskv",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230220144715-cnzkskv",
								"updated": "20230220144749"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Fatal处理、"
								}
							]
						},
						{
							"ID": "20230220144749-gdiyid8",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230220144749-gdiyid8",
								"updated": "20230220145716"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "logrus的Fatal系列函数会执行os.Exit(1)。但是logrus提供可以注"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "mark",
									"TextMarkTextContent": "册一个或多个fatal handler函数的接口logrus.RegisterExitHandler(handler func() {}"
								},
								{
									"Type": "NodeText",
									"Data": " )，让logrus在执行os.Exit(1)之前进行相应的处理。fatal handler可以在系统异常时调用一些资源释放api等，让应用正确的关闭"
								}
							]
						}
					]
				},
				{
					"ID": "20230220144745-allcczf",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230220144745-allcczf",
						"updated": "20230220145820"
					},
					"Children": [
						{
							"ID": "20230220144745-cg5gn1z",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230220144745-cg5gn1z",
								"updated": "20230220144748"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "线程安全"
								}
							]
						},
						{
							"ID": "20230220145742-bddh2py",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230220145742-bddh2py",
								"updated": "20230220150240"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "默认情况下，logrus的api都是线程安全的，其内部通过互斥锁来保护并发写。互斥锁工作于调用hooks或者写日志的时候，如果不需要锁，可以调用"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "mark",
									"TextMarkTextContent": "logger.SetNoLock()"
								},
								{
									"Type": "NodeText",
									"Data": "来关闭之。可以关闭logrus互斥锁的情形包括："
								}
							]
						},
						{
							"ID": "20230220145725-wssunio",
							"Type": "NodeList",
							"ListData": {},
							"Properties": {
								"id": "20230220145725-wssunio"
							},
							"Children": [
								{
									"ID": "20230220145725-rurjztb",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20230220145725-rurjztb"
									},
									"Children": [
										{
											"ID": "20230220145725-cs9lscg",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20230220145725-cs9lscg"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "没有设置hook，或者所有的hook都是线程安全的实现。"
												}
											]
										}
									]
								}
							]
						},
						{
							"ID": "20230220145820-hkq8l0f",
							"Type": "NodeList",
							"ListData": {},
							"Properties": {
								"id": "20230220145820-hkq8l0f",
								"updated": "20230220145820"
							},
							"Children": [
								{
									"ID": "20230220145820-b68vb85",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20230220145820-b68vb85",
										"updated": "20230220145820"
									},
									"Children": [
										{
											"ID": "20230220145820-jl5egqr",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20230220145820-jl5egqr",
												"updated": "20230220145820"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "写日志到"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "logger.Out"
												},
												{
													"Type": "NodeText",
													"Data": "已经是线程安全的了，如"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "logger.Out"
												},
												{
													"Type": "NodeText",
													"Data": "已经被锁保护，或者写文件时，文件是以"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "O_APPEND"
												},
												{
													"Type": "NodeText",
													"Data": "方式打开的，并且每次写操作都小于4k。"
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230220084720-4ba9se2",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230220084720-4ba9se2",
				"updated": "20230220113806"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "gin框架日志中间件的使用 "
				}
			]
		},
		{
			"ID": "20230220134921-simuloo",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230220134921-simuloo",
				"updated": "20230220134921"
			}
		},
		{
			"ID": "20230220113807-fxhwfov",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230220113807-fxhwfov",
				"updated": "20230220114323"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "XA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "package middleware\n \nimport (\n    \"fmt\"\n    \"ginDemo/config\"\n    \"github.com/gin-gonic/gin\"\n    rotatelogs \"github.com/lestrrat-go/file-rotatelogs\"\n    \"github.com/rifflock/lfshook\"\n    \"github.com/sirupsen/logrus\"\n    \"os\"\n    \"path\"\n    \"time\"\n)\n \n// 日志记录到文件\nfunc LoggerToFile() gin.HandlerFunc {\n \n    logFilePath := config.Log_FILE_PATH\n    logFileName := config.LOG_FILE_NAME\n \n    // 日志文件\n    fileName := path.Join(logFilePath, logFileName)\n \n    // 写入文件\n    src, err := os.OpenFile(fileName, os.O_APPEND|os.O_WRONLY, os.ModeAppend)\n    if err != nil {\n        fmt.Println(\"err\", err)\n    }\n \n    // 实例化\n    logger := logrus.New()\n \n    // 设置输出\n    logger.Out = src\n \n    // 设置日志级别\n    logger.SetLevel(logrus.DebugLevel)\n \n    // 设置 rotatelogs\n    logWriter, err := rotatelogs.New(\n        // 分割后的文件名称\n        fileName + \".%Y%m%d.log\",\n \n        // 生成软链，指向最新日志文件\n        rotatelogs.WithLinkName(fileName),\n \n        // 设置最大保存时间(7天)\n        rotatelogs.WithMaxAge(7*24*time.Hour),\n \n        // 设置日志切割时间间隔(1天)\n        rotatelogs.WithRotationTime(24*time.Hour),\n    )\n \n    writeMap := lfshook.WriterMap{\n        logrus.InfoLevel:  logWriter,\n        logrus.FatalLevel: logWriter,\n        logrus.DebugLevel: logWriter,\n        logrus.WarnLevel:  logWriter,\n        logrus.ErrorLevel: logWriter,\n        logrus.PanicLevel: logWriter,\n    }\n \n    lfHook := lfshook.NewHook(writeMap, \u0026logrus.JSONFormatter{\n        TimestampFormat:\"2006-01-02 15:04:05\",\n    })\n \n    // 新增 Hook\n    logger.AddHook(lfHook)\n \n    return func(c *gin.Context) {\n        // 开始时间\n        startTime := time.Now()\n \n        // 处理请求\n        c.Next()\n \n        // 结束时间\n        endTime := time.Now()\n \n        // 执行时间\n        latencyTime := endTime.Sub(startTime)\n \n        // 请求方式\n        reqMethod := c.Request.Method\n \n        // 请求路由\n        reqUri := c.Request.RequestURI\n \n        // 状态码\n        statusCode := c.Writer.Status()\n \n        // 请求IP\n        clientIP := c.ClientIP()\n \n        // userAgent\n        userAgent := c.Request.UserAgent()\n\n        // 日志格式\n        logger.WithFields(logrus.Fields{\n            \"status_code\"  : statusCode,\n            \"latency_time\" : latencyTime,\n            \"client_ip\"    : clientIP,\n            \"req_method\"   : reqMethod,\n            \"req_uri\"      : reqUri,\n        }).Info()\n    }\n}\n \n// 日志记录到 MongoDB\nfunc LoggerToMongo() gin.HandlerFunc {\n    return func(c *gin.Context) {\n \n    }\n}\n \n// 日志记录到 ES\nfunc LoggerToES() gin.HandlerFunc {\n    return func(c *gin.Context) {\n \n    }\n}\n \n// 日志记录到 MQ\nfunc LoggerToMQ() gin.HandlerFunc {\n    return func(c *gin.Context) {\n \n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230220114055-ovy75sr",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230220114055-ovy75sr",
				"updated": "20230220114107"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "gin集成自定义中间件"
				}
			]
		},
		{
			"ID": "20230220114122-4kgsl6e",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230220114122-4kgsl6e",
				"updated": "20230220114136"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "XA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "router := gin.New()\n// 注册自定义的日志器\nrouter.Use(middleware.LoggerMiddleware())\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230220114113-0slb2gx",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230220114113-0slb2gx",
				"updated": "20230220114127"
			}
		}
	]
}