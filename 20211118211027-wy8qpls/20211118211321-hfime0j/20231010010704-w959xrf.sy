{
	"ID": "20231010010704-w959xrf",
	"Spec": "1",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20231010010704-w959xrf",
		"scroll": "{\u0026quot;startId\u0026quot;:\u0026quot;20231010012126-azk25kb\u0026quot;,\u0026quot;endId\u0026quot;:\u0026quot;20231010011930-v2ugooy\u0026quot;,\u0026quot;scrollTop\u0026quot;:4663,\u0026quot;focusId\u0026quot;:\u0026quot;20231010012306-ryg9mc9\u0026quot;,\u0026quot;focusStart\u0026quot;:79,\u0026quot;focusEnd\u0026quot;:79}",
		"title": "expect",
		"updated": "20231010012218"
	},
	"Children": [
		{
			"ID": "20231010012126-azk25kb",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20231010012126-azk25kb",
				"updated": "20231010012132"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "1. 概述"
				}
			]
		},
		{
			"ID": "20231010012151-6m6d7ga",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20231010012151-6m6d7ga",
				"updated": "20231010012151"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Expect是建立在tcl基础上的一个工具，Expect 是用来进行自动化控制和测试的工具。主要解决shell脚本中不可交互的问题。对于大规模的linux 运维很有帮助\n在linux运维和开发中，我们经常需要远程登录服务器进行操作，登录的过程是一个交互的过程，可能会需要输入yes/no password等信息。为了模拟这种输入，可以使用Expect脚本\n使用expect之前需要先安装\n​"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "yum –y intall expect"
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20231010012140-rgpscw8",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20231010012140-rgpscw8",
				"updated": "20231010012214"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "2. 基本命令"
				}
			]
		},
		{
			"ID": "20231010012216-hfp3hvz",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20231010012216-hfp3hvz",
				"updated": "20231010012218"
			},
			"Children": [
				{
					"ID": "20231010012218-v0c9d95",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20231010012218-v0c9d95",
						"updated": "20231010012218"
					},
					"Children": [
						{
							"ID": "20231010012218-4t1exma",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20231010012218-4t1exma",
								"updated": "20231010012218"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "send：向进程发送字符串，用于模拟用户的输入该命令不能自动回车换行，一般要加 \\r（回车）"
								}
							]
						}
					]
				},
				{
					"ID": "20231010012221-mq3aomi",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20231010012221-mq3aomi"
					},
					"Children": [
						{
							"ID": "20231010012221-alp4qm0",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20231010012221-alp4qm0"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "expect：expect的一个内部命令，判断上次输出结果里是否包含指定的字符串，如果有则立即返回，否则就等待超时时间后返回。只能捕捉由spawn启动的进程的输出"
								}
							]
						}
					]
				},
				{
					"ID": "20231010012224-fe4zdfp",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20231010012224-fe4zdfp"
					},
					"Children": [
						{
							"ID": "20231010012224-1vtn9xt",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20231010012224-1vtn9xt"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "spawn：启动进程，并跟踪后续交互信息"
								}
							]
						}
					]
				},
				{
					"ID": "20231010012226-3k448nn",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20231010012226-3k448nn"
					},
					"Children": [
						{
							"ID": "20231010012226-oej8fev",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20231010012226-oej8fev"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "interact：执行完成后保持交互状态，把控制权交给控制台"
								}
							]
						}
					]
				},
				{
					"ID": "20231010012229-q1ffuiw",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20231010012229-q1ffuiw"
					},
					"Children": [
						{
							"ID": "20231010012229-apnew47",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20231010012229-apnew47"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Timeout：指定超时时间，过期则继续执行后续指令"
								}
							]
						}
					]
				},
				{
					"ID": "20231010012232-4ahjmz5",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20231010012232-4ahjmz5"
					},
					"Children": [
						{
							"ID": "20231010012232-xs2c25m",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20231010012232-xs2c25m"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "exp_continue：允许expect继续向下执行指令"
								}
							]
						}
					]
				},
				{
					"ID": "20231010012235-wxda9r3",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20231010012235-wxda9r3"
					},
					"Children": [
						{
							"ID": "20231010012235-nlt7dic",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20231010012235-nlt7dic"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "send_user：回显命令，相当于echo"
								}
							]
						}
					]
				},
				{
					"ID": "20231010012306-vns5gt3",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20231010012306-vns5gt3"
					},
					"Children": [
						{
							"ID": "20231010012306-ryg9mc9",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20231010012306-ryg9mc9"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "inline-math",
									"TextMarkInlineMathContent": "argv 参数数组：Expect脚本可以接受从bash传递的参数.可以使用[lindex "
								},
								{
									"Type": "NodeText",
									"Data": "argv n]获得，n从0开始，分别表示第一个,第二个,第三个…参数\n"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20231010010704-2cly9p7",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20231010010704-2cly9p7",
				"updated": "20231010010836"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "3. 应用案例"
				}
			]
		},
		{
			"ID": "20231010010824-w00vcu6",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20231010010824-w00vcu6",
				"updated": "20231010010846"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "3.1 磁盘自动分区脚本"
				}
			]
		},
		{
			"ID": "20231010010755-bd28eyz",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20231010010755-bd28eyz",
				"updated": "20231010010923"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "#!/bin/bash\n\n#安装expect\nrpm -q expect \u0026\u003e/dev/null\nif [ $? -ne 0 ];then\n\tyum install -y expect \u003e/dev/null\n\techo \"expect安装成功\"\nfi\n\n#设置挂载硬盘的参数\nfdisk -l |egrep '^Disk /dev/sd.*'\nread -p \"请输入需要挂载得硬盘路径: \" disk_new\npartitions=\"${disk_new}1\"\n\n#expect交互脚本\n/usr/bin/expect \u003c\u003c EOF\nset timeout 30\nspawn bash -c \"fdisk $disk_new\"\n\nexpect \"Command*\" {send \"n\\r\"} \nexpect \"*p*\" {send \"p\\r\"}\nexpect \"*1*\" {send \"\\r\"}\nexpect \"First*\" {send \"\\r\"}\nexpect \"Last*\" {send \"\\r\"}\nexpect \"*help*\" {send \"wq\\r\"} \n\nexpect eof\ninteract\nEOF\n\n#格式化磁盘\nmkfs -t xfs $partitions\n\n\n#挂载\nread -p \"输入需要挂载得路径:\" target_dir\nif [ ! -d $target_dir ]\nthen\n\tmkdir -p $target_dir\nfi\necho \"$partitions            $target_dir                xfs       defaults              0 0\" \u003e\u003e /etc/fstab\n\n#重载fstab配置\nmount -a\ndf -Th\n\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20231010011030-hkt5fj2",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20231010011030-hkt5fj2",
				"updated": "20231010011034"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "3.2 远程ssh另一台主机"
				}
			]
		},
		{
			"ID": "20231010011052-32rnbep",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20231010011052-32rnbep",
				"updated": "20231010011118"
			},
			"Children": [
				{
					"ID": "20231010011057-i8l40if",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20231010011057-i8l40if",
						"updated": "20231010011118"
					},
					"Children": [
						{
							"ID": "20231010011102-60rldir",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20231010011102-60rldir",
								"updated": "20231010011102"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "需求1：A远程登录到server上什么都不做"
								}
							]
						},
						{
							"ID": "20231010011109-ofe2c36",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20231010011109-ofe2c36",
								"updated": "20231010011118"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker"
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "#!/usr/bin/expect\n# 开启一个程序\nspawn ssh root@10.1.1.1\n# 捕获相关内容\nexpect {\n        \"(yes/no)?\" { send \"yes\\r\";exp_continue }\n        \"password:\" { send \"123456\\r\" }\n}\ninteract  # interact 这个写在最后代表交互,如果不写执行完动作就会退出\n\n脚本执行方式：\n# ./expect.sh\n# /shell/expect.sh\n# expect -f expect.sh\n\n1）定义变量\n#!/usr/bin/expect\nset ip 192.168.188.188\nset pass 123\nset timeout 5\nspawn ssh root@$ip\nexpect {\n    \"yes/no\" { send \"yes\\r\";exp_continue }\n    \"password:\" { send \"$pass\\r\" }\n}\ninteract\n\n\n2）使用位置参数\n#!/usr/bin/expect\nset ip [ lindex $argv 0 ]\nset pass [ lindex $argv 1 ]\nset timeout 5\nspawn ssh root@$ip\nexpect {\n    \"yes/no\" { send \"yes\\r\";exp_continue }\n    \"password:\" { send \"$pass\\r\" }\n}\ninteract\n\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20231010011107-j3olsl9",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20231010011107-j3olsl9",
				"updated": "20231010011218"
			},
			"Children": [
				{
					"ID": "20231010011201-9goy15d",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20231010011201-9goy15d",
						"updated": "20231010011218"
					},
					"Children": [
						{
							"ID": "20231010011206-w1rt8g9",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20231010011206-w1rt8g9",
								"updated": "20231010011206"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "需求2：A远程登录到server上操作"
								}
							]
						},
						{
							"ID": "20231010011211-ipn0rkd",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20231010011211-ipn0rkd",
								"updated": "20231010011218"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker"
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "#!/usr/bin/expect\nset ip 192.168.188.188\nset pass 123\nset timeout 5\nspawn ssh root@$ip\nexpect {\n    \"yes/no\" { send \"yes\\r\";exp_continue }\n    \"password:\" { send \"$pass\\r\" }\n}\n\nexpect \"#\"\nsend \"rm -rf /tmp/*\\r\"\t\t# 删除临时文件\nsend \"touch /tmp/file{1..3}\\r\"\t# 创建临时文件\nsend \"date\\r\"\nsend \"exit\\r\"\nexpect eof\n\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20231010011239-u54pwh0",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20231010011239-u54pwh0",
				"updated": "20231010011254"
			},
			"Children": [
				{
					"ID": "20231010011242-0jsxcn4",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20231010011242-0jsxcn4",
						"updated": "20231010011254"
					},
					"Children": [
						{
							"ID": "20231010011245-iflt0gd",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20231010011245-iflt0gd",
								"updated": "20231010011245"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "需求3：shell脚本和expect结合使用，在多台服务器上创建1个用户"
								}
							]
						},
						{
							"ID": "20231010011248-wztf9g7",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20231010011248-wztf9g7",
								"updated": "20231010011254"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker"
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "[root@server shell04]# cat ip.txt \n192.168.188.188 123\n192.168.188.186 123\n\n\n1. 循环  useradd username\n2. 登录远程主机——\u003essh——\u003e从ip.txt文件里获取IP和密码分别赋值给两个变量\n3. 使用expect程序来解决交互问题\n\n\n#!/bin/bash\n# 循环在指定的服务器上创建用户和文件\nwhile read ip pass\ndo\n    /usr/bin/expect \u003c\u003c-EOF \u0026\u003e/dev/null\n    spawn ssh root@$ip\n    expect {\n    \"yes/no\" { send \"yes\\r\";exp_continue }\n    \"password:\" { send \"$pass\\r\" }\n    }\n    expect \"#\" { send \"useradd maomao;rm -rf /tmp/*;exit\\r\" }\n    expect eof\n    EOF\necho \"$ip服务器用户创建完毕\"\ndone \u003c ip.txt\n\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20231010011341-60w89wz",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20231010011341-60w89wz",
				"updated": "20231010011358"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "3.3 自动连接ftp下载文件"
				}
			]
		},
		{
			"ID": "20231010011429-lp15icz",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20231010011429-lp15icz",
				"updated": "20231010011444"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "#!/bin/bash\n#自动连接ftp服务器然后下载pub下面的test.txt\n#by stanZ 2021-1-27\nif [ $# -eq 0 ];then\n        echo \"用法:`basename $0` ftp服务器ip地址\"\n        exit 1\nfi\npgrep firewalld \u0026\u003e/dev/null\nif [ $? -eq 0 ];then\n        systemctl stop firewalld \u0026\u003e/dev/null\nfi\n\nif [[ $(getenforce) == Enforcing ]];then\n        setenforce 0\n        sed -ri '/^SELINUX=/cSELINUX=disabled' /etc/selinux/config \u0026\u003e/dev/null\nfi\n\nrpm -q expect \u0026\u003e/dev/null\nif [ $? -ne 0 ];then\n        [ $UID -eq 0 ] \u0026\u0026 yum install -y expect \u0026\u003e/dev/null || echo \"你没有权限安装expect\"\nfi\n\n{\n        /usr/bin/expect \u003c\u003c-EOF \n        set timeout 5   \n        spawn ftp $1\n        expect  {\n                \"):\" { send \"ftp\\r\";exp_continue }\n                \"Password:\" { send \"\\r\" }\n        }\n        expect \"ftp\u003e\" \n        send \"cd pub\\r\" \n        send \"get test.txt\\r\" \n        send \"bye\\r\" \n        expect eof\n        EOF\n}\u0026\u003e/dev/null\nwait\necho \"test.txt文件下载完毕\"\n                             \n\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20231010011645-potquul",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20231010011645-potquul",
				"updated": "20231010011710"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "3.4 综合案例"
				}
			]
		},
		{
			"ID": "20231010011727-c7h9wap",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20231010011727-c7h9wap",
				"updated": "20231010011727"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "写一个脚本，将跳板机上yunwei用户的公钥推送到局域网内可以ping通的所有机器上\n说明：主机和密码文件已经提供"
				}
			]
		},
		{
			"ID": "20231010011727-10abjtk",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20231010011727-10abjtk",
				"updated": "20231010011727"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "192.168.188.188:123"
				}
			]
		},
		{
			"ID": "20231010011727-cjj13lb",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20231010011727-cjj13lb",
				"updated": "20231010011727"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "192.168.188.186:123"
				}
			]
		},
		{
			"ID": "20231010011727-2ufuftt",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20231010011727-2ufuftt",
				"updated": "20231010011727"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "步骤分析"
				}
			]
		},
		{
			"ID": "20231010011749-ee3v107",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20231010011749-ee3v107",
				"updated": "20231010011837"
			},
			"Children": [
				{
					"ID": "20231010011750-5mfgm67",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20231010011750-5mfgm67",
						"updated": "20231010011750"
					},
					"Children": [
						{
							"ID": "20231010011750-vrb57w6",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20231010011750-vrb57w6",
								"updated": "20231010011810"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "跳板机上的yunwei用户生成秘钥对\n判断账号是否存在 (id yunwei)\n判断该用户是否有密钥对文件 [ -f xxx ]"
								}
							]
						}
					]
				},
				{
					"ID": "20231010011811-vi3mkp5",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20231010011811-vi3mkp5"
					},
					"Children": [
						{
							"ID": "20231010011811-e5aq638",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20231010011811-e5aq638",
								"updated": "20231010011818"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "判断expect程序是否安装\n判断局域网内主机是否ping通\n循环判断 for while\n循环体do…done ping 主机 如果ping通 调用expect程序自动应答推送公钥"
								}
							]
						}
					]
				},
				{
					"ID": "20231010011818-gbs1nm9",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20231010011818-gbs1nm9"
					},
					"Children": [
						{
							"ID": "20231010011818-nsulcys",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20231010011818-nsulcys",
								"updated": "20231010011825"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "测试验证是否免密登录成功"
								}
							]
						}
					]
				},
				{
					"ID": "20231010011826-7crp4nz",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20231010011826-7crp4nz"
					},
					"Children": [
						{
							"ID": "20231010011826-idj8h8x",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20231010011826-idj8h8x",
								"updated": "20231010011827"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "检查服务器上ssh服务端口号"
								}
							]
						}
					]
				},
				{
					"ID": "20231010011827-wykadf3",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20231010011827-wykadf3"
					},
					"Children": [
						{
							"ID": "20231010011827-v3v9wpz",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20231010011827-v3v9wpz",
								"updated": "20231010011829"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "把公钥推送成功的主机的信息保存到文件"
								}
							]
						}
					]
				},
				{
					"ID": "20231010011829-ky79e8c",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20231010011829-ky79e8c"
					},
					"Children": [
						{
							"ID": "20231010011829-8qybwnq",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20231010011829-8qybwnq",
								"updated": "20231010011830"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "关闭防火墙和selinux"
								}
							]
						}
					]
				},
				{
					"ID": "20231010011831-pxs3y7a",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20231010011831-pxs3y7a"
					},
					"Children": [
						{
							"ID": "20231010011831-94pi8ek",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20231010011831-94pi8ek",
								"updated": "20231010011832"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "日志记录"
								}
							]
						}
					]
				},
				{
					"ID": "20231010011832-j4penuo",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20231010011832-j4penuo",
						"updated": "20231010011837"
					},
					"Children": [
						{
							"ID": "20231010011832-z6vh8sg",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20231010011832-z6vh8sg",
								"updated": "20231010011837"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "推送公钥需要自动应答expect"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20231010011746-andoijt",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20231010011746-andoijt",
				"updated": "20231010011846"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "这里要实现功能 要切换成yunwei账户 必须写两个脚本文件\n第一个脚本由root执行\n第二个脚本由运维执行"
				}
			]
		},
		{
			"ID": "20231010011856-dnpluzn",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20231010011856-dnpluzn",
				"updated": "20231010011900"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "#!/bin/bash\n#ssh自动上传公钥，并且能远程控制\n#by stanZ      2021-1-11\n# 判断防火墙是否关闭\npgrep firewalld \u0026\u003e/dev/null\nif [ $? -eq 0 ];then\n        systemctl stop firewalld \u0026\u003e/dev/null\t# 关闭防火墙\nfi\n\n# 关闭selinux安全中心\nif [[ $(getenforce) = Enforcing ]];then\n        setenforce 0\n        sed -ri '/^SELINUX=/cSELINUX=disabled' /etc/selinux/config \u0026\u003e/dev/null\nfi\n\n\n{\nid yunwei \u0026\u003e/dev/null\t# 判断yunwei账户是否存在 不存在则创建\n[ $? -ne 0 ] \u0026\u0026 useradd yunwei \u0026\u0026 echo 123|passwd --stdin yunwei\n# 给yunwei账户sudo授权 取消注释\nsed -ri 's/^#(.*required.*)/\\1/' /etc/pam.d/su\nsed -ri 's/^#(.*NOPASSWD)/\\1/' /etc/sudoers\n# 加入wheel组拥有权限\ngpasswd -a yunwei wheel\n} \u003e/dev/null\n\n# 判断expect是否安装\nrpm -q expect \u0026\u003e/dev/null\nif [ $? -ne 0 ];then\n        yum install -y expect \u003e/dev/null\n        echo \"expect安装成功\"\nfi\n\nsu - yunwei\n\n\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20231010011855-7wu54a4",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20231010011855-7wu54a4",
				"updated": "20231010011918"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "补充："
				}
			]
		},
		{
			"ID": "20231010011923-bgp4vfe",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20231010011923-bgp4vfe",
				"updated": "20231010011925"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "[ ! -f /root/.ssh/id_rsa.pub ] \u0026\u0026 ssh-keygen -P '' -f /root/.ssh/id_rsa\n\nssh-keygen -P'' \t设定密码为空\n\n -f /root/.ssh/id_rsa 指定密钥位置\n \n这样就不需要交互操作\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20231010011930-v2ugooy",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20231010011930-v2ugooy",
				"updated": "20231010011935"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "#!/bin/bash\n#ssh自动上传公钥，并且能远程控制\n#by  stanZ     2021-1-11\n# 判断私钥是否创建 如果没创建则使用免交互的命令\nif [ ! -f /home/yunwei/.ssh/id_rsa ];then\n        ssh-keygen -P '' -f ~/.ssh/id_rsa \u0026\u003e/dev/null\nfi\n\nwhile read ip pass\ndo\n{\n        ping -c1 $ip \n        if [ $? -eq 0 ];then\n                echo $ip \u003e\u003e /home/yunwei/ip_up.txt\n                /usr/bin/expect \u003c\u003c-EOF\n                set timeout 10\n                spawn ssh-copy-id root@$ip\n                expect  \"(yes/no)\" { send \"yes\\r\";exp_continue }\n                expect  \"password:\" { send \"$pass\\r\" }\n                        expect eof\n                EOF\n                else\n                        echo $ip \u003e\u003e /home/yunwei/ip_down.txt\n                fi\n}\u0026\u003e/dev/null\ndone \u003c /home/ip.txt\nwait\necho \"公钥推送完毕，准备测试\"\nremote_ip=`head -1 /home/yunwei/ip_up.txt`\nssh root@$remote_ip hostname \u0026\u003e/dev/null\ntest $? -eq 0 \u0026\u0026 echo \"公钥成功推送，并且能远程连接\"\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		}
	]
}