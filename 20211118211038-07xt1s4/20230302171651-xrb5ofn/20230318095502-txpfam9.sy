{
	"ID": "20230318095502-txpfam9",
	"Spec": "1",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20230318095502-txpfam9",
		"title": "图解 Docker 架构 ",
		"updated": "20230318170132"
	},
	"Children": [
		{
			"ID": "20230318095502-0ceec7m",
			"Type": "NodeThematicBreak",
			"Properties": {
				"id": "20230318095502-0ceec7m"
			}
		},
		{
			"ID": "20230318095502-q5wlz8n",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20230318095502-q5wlz8n"
			},
			"Children": [
				{
					"ID": "20230318095502-l90vo0j",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230318095502-l90vo0j"
					},
					"Children": [
						{
							"ID": "20230318095502-6st73e4",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230318095502-6st73e4"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "a",
									"TextMarkAHref": "https://cloud.tencent.com/developer/article/1768295",
									"TextMarkTextContent": "https://cloud.tencent.com/developer/article/1768295"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230318095502-7egrbzs",
			"Type": "NodeThematicBreak",
			"Properties": {
				"id": "20230318095502-7egrbzs"
			}
		},
		{
			"ID": "20230318095502-9cwvafa",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230318095502-9cwvafa"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "01 Docker 的总体架构"
				}
			]
		},
		{
			"ID": "20230318095502-qtg5lwl",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230318095502-qtg5lwl"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Docker 是一个 C/S 模式的架构，后端是一个松耦合架构，模块各司其职。下图是它的总体架构图："
				}
			]
		},
		{
			"ID": "20230318095502-pdb6qqd",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230318095502-pdb6qqd"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/y2v8zmhqr6-20230318095502-5g3uoa5.jpeg"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20230318095502-o7z39ep",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20230318095502-o7z39ep",
				"updated": "20230318142535"
			},
			"Children": [
				{
					"ID": "20230318142535-b44qnjs",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20230318142535-b44qnjs"
					},
					"Children": [
						{
							"ID": "20230318142535-ik40bbe",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230318142535-ik40bbe"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": " 用户是使用 Docker Client 与 Docker Daemon 建立通信，并发送请求给后者。"
								}
							]
						}
					]
				},
				{
					"ID": "20230318142540-3mc0fyr",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20230318142540-3mc0fyr"
					},
					"Children": [
						{
							"ID": "20230318142540-1y42tau",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230318142540-1y42tau"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Docker Daemon 作为 Docker 架构中的主体部分，首先提供 Docker Server 的功能使其可以接受 Docker Client 的请求。"
								}
							]
						}
					]
				},
				{
					"ID": "20230318142545-fl5jbug",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "My4=",
						"Num": 3
					},
					"Properties": {
						"id": "20230318142545-fl5jbug"
					},
					"Children": [
						{
							"ID": "20230318142545-f470ut8",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230318142545-f470ut8"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Docker Engine 执行 Docker 内部的一系列工作，每一项工作都是以一个 Job 的形式的存在。"
								}
							]
						}
					]
				},
				{
					"ID": "20230318142548-29zglo7",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "NC4=",
						"Num": 4
					},
					"Properties": {
						"id": "20230318142548-29zglo7"
					},
					"Children": [
						{
							"ID": "20230318142548-qmiaq3t",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230318142548-qmiaq3t"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Job 的运行过程中，当需要容器镜像时，则从 Docker Registry 中下载镜像，并通过镜像管理驱动 Graphdriver 将下载镜像以 Graph 的形式存储。"
								}
							]
						}
					]
				},
				{
					"ID": "20230318142551-kcxrc2u",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "NS4=",
						"Num": 5
					},
					"Properties": {
						"id": "20230318142551-kcxrc2u"
					},
					"Children": [
						{
							"ID": "20230318142551-h24xg4l",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230318142551-h24xg4l"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "当需要为 Docker 创建网络环境时，通过网络管理驱动 Networkdriver 创建并配置 Docker容器网络环境。"
								}
							]
						}
					]
				},
				{
					"ID": "20230318142553-uwrj4r7",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Ni4=",
						"Num": 6
					},
					"Properties": {
						"id": "20230318142553-uwrj4r7"
					},
					"Children": [
						{
							"ID": "20230318142553-888rkxo",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230318142553-888rkxo"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "当需要限制 Docker 容器运行资源或执行用户指令等操作时，则通过 Execdriver 来完成。"
								}
							]
						}
					]
				},
				{
					"ID": "20230318142556-iwant5x",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Ny4=",
						"Num": 7
					},
					"Properties": {
						"id": "20230318142556-iwant5x"
					},
					"Children": [
						{
							"ID": "20230318142556-7zk4n4i",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230318142556-7zk4n4i"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Libcontainer 是一项独立的容器管理包，Networkdriver 以及 Execdriver 都是通过 Libcontainer 来实现具体对容器进行的操作。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230318095502-61a5qef",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230318095502-61a5qef"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "02 Docker 各模块组件分析"
				}
			]
		},
		{
			"ID": "20230318095502-166jnks",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230318095502-166jnks"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "2.1 Docker Client「发起请求」"
				}
			]
		},
		{
			"ID": "20230318095502-qsel345",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20230318095502-qsel345",
				"updated": "20230318142605"
			},
			"Children": [
				{
					"ID": "20230318142605-a2300pd",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20230318142605-a2300pd"
					},
					"Children": [
						{
							"ID": "20230318142605-f517hjo",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230318142605-f517hjo"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Docker Client 是 和 Docker Daemon 建立通信的客户端。用户使用的可执行文件为 docker（一个命令行可执行文件），docker 命令使用后接参数的形式来实现一个完整的请求命令（例如：docker images，docker 为命令不可变，images 为参数可变）。"
								}
							]
						}
					]
				},
				{
					"ID": "20230318142609-b3nz4fh",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20230318142609-b3nz4fh"
					},
					"Children": [
						{
							"ID": "20230318142609-2otkiiz",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230318142609-2otkiiz"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Docker Client 可以通过以下三种方式和 Docker Daemon 建立通信：tcp://host:port、unix://pathtosocket 和 fd://socketfd"
								}
							]
						}
					]
				},
				{
					"ID": "20230318142612-stfqhmh",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "My4=",
						"Num": 3
					},
					"Properties": {
						"id": "20230318142612-stfqhmh"
					},
					"Children": [
						{
							"ID": "20230318142612-w5z00cv",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230318142612-w5z00cv"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Docker Client 发送容器管理请求后，由 Docker Daemon 接受并处理请求，当 Docker Client 接收到返回的请求相应并简单处理后，Docker Client 一次完整的生命周期就结束了。(一次完整的请求：发送请求→处理请求→返回结果)，与传统的 C/S 架构请求流程并无不同。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230318095502-wczbakt",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230318095502-wczbakt"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "2.2 Docker Daemon（后台守护进程）"
				}
			]
		},
		{
			"ID": "20230318095502-u8xcbr1",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230318095502-u8xcbr1"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Docker daemon 架构图"
				}
			]
		},
		{
			"ID": "20230318095502-ym200g1",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230318095502-ym200g1"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/zvjl7s97iz-20230318095502-am4v47n.jpeg"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20230318095502-js084ux",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230318095502-js084ux"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Docker Server 架构图"
				}
			]
		},
		{
			"ID": "20230318095502-63pr4t1",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230318095502-63pr4t1"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/850j07ubwx-20230318095502-xa3377u.jpeg"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20230318095502-nbrcgh3",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20230318095502-nbrcgh3",
				"updated": "20230318165455"
			},
			"Children": [
				{
					"ID": "20230318165455-nfefz1x",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20230318165455-nfefz1x"
					},
					"Children": [
						{
							"ID": "20230318165455-e32kbe9",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230318165455-e32kbe9"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Docker Server 相当于 C/S 架构的服务端。功能为接受并调度分发 Docker Client 发送的请求。接受请求后，Docker Server 通过路由与分发调度，找到相应的 Handler 来执行请求。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230318095502-97mwqft",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20230318095502-97mwqft",
				"updated": "20230318165459"
			},
			"Children": [
				{
					"ID": "20230318165459-g9u9ev5",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20230318165459-g9u9ev5"
					},
					"Children": [
						{
							"ID": "20230318165459-vrpycal",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230318165459-vrpycal"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "在 Docker 的启动过程中，通过包 gorilla/mux 创建了一个 mux.Router 来提供请求的路由功能。在 Golang 中 gorilla/mux 是一个强大的 URL 路由器以及调度分发器。该 mux.Router 中添加了众多的路由项，每一个路由项由 HTTP 请求方法（PUT、POST、GET 或DELETE）、URL、Handler 三部分组成。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230318095502-v0venrm",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20230318095502-v0venrm",
				"updated": "20230318165503"
			},
			"Children": [
				{
					"ID": "20230318165503-vinp5e4",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "My4=",
						"Num": 3
					},
					"Properties": {
						"id": "20230318165503-vinp5e4"
					},
					"Children": [
						{
							"ID": "20230318165503-at0qa7a",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230318165503-at0qa7a"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "创建完 mux.Router 之后，Docker 将 Server 的监听地址以及 mux.Router 作为参数来创建一个 httpSrv=http.Server{}，最终执行 httpSrv.Serve() 为请求服务。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230318095502-cf4n7c4",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20230318095502-cf4n7c4",
				"updated": "20230318165507"
			},
			"Children": [
				{
					"ID": "20230318165507-hv2gi9s",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "NC4=",
						"Num": 4
					},
					"Properties": {
						"id": "20230318165507-hv2gi9s"
					},
					"Children": [
						{
							"ID": "20230318165507-w84eaj6",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230318165507-w84eaj6"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "在 Docker Server 的服务过程中，Docker Server 在 listener 上接受 Docker Client 的访问请求，并创建一个全新的 goroutine 来服务该请求。在 goroutine 中，首先读取请求内容并做解析工作，接着找到相应的路由项并调用相应的 Handler 来处理该请求，最后 Handler 处理完请求之后回复该请求。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230318095502-adkpiuy",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230318095502-adkpiuy"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "2.3 Docker Engine"
				}
			]
		},
		{
			"ID": "20230318165644-2phhm7c",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20230318165644-2phhm7c",
				"updated": "20230318170129"
			},
			"Children": [
				{
					"ID": "20230318170129-hddvzl9",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20230318170129-hddvzl9"
					},
					"Children": [
						{
							"ID": "20230318170129-r5scwcp",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230318170129-r5scwcp"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Docker Engine 是 Docker 架构中的运行引擎，同时也 Docker 运行的核心模块。它扮演 Docker Container 存储仓库的角色，并且通过执行 Job 的方式来操纵管理这些容器。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230318165648-rp6myq3",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20230318165648-rp6myq3",
				"updated": "20230318170132"
			},
			"Children": [
				{
					"ID": "20230318170132-okzkhpk",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20230318170132-okzkhpk"
					},
					"Children": [
						{
							"ID": "20230318170132-hvi1tg2",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230318170132-hvi1tg2"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "在 Docker Engine 数据结构的设计与实现过程中，有一个 Handler 对象。该 Handler 对象存储的都是关于众多特定 Job 的 Handler 处理访问。举例说明: Docker Engine 的Handler 对象中有一项为：{“create”: daemon.ContainerCreate,}，则说明当名为”create” 的 Job 在运行时，执行的是 daemon.ContainerCreate 的 Handler。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230318095502-e6zuy3c",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230318095502-e6zuy3c"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "Job"
				}
			]
		},
		{
			"ID": "20230318095502-z57hlqd",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20230318095502-z57hlqd",
				"updated": "20230318165654"
			},
			"Children": [
				{
					"ID": "20230318165654-ha5s4lf",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20230318165654-ha5s4lf"
					},
					"Children": [
						{
							"ID": "20230318165654-0xe3498",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230318165654-0xe3498"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "一个 Job 可以认为是 Docker 架构中 Docker Engine 内部最基本的工作执行单元。Docker 可以做的每一项工作，都可以抽象为一个 Job。例如：在容器内部运行一个进程，这是一个 Job；创建一个新的容器，这是一个 Job。Docker Server 的运行过程也是一个 Job，名为 ServeApi。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230318095502-734qyg6",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20230318095502-734qyg6",
				"updated": "20230318165657"
			},
			"Children": [
				{
					"ID": "20230318165657-i2tq6us",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20230318165657-i2tq6us"
					},
					"Children": [
						{
							"ID": "20230318165657-lspxjfx",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230318165657-lspxjfx"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Job 的设计者，把 Job 设计得与 Unix 进程相仿。比如说：Job 有一个名称、有参数、有环境变量、有标准的输入输出、有错误处理，有返回状态等。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230318095502-2y1pkxu",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230318095502-2y1pkxu"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "2.4 Docker Registry(镜像注册中心)"
				}
			]
		},
		{
			"ID": "20230318095502-4kpmqoc",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20230318095502-4kpmqoc",
				"updated": "20230318165703"
			},
			"Children": [
				{
					"ID": "20230318165703-we7dxfz",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20230318165703-we7dxfz"
					},
					"Children": [
						{
							"ID": "20230318165703-1mdb2yc",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230318165703-1mdb2yc"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Docker Registry 是一个存储容器镜像的仓库（注册中心），可理解为云端镜像仓库。按 Repository 来分类，docker pull 按照 [repository]:[tag] 来精确定义一个具体的 Image。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230318095502-ez4vce1",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20230318095502-ez4vce1",
				"updated": "20230318165707"
			},
			"Children": [
				{
					"ID": "20230318165707-xlyalo7",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20230318165707-xlyalo7"
					},
					"Children": [
						{
							"ID": "20230318165707-qi5kkje",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230318165707-qi5kkje"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "在 Docker 的运行过程中，Docker Daemon 会与 Docker Registry 通信，并实现搜索镜像、下载镜像、上传镜像三个功能，这三个功能对应的 Job 名称分别为：“search”、”pull” 与 “push”。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230318095502-i69prrw",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20230318095502-i69prrw",
				"updated": "20230318165711"
			},
			"Children": [
				{
					"ID": "20230318165711-giglugq",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "My4=",
						"Num": 3
					},
					"Properties": {
						"id": "20230318165711-giglugq"
					},
					"Children": [
						{
							"ID": "20230318165711-z7u2nxk",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230318165711-z7u2nxk"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Docker Registry 可分为公有仓库（ Docker Hub）和私有仓库。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230318095502-yy4swsr",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230318095502-yy4swsr"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "2.5 Graph 「Docker 内部数据库」"
				}
			]
		},
		{
			"ID": "20230318095502-cff3nnx",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230318095502-cff3nnx"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Graph 架构图"
				}
			]
		},
		{
			"ID": "20230318095502-vzb7mfu",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230318095502-vzb7mfu"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/fe3hk9ie16-20230318095502-euz5mb2.jpeg"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20230318095502-fl27epu",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230318095502-fl27epu"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "Repository"
				}
			]
		},
		{
			"ID": "20230318095502-c9uyqeq",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20230318095502-c9uyqeq",
				"updated": "20230318165723"
			},
			"Children": [
				{
					"ID": "20230318165723-0u8aavz",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20230318165723-0u8aavz"
					},
					"Children": [
						{
							"ID": "20230318165723-9ofabdk",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230318165723-9ofabdk"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "已下载镜像的保管者（包括下载的镜像和通过 Dockerfile 构建的镜像）。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230318095502-41bkrjf",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20230318095502-41bkrjf",
				"updated": "20230318165727"
			},
			"Children": [
				{
					"ID": "20230318165727-ngcbpmy",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20230318165727-ngcbpmy"
					},
					"Children": [
						{
							"ID": "20230318165727-k8a24y1",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230318165727-k8a24y1"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": " 一个 Repository 表示某类镜像的仓库（例如：Ubuntu），同一个 Repository 内的镜像用 Tag 来区分（表示同一类镜像的不同标签或版本）。一个 Registry 包含多个Repository，一个 Repository 包含同类型的多个 Image。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230318095502-ikvuyuw",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20230318095502-ikvuyuw",
				"updated": "20230318165730"
			},
			"Children": [
				{
					"ID": "20230318165730-ejq2yod",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "My4=",
						"Num": 3
					},
					"Properties": {
						"id": "20230318165730-ejq2yod"
					},
					"Children": [
						{
							"ID": "20230318165730-7crrmmm",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230318165730-7crrmmm"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "镜像的存储类型有 Aufs、Devicemapper、Btrfs、Vfs等。其中 CentOS 系统 7.x 以下版本使用 Devicemapper 的存储类型。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230318095502-zlajon7",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20230318095502-zlajon7",
				"updated": "20230318165733"
			},
			"Children": [
				{
					"ID": "20230318165733-aohi2ia",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "NC4=",
						"Num": 4
					},
					"Properties": {
						"id": "20230318165733-aohi2ia"
					},
					"Children": [
						{
							"ID": "20230318165733-61zfsfw",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230318165733-61zfsfw"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "同时在 Graph 的本地目录中存储有关于每一个的容器镜像具体信息，包含有：该容器镜像的元数据、容器镜像的大小信息、以及该容器镜像所代表的具体 rootfs。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230318095502-ta0q3vt",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230318095502-ta0q3vt"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "GraphDB"
				}
			]
		},
		{
			"ID": "20230318095502-lcv9u8x",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20230318095502-lcv9u8x",
				"updated": "20230318165736"
			},
			"Children": [
				{
					"ID": "20230318165736-9ftvlfy",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20230318165736-9ftvlfy"
					},
					"Children": [
						{
							"ID": "20230318165736-663683x",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230318165736-663683x"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "已下载容器镜像之间关系的记录者。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230318095502-gqxlol7",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20230318095502-gqxlol7",
				"updated": "20230318165739"
			},
			"Children": [
				{
					"ID": "20230318165739-9bvbkqo",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20230318165739-9bvbkqo"
					},
					"Children": [
						{
							"ID": "20230318165739-s5iuqdp",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230318165739-s5iuqdp"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "GraphDB 是一个构建在 SQLite 之上的小型数据库，实现了节点的命名以及节点之间关联关系的记录。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230318095502-94qenhu",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230318095502-94qenhu"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "2.6 Driver 「执行部分」"
				}
			]
		},
		{
			"ID": "20230318095502-c20jafo",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230318095502-c20jafo"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Driver 是 Docker 架构中的驱动模块。通过 Driver 驱动，Docker 可以实现对 Docker 容器执行环境的定制。即 Graph 负责镜像的存储，Driver 负责容器的执行。"
				}
			]
		},
		{
			"ID": "20230318095502-4th372v",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230318095502-4th372v"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "Graphdriver"
				}
			]
		},
		{
			"ID": "20230318095502-xghywrq",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230318095502-xghywrq"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Graphdriver 架构图"
				}
			]
		},
		{
			"ID": "20230318095502-2hxrq9b",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230318095502-2hxrq9b"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/ch1pggj5k1-20230318095502-0r6d90j.jpeg"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20230318095502-pmewrh6",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20230318095502-pmewrh6",
				"updated": "20230318165822"
			},
			"Children": [
				{
					"ID": "20230318165822-f2lzfma",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20230318165822-f2lzfma"
					},
					"Children": [
						{
							"ID": "20230318165822-mw3cmig",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230318165822-mw3cmig"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Graphdriver 主要用于完成容器镜像的管理，包括存储与获取。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230318095502-u3p9y5k",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20230318095502-u3p9y5k",
				"updated": "20230318165826"
			},
			"Children": [
				{
					"ID": "20230318165826-r6an60r",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20230318165826-r6an60r"
					},
					"Children": [
						{
							"ID": "20230318165826-pb8kuet",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230318165826-pb8kuet"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "存储：docker pull 下载的镜像由 Graphdriver 存储到本地的指定目录( Graph 中 )。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230318095502-pjmpvx6",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20230318095502-pjmpvx6",
				"updated": "20230318165828"
			},
			"Children": [
				{
					"ID": "20230318165828-eo517zf",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "My4=",
						"Num": 3
					},
					"Properties": {
						"id": "20230318165828-eo517zf"
					},
					"Children": [
						{
							"ID": "20230318165828-1iejz3d",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230318165828-1iejz3d"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "获取：docker run（create）用镜像来创建容器的时候由 Graphdriver 到本地 Graph中获取镜像。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230318095502-s7yop3t",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230318095502-s7yop3t"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "Networkdriver"
				}
			]
		},
		{
			"ID": "20230318095502-vyobsjd",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230318095502-vyobsjd"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Networkdriver 架构图"
				}
			]
		},
		{
			"ID": "20230318095502-mx9ldlb",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230318095502-mx9ldlb"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/ndqc509185-20230318095502-9gy7rlx.jpeg"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20230318095502-u3zmuep",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230318095502-u3zmuep"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Networkdriver 的用途是完成 Docker 容器网络环境的配置，其中包括:"
				}
			]
		},
		{
			"ID": "20230318095502-xwvv6bz",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20230318095502-xwvv6bz"
			},
			"Children": [
				{
					"ID": "20230318095502-5bsm05h",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230318095502-5bsm05h"
					},
					"Children": [
						{
							"ID": "20230318095502-qmzed8y",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230318095502-qmzed8y"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Docker 启动时为 Docker 环境创建网桥。"
								}
							]
						}
					]
				},
				{
					"ID": "20230318095502-nb2mllo",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230318095502-nb2mllo"
					},
					"Children": [
						{
							"ID": "20230318095502-y4qxc6l",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230318095502-y4qxc6l"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Docker 容器创建时为其创建专属虚拟网卡设备。"
								}
							]
						}
					]
				},
				{
					"ID": "20230318095502-yxmkeqb",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230318095502-yxmkeqb"
					},
					"Children": [
						{
							"ID": "20230318095502-ypily7f",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230318095502-ypily7f"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Docker 容器分配IP、端口并与宿主机做端口映射，设置容器防火墙策略等。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230318095502-nk7cswq",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230318095502-nk7cswq"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "Execdriver"
				}
			]
		},
		{
			"ID": "20230318095502-q1tm1kq",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230318095502-q1tm1kq"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Execdriver 架构图"
				}
			]
		},
		{
			"ID": "20230318095502-ajpobji",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230318095502-ajpobji"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/xtrn1h16be-20230318095502-9fh8j7r.jpeg"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20230318095502-2u82acg",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20230318095502-2u82acg",
				"updated": "20230318165913"
			},
			"Children": [
				{
					"ID": "20230318165913-q4vr1p1",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20230318165913-q4vr1p1"
					},
					"Children": [
						{
							"ID": "20230318165913-dkjqnu9",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230318165913-dkjqnu9"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Execdriver 作为 Docker 容器的执行驱动，负责创建容器运行命名空间、容器资源使用的统计与限制、容器内部进程的真正运行等。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230318095502-ymaymsa",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20230318095502-ymaymsa",
				"updated": "20230318165915"
			},
			"Children": [
				{
					"ID": "20230318165915-lc1bde9",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20230318165915-lc1bde9"
					},
					"Children": [
						{
							"ID": "20230318165915-6k5wwie",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230318165915-6k5wwie"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "现在 Execdriver 默认使用 Native 驱动，不依赖于 LXC。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230318095502-nhvop8l",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230318095502-nhvop8l"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "2.7 Libcontainer 「函数库」"
				}
			]
		},
		{
			"ID": "20230318095502-3v52fbe",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230318095502-3v52fbe"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Libcontainer 架构图"
				}
			]
		},
		{
			"ID": "20230318095502-4o1jhkg",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230318095502-4o1jhkg"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/nmldjvqs4c-20230318095502-ga6ywxk.jpeg"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20230318095502-ciwhnpu",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20230318095502-ciwhnpu",
				"updated": "20230318165902"
			},
			"Children": [
				{
					"ID": "20230318165902-ssqwr16",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20230318165902-ssqwr16"
					},
					"Children": [
						{
							"ID": "20230318165902-xcm6yf7",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230318165902-xcm6yf7"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Libcontainer 是 Docker 架构中一个使用 Go 语言设计实现的库，设计初衷是希望该库可以不依靠任何依赖，直接访问内核中与容器相关的 API。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230318095502-am4tgyv",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20230318095502-am4tgyv",
				"updated": "20230318165905"
			},
			"Children": [
				{
					"ID": "20230318165905-04d8kot",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20230318165905-04d8kot"
					},
					"Children": [
						{
							"ID": "20230318165905-19hqqqw",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230318165905-19hqqqw"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Docker 可以直接调用 Libcontainer 来操纵容器的 Namespace、Cgroups、Apparmor、网络设备以及防火墙规则等。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230318095502-xwqbito",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20230318095502-xwqbito",
				"updated": "20230318165908"
			},
			"Children": [
				{
					"ID": "20230318165908-mt0utlb",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "My4=",
						"Num": 3
					},
					"Properties": {
						"id": "20230318165908-mt0utlb"
					},
					"Children": [
						{
							"ID": "20230318165908-jzsaq5z",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230318165908-jzsaq5z"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Libcontainer 提供了一整套标准的接口来满足上层对容器管理的需求。或者说 Libcontainer 屏蔽了 Docker 上层对容器的直接管理。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230318095502-6rpp6me",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230318095502-6rpp6me"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "2.8 Docker Container 「服务交付的最终形式」"
				}
			]
		},
		{
			"ID": "20230318095502-xauok6s",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230318095502-xauok6s"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Docker Container 架构"
				}
			]
		},
		{
			"ID": "20230318095502-48qf2s0",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230318095502-48qf2s0"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/l0gccbo0wj-20230318095502-sv7kqot.jpeg"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20230318095502-89v43u3",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20230318095502-89v43u3",
				"updated": "20230318165853"
			},
			"Children": [
				{
					"ID": "20230318165853-l5p1wkk",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20230318165853-l5p1wkk"
					},
					"Children": [
						{
							"ID": "20230318165853-9ozkj6c",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230318165853-9ozkj6c"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Docker Container（ Docker 容器 ）是 Docker 架构中服务交付的最终体现形式。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230318095502-gs1x0v7",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20230318095502-gs1x0v7",
				"updated": "20230318165857"
			},
			"Children": [
				{
					"ID": "20230318165857-0gfl3mc",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20230318165857-0gfl3mc"
					},
					"Children": [
						{
							"ID": "20230318165857-unactqo",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230318165857-unactqo"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Docker 按照用户的需求与指令，订制相应的 Docker 容器："
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230318095502-igappz1",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20230318095502-igappz1"
			},
			"Children": [
				{
					"ID": "20230318095502-9ibh80g",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230318095502-9ibh80g"
					},
					"Children": [
						{
							"ID": "20230318095502-px41919",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230318095502-px41919"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "用户通过指定容器镜像，使得 Docker 容器可以自定义 rootfs 等文件系统。"
								}
							]
						}
					]
				},
				{
					"ID": "20230318095502-0m01a1t",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230318095502-0m01a1t"
					},
					"Children": [
						{
							"ID": "20230318095502-6ia9hcm",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230318095502-6ia9hcm"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "用户通过指定计算资源的配额，使得 Docker 容器使用指定的计算资源。"
								}
							]
						}
					]
				},
				{
					"ID": "20230318095502-ekf52ar",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230318095502-ekf52ar"
					},
					"Children": [
						{
							"ID": "20230318095502-qixn3eq",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230318095502-qixn3eq"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "用户通过配置网络及其安全策略，使得 Docker 容器拥有独立且安全的网络环境。"
								}
							]
						}
					]
				},
				{
					"ID": "20230318095502-r4iso8t",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230318095502-r4iso8t"
					},
					"Children": [
						{
							"ID": "20230318095502-euinwso",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230318095502-euinwso"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "用户通过指定运行的命令，使得 Docker 容器执行指定的工作。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230318095502-nnl88kw",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230318095502-nnl88kw",
				"updated": "20230318095502"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "附：本文在《docker源码分析》基础上进行整理。"
				}
			]
		},
		{
			"ID": "20230318095502-okz0u1v",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230318095502-okz0u1v",
				"updated": "20230318095502"
			}
		}
	]
}