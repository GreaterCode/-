{
	"ID": "20230903121222-7tb0afw",
	"Spec": "1",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20230903121222-7tb0afw",
		"scroll": "{\u0026quot;startId\u0026quot;:\u0026quot;20230903121222-eu21y6i\u0026quot;,\u0026quot;endId\u0026quot;:\u0026quot;20230903122753-wrz0imi\u0026quot;,\u0026quot;scrollTop\u0026quot;:845,\u0026quot;focusId\u0026quot;:\u0026quot;20230903121520-lxz9h9w\u0026quot;,\u0026quot;focusStart\u0026quot;:0,\u0026quot;focusEnd\u0026quot;:0}",
		"title": "2. 健康检查配置",
		"updated": "20230903122753"
	},
	"Children": [
		{
			"ID": "20230903121222-eu21y6i",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230903121222-eu21y6i",
				"updated": "20230903121253"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "本文视频教程: "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "a",
					"TextMarkAHref": "https://www.bilibili.com/video/BV16q4y1y7B9",
					"TextMarkTextContent": "https://www.bilibili.com/video/BV16q4y1y7B9"
				}
			]
		},
		{
			"ID": "20230903121320-3yzi7wl",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20230903121320-3yzi7wl",
				"updated": "20230903121448"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "1. kuberntes健康检查介绍"
				}
			]
		},
		{
			"ID": "20230903121455-uhk9q9a",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230903121455-uhk9q9a",
				"updated": "20230903121455"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "K8S 支持三种健康检查："
				}
			]
		},
		{
			"ID": "20230903121455-2t2dm1c",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20230903121455-2t2dm1c",
				"updated": "20230903121455"
			},
			"Children": [
				{
					"ID": "20230903121455-lz2purk",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20230903121455-lz2purk",
						"updated": "20230903121455"
					},
					"Children": [
						{
							"ID": "20230903121455-uurx20g",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230903121455-uurx20g",
								"updated": "20230903121455"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "就绪检查("
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "readinessProbe"
								},
								{
									"Type": "NodeText",
									"Data": "​): Pod启动后，如果配了就绪检查，要等就绪检查探测成功，Pod Ready 状态变为 True，允许放流量进来；在运行期间如果突然探测失败，Ready 状态变为 False，摘除流量。"
								}
							]
						}
					]
				},
				{
					"ID": "20230903121455-m2n8m3w",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20230903121455-m2n8m3w",
						"updated": "20230903121455"
					},
					"Children": [
						{
							"ID": "20230903121455-6srnipp",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230903121455-6srnipp",
								"updated": "20230903121455"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "存活检查("
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "livenessProbe"
								},
								{
									"Type": "NodeText",
									"Data": "​): Pod 在运行时，如果存活检查探测失败，会自动重启容器；值得注意的是，存活探测的结果不影响 Pod 的 Ready 状态，这也是许多同学可能误解的地方。"
								}
							]
						}
					]
				},
				{
					"ID": "20230903121455-4ts77hq",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "My4=",
						"Num": 3
					},
					"Properties": {
						"id": "20230903121455-4ts77hq",
						"updated": "20230903121455"
					},
					"Children": [
						{
							"ID": "20230903121455-s2lwqve",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230903121455-s2lwqve",
								"updated": "20230903121455"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "启动检查("
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "startupProbe"
								},
								{
									"Type": "NodeText",
									"Data": "​): 作用是让存活检查和就绪检查的开始探测时间延后，等启动检查成功后再开始探测，通常用于避免业务进程启动慢导致存活检查失败而被无限重启。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230903121502-oklrgoc",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230903121502-oklrgoc",
				"updated": "20230903121502"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "三种健康检查配置格式都是一样的，以 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "readinessProbe"
				},
				{
					"Type": "NodeText",
					"Data": "​ 为例:"
				}
			]
		},
		{
			"ID": "20230903121509-rggktxf",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230903121509-rggktxf",
				"updated": "20230903121513"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "readinessProbe:\n  successThreshold: 1 # 1 次探测成功就认为健康\n  failureThreshold: 2 # 连续 2 次探测失败认为不健康\n  periodSeconds: 3 # 3s 探测一次\n  timeoutSeconds: 2 # 2s 超时还没返回成功就认为不健康\n  httpGet: # 使用 http 接口方式探测，GET 请求 80 端口的 \"/healthz\" 这个 http 接口，响应状态码在200~399之间视为健康，否则不健康。\n    port: 80\n    path: \"/healthz\"\n  #exec: # 使用脚本探测，执行容器内 \"/check-health.sh\" 这个脚本文件，退出状态码等于0视为健康，否则不健康。\n  #  command: [\"/check-health.sh\"]\n  #tcp: # 使用 TCP 探测，看 9000 端口是否监听。\n  #  port: 9000\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230903121520-lxz9h9w",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20230903121520-lxz9h9w",
				"updated": "20230903121714"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "2. 探测结果一定要真实反应业务健康状态"
				}
			]
		},
		{
			"ID": "20230903121714-g0besni",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230903121714-g0besni",
				"updated": "20230903121737"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "2.1 首选HTTP探测"
				}
			]
		},
		{
			"ID": "20230903121700-t9vqivr",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230903121700-t9vqivr",
				"updated": "20230903121700"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "通常是推荐业务自身提供 http 探测接口，如果业务层面健康就返回 200 状态码；否则，就返回 500。"
				}
			]
		},
		{
			"ID": "20230903121745-srqzrum",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230903121745-srqzrum",
				"updated": "20230903121759"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "2.2 备选脚本探测"
				}
			]
		},
		{
			"ID": "20230903121700-udqt7eh",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230903121700-udqt7eh",
				"updated": "20230903121700"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "如果业务还不支持 http 探测接口，或者有探测接口但不是 http 协议，也可以将探测逻辑写到脚本文件里，然后配置脚本方式探测。"
				}
			]
		},
		{
			"ID": "20230903121806-54uahik",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230903121806-54uahik",
				"updated": "20230903121846"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "2.3 尽量避免TCP探测"
				}
			]
		},
		{
			"ID": "20230903121700-2dsi5yh",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230903121700-2dsi5yh",
				"updated": "20230903121700"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "另外，应尽量避免使用 TCP 探测，因为 TCP 探测实际就是 kubelet 向指定端口发送 TCP SYN 握手包，当端口被监听内核就会直接响应 ACK，探测就会成功:"
				}
			]
		},
		{
			"ID": "20230903121903-mnrp2yp",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230903121903-mnrp2yp",
				"updated": "20230903121951"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/image-20230903121951-e5ska54.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "​​"
				}
			]
		},
		{
			"ID": "20230903122006-rymrood",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230903122006-rymrood",
				"updated": "20230903122006"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "当程序死锁或 hang 死，这些并不影响端口监听，所以探测结果还是健康，流量打到表面健康但实际不健康的 Pod 上，就无法处理请求，从而引发业务故障。"
				}
			]
		},
		{
			"ID": "20230903122050-hrd0usw",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20230903122050-hrd0usw",
				"updated": "20230903122258"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "3. 所有提供服务的container都要加上ReadinessProbe"
				}
			]
		},
		{
			"ID": "20230903122259-rxd7vwk",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230903122259-rxd7vwk",
				"updated": "20230903122308"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "如果你的容器对外提供了服务，监听了端口，那么都应该配上 ReadinessProbe，ReadinessProbe 不通过就视为 Pod 不健康，然后会自动将不健康的 Pod 踢出去，避免将业务流量转发给异常 Pod。"
				}
			]
		},
		{
			"ID": "20230903122311-m3fyzwd",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230903122311-m3fyzwd",
				"updated": "20230903122342"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/image-20230903122342-ac3ahn5.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20230903122443-xyu169g",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20230903122443-xyu169g",
				"updated": "20230903122531"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "4. 谨慎使用LivenessProbe"
				}
			]
		},
		{
			"ID": "20230903122537-idi07dx",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230903122537-idi07dx",
				"updated": "20230903122537"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "LivenessProbe 失败会重启 Pod，不要轻易使用，除非你了解后果并且明白为什么你需要它，参考 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "a",
					"TextMarkAHref": "https://srcco.de/posts/kubernetes-liveness-probes-are-dangerous.html",
					"TextMarkTextContent": "Liveness Probes are Dangerous"
				},
				{
					"Type": "NodeText",
					"Data": " 。"
				}
			]
		},
		{
			"ID": "20230903122546-kgqa8w2",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230903122546-kgqa8w2",
				"updated": "20230903122546"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "a",
					"TextMarkAHref": "https://imroc.cc/kubernetes/best-practices/configure-healthcheck.html#%E6%8E%A2%E6%B5%8B%E6%9D%A1%E4%BB%B6%E8%A6%81%E6%9B%B4%E5%AE%BD%E6%9D%BE",
					"TextMarkTextContent": "探测条件要更宽松"
				}
			]
		},
		{
			"ID": "20230903122546-z5rnlbh",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230903122546-z5rnlbh",
				"updated": "20230903122546"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "如果使用 LivenessProbe，不要和 ReadinessProbe 设置成一样，需要更宽松一点，避免因抖动导致 Pod 频繁被重启。"
				}
			]
		},
		{
			"ID": "20230903122546-54bwc4p",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230903122546-54bwc4p",
				"updated": "20230903122546"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "通常是失败阈值 ("
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "failureThreshold"
				},
				{
					"Type": "NodeText",
					"Data": "​) 设置得更大一点，避免因探测太敏感导致 Pod 很容易被重启。"
				}
			]
		},
		{
			"ID": "20230903122546-wvky947",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230903122546-wvky947",
				"updated": "20230903122546"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "另外如果有必要，超时时间 ("
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "timeoutSeconds"
				},
				{
					"Type": "NodeText",
					"Data": "​) 和探测间隔 ("
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "periodSeconds"
				},
				{
					"Type": "NodeText",
					"Data": "​) 也可以根据情况适当延长。"
				}
			]
		},
		{
			"ID": "20230903122546-qcb1934",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230903122546-qcb1934",
				"updated": "20230903122546"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "a",
					"TextMarkAHref": "https://imroc.cc/kubernetes/best-practices/configure-healthcheck.html#%E4%BF%9D%E6%8A%A4%E6%85%A2%E5%90%AF%E5%8A%A8%E5%AE%B9%E5%99%A8",
					"TextMarkTextContent": "保护慢启动容器"
				}
			]
		},
		{
			"ID": "20230903122546-sszfoyc",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230903122546-sszfoyc",
				"updated": "20230903122546"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "有些应用本身可能启动慢(比如 Java)，或者用的富容器，需要起一大堆依赖，导致容器启动需要的较长，如果配置了存活检查，可能会造成启动过程中达到失败阈值被重启，如此循环，无限重启。"
				}
			]
		},
		{
			"ID": "20230903122546-91isba3",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230903122546-91isba3",
				"updated": "20230903122546"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "对于这类启动慢的容器，我们需要保护下，等待应用完全启动后才开始探测:"
				}
			]
		},
		{
			"ID": "20230903122546-mh42ipg",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20230903122546-mh42ipg",
				"updated": "20230903122546"
			},
			"Children": [
				{
					"ID": "20230903122546-01rrci7",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20230903122546-01rrci7",
						"updated": "20230903122546"
					},
					"Children": [
						{
							"ID": "20230903122546-uoamhhs",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230903122546-uoamhhs",
								"updated": "20230903122546"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "如果 K8S 版本低于 1.18，可以设置 LivenessProbe 的初始探测延时 ("
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "initialDelaySeconds"
								},
								{
									"Type": "NodeText",
									"Data": "​)。"
								}
							]
						}
					]
				},
				{
					"ID": "20230903122546-8myzz0d",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20230903122546-8myzz0d",
						"updated": "20230903122546"
					},
					"Children": [
						{
							"ID": "20230903122546-2l6no5c",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230903122546-2l6no5c",
								"updated": "20230903122546"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "如果 K8S 版本在 1.18 及其以上，可以配置 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "a",
									"TextMarkAHref": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-startup-probes",
									"TextMarkTextContent": "StartProbe"
								},
								{
									"Type": "NodeText",
									"Data": "，保证等应用完全启动后才开始探测。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230903122546-brttzow",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230903122546-brttzow",
				"updated": "20230903122546"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "a",
					"TextMarkAHref": "https://imroc.cc/kubernetes/best-practices/configure-healthcheck.html#%E9%81%BF%E5%85%8D%E4%BE%9D%E8%B5%96%E5%AF%BC%E8%87%B4%E7%BA%A7%E8%81%94%E6%95%85%E9%9A%9C",
					"TextMarkTextContent": "避免依赖导致级联故障"
				}
			]
		},
		{
			"ID": "20230903122546-w71ukk3",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230903122546-w71ukk3",
				"updated": "20230903122605"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "LivenessProbe 探测逻辑里不要有外部依赖 (db, 其它 pod 等)，避免抖动导致级联故障。\n​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/image-20230903122605-ihgk00r.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "​\n"
				}
			]
		},
		{
			"ID": "20230903122610-furmdd4",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230903122610-furmdd4",
				"updated": "20230903122610"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "如上图，Pod B 探测逻辑里查 DB，Pod A 探测逻辑里调用 Pod B，如果 DB 抖动，Pod B 变为不健康，Pod A 调用 Pod B 也失败，也变为不健康，从而级联故障。"
				}
			]
		},
		{
			"ID": "20230903122722-964zlto",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20230903122722-964zlto",
				"updated": "20230903122742"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "5. 反面教材"
				}
			]
		},
		{
			"ID": "20230903122753-33eippw",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230903122753-33eippw",
				"updated": "20230903122753"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "a",
					"TextMarkAHref": "https://imroc.cc/kubernetes/best-practices/configure-healthcheck.html#%E7%AA%81%E7%84%B6%E6%97%A0%E9%99%90%E9%87%8D%E5%90%AF%E4%B8%94%E6%B5%81%E9%87%8F%E5%BC%82%E5%B8%B8",
					"TextMarkTextContent": "突然无限重启且流量异常"
				}
			]
		},
		{
			"ID": "20230903122753-qzzes7j",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230903122753-qzzes7j",
				"updated": "20230903122753"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "故障现象: Pod 突然不断重启，期间有流量进入，这部分流量异常。"
				}
			]
		},
		{
			"ID": "20230903122753-47i9flr",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230903122753-47i9flr",
				"updated": "20230903122753"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "原因："
				}
			]
		},
		{
			"ID": "20230903122753-1kcbfgu",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20230903122753-1kcbfgu",
				"updated": "20230903122753"
			},
			"Children": [
				{
					"ID": "20230903122753-z3t5bn1",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20230903122753-z3t5bn1",
						"updated": "20230903122753"
					},
					"Children": [
						{
							"ID": "20230903122753-772bamm",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230903122753-772bamm",
								"updated": "20230903122753"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Pod 之前所在节点异常，重建漂移到了其它节点去启动。"
								}
							]
						}
					]
				},
				{
					"ID": "20230903122753-909l5gi",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20230903122753-909l5gi",
						"updated": "20230903122753"
					},
					"Children": [
						{
							"ID": "20230903122753-cz930go",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230903122753-cz930go",
								"updated": "20230903122753"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Pod 重建后由于基础镜像中依赖的一个服务有问题导致启动较慢，因为同时配置了 ReadinessProbe 与 LivenessProbe，大概率是启动时所有健康检查都失败，达到 LivenessProbe 失败次数阈值，又被重启。"
								}
							]
						}
					]
				},
				{
					"ID": "20230903122753-uktsdie",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "My4=",
						"Num": 3
					},
					"Properties": {
						"id": "20230903122753-uktsdie",
						"updated": "20230903122753"
					},
					"Children": [
						{
							"ID": "20230903122753-s9xbl0i",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230903122753-s9xbl0i",
								"updated": "20230903122753"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Pod 配置了 preStop 实现优雅终止，被重启前会先执行 preStop，优雅终止的时长较长，preStop 期间 ReadinessProbe 还会继续探测。"
								}
							]
						}
					]
				},
				{
					"ID": "20230903122753-u0bkmh9",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "NC4=",
						"Num": 4
					},
					"Properties": {
						"id": "20230903122753-u0bkmh9",
						"updated": "20230903122753"
					},
					"Children": [
						{
							"ID": "20230903122753-bije13a",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230903122753-bije13a",
								"updated": "20230903122753"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "探测方式使用的 TCP 探测，进程优雅终止过程中 TCP 探测仍然会成功(没完全退出前端口监听仍然存在)，但实际此时进程已不会处理新请求了。"
								}
							]
						}
					]
				},
				{
					"ID": "20230903122753-1u5twxu",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "NS4=",
						"Num": 5
					},
					"Properties": {
						"id": "20230903122753-1u5twxu",
						"updated": "20230903122753"
					},
					"Children": [
						{
							"ID": "20230903122753-zf9syk2",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230903122753-zf9syk2",
								"updated": "20230903122753"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "LivenessProbe 结果不会影响 Pod Ready 状态，是否 Ready 主要取决于 ReadinessProbe 结果，由于 preStop 期间 ReadinessProbe 是成功的，Pod 就变 Ready 了。"
								}
							]
						}
					]
				},
				{
					"ID": "20230903122753-z5s9tcn",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Ni4=",
						"Num": 6
					},
					"Properties": {
						"id": "20230903122753-z5s9tcn",
						"updated": "20230903122753"
					},
					"Children": [
						{
							"ID": "20230903122753-r7eb4fk",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230903122753-r7eb4fk",
								"updated": "20230903122753"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Pod Ready 但实际无法处理请求，业务就会异常。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230903122753-slvzvxn",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230903122753-slvzvxn",
				"updated": "20230903122753"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "总结:"
				}
			]
		},
		{
			"ID": "20230903122753-9a7xjbs",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20230903122753-9a7xjbs",
				"updated": "20230903122753"
			},
			"Children": [
				{
					"ID": "20230903122753-ylu0mdk",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20230903122753-ylu0mdk",
						"updated": "20230903122753"
					},
					"Children": [
						{
							"ID": "20230903122753-rwionlc",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230903122753-rwionlc",
								"updated": "20230903122753"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Pod 慢启动 + 存活探测 导致被无限重启。需要延长 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "initialDelaySeconds"
								},
								{
									"Type": "NodeText",
									"Data": "​ 或 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "a",
									"TextMarkAHref": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-startup-probes",
									"TextMarkTextContent": "StartProbe"
								},
								{
									"Type": "NodeText",
									"Data": " 来保护慢启动容器。"
								}
							]
						}
					]
				},
				{
					"ID": "20230903122753-igf2whj",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20230903122753-igf2whj",
						"updated": "20230903122753"
					},
					"Children": [
						{
							"ID": "20230903122753-zsxfngv",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230903122753-zsxfngv",
								"updated": "20230903122753"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "TCP 探测方式不能完全真实反应业务健康状态，导致在优雅终止过程中，ReadinessProbe 探测成功让流量放进来而业务却不会处理，导致流量异常。需要使用更好的探测方式，建议业务提供 HTTP 探活接口，使用 HTTP 探测业务真实健康状态。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230903122753-8vsgspd",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230903122753-8vsgspd",
				"updated": "20230903122753"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "a",
					"TextMarkAHref": "https://imroc.cc/kubernetes/best-practices/configure-healthcheck.html#netstat-%E6%8E%A2%E6%B5%8B%E8%B6%85%E6%97%B6",
					"TextMarkTextContent": "netstat 探测超时"
				}
			]
		},
		{
			"ID": "20230903122753-xnnxz8b",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230903122753-xnnxz8b",
				"updated": "20230903122753"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "故障现象: 探测脚本经常 2s 超时。"
				}
			]
		},
		{
			"ID": "20230903122753-o050mci",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230903122753-o050mci",
				"updated": "20230903122753"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "原因: 使用脚本探测，超时时间为 2s，脚本里使用了 netstat 检测端口是否存活来判断业务进程是否正常，当流量较大时，连接数多，netstat 运行所需时间就较长 (因为 netstat 会遍历 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "/proc"
				},
				{
					"Type": "NodeText",
					"Data": "​ 下每个 pid 内容来进行统计，执行时长受连接数波动所影响)，所以在业务高峰时往往容易执行超时，从而探测失败。"
				}
			]
		},
		{
			"ID": "20230903122753-wrz0imi",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230903122753-wrz0imi",
				"updated": "20230903122753"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "总结: 这种探测方式比 TCP 探测方式更原始，强烈不推荐，参考最佳实践优化探测配置。"
				}
			]
		}
	]
}