{
	"ID": "20230906010636-8yo8xsz",
	"Spec": "1",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20230906010636-8yo8xsz",
		"scroll": "{\u0026quot;startId\u0026quot;:\u0026quot;20230906010636-nylh93k\u0026quot;,\u0026quot;endId\u0026quot;:\u0026quot;20230906010803-jiqfixd\u0026quot;,\u0026quot;scrollTop\u0026quot;:674,\u0026quot;focusId\u0026quot;:\u0026quot;20230906010850-wfi8bjc\u0026quot;,\u0026quot;focusStart\u0026quot;:293,\u0026quot;focusEnd\u0026quot;:293}",
		"title": "5.2 工作负载平滑升级",
		"updated": "20230906010851"
	},
	"Children": [
		{
			"ID": "20230906010636-nylh93k",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230906010636-nylh93k",
				"updated": "20230906010657"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "解决了服务单点故障和驱逐节点时导致的可用性降低问题后，我们还需要考虑一种可能导致可用性降低的场景，那就是滚动更新。为什么服务正常滚动更新也可能影响服务的可用性呢？别急，下面我来解释下原因。"
				}
			]
		},
		{
			"ID": "20230906010719-0jx4gmh",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20230906010719-0jx4gmh",
				"updated": "20230906010820"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "1. "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "a",
					"TextMarkAHref": "https://imroc.cc/kubernetes/best-practices/ha/smooth-upgrade.html#%E4%B8%9A%E5%8A%A1%E6%9C%89%E6%8D%9F%E6%BB%9A%E5%8A%A8%E6%9B%B4%E6%96%B0",
					"TextMarkTextContent": "业务有损滚动更新"
				}
			]
		},
		{
			"ID": "20230906010719-7wns3if",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230906010719-7wns3if",
				"updated": "20230906010719"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "假如集群内存在服务间调用:"
				}
			]
		},
		{
			"ID": "20230906010719-v2cyi8b",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230906010719-v2cyi8b",
				"updated": "20230906010731"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/image-20230906010731-e8gpti3.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20230906010719-5p5y2vt",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230906010719-5p5y2vt",
				"updated": "20230906010719"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "当 server 端发生滚动更新时:"
				}
			]
		},
		{
			"ID": "20230906010719-zeade15",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230906010719-zeade15",
				"updated": "20230906010738"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/image-20230906010738-sttyxdb.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20230906010719-viaumrg",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230906010719-viaumrg",
				"updated": "20230906010719"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "发生两种尴尬的情况:"
				}
			]
		},
		{
			"ID": "20230906010719-uxclb9o",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20230906010719-uxclb9o",
				"updated": "20230906010719"
			},
			"Children": [
				{
					"ID": "20230906010719-7uh0i1i",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20230906010719-7uh0i1i",
						"updated": "20230906010719"
					},
					"Children": [
						{
							"ID": "20230906010719-epghto2",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230906010719-epghto2",
								"updated": "20230906010719"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "旧的副本很快销毁，而 client 所在节点 kube-proxy 还没更新完转发规则，仍然将新连接调度给旧副本，造成连接异常，可能会报 \"connection refused\" (进程停止过程中，不再接受新请求) 或 \"no route to host\" (容器已经完全销毁，网卡和 IP 已不存在)。"
								}
							]
						}
					]
				},
				{
					"ID": "20230906010719-xn6rzqa",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20230906010719-xn6rzqa",
						"updated": "20230906010719"
					},
					"Children": [
						{
							"ID": "20230906010719-1lmjjyd",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230906010719-1lmjjyd",
								"updated": "20230906010719"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "新副本启动，client 所在节点 kube-proxy 很快 watch 到了新副本，更新了转发规则，并将新连接调度给新副本，但容器内的进程启动很慢 (比如 Tomcat 这种 java 进程)，还在启动过程中，端口还未监听，无法处理连接，也造成连接异常，通常会报 \"connection refused\" 的错误。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230906010803-1lhsm7q",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20230906010803-1lhsm7q",
				"updated": "20230906010828"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "2. "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "a",
					"TextMarkAHref": "https://imroc.cc/kubernetes/best-practices/ha/smooth-upgrade.html#%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5",
					"TextMarkTextContent": "最佳实践"
				}
			]
		},
		{
			"ID": "20230906010803-qizebw0",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230906010803-qizebw0",
				"updated": "20230906010803"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "针对第一种情况，可以给 container 加 preStop，让 Pod 真正销毁前先 sleep 等待一段时间，等待 client 所在节点 kube-proxy 更新转发规则，然后再真正去销毁容器。这样能保证在 Pod Terminating 后还能继续正常运行一段时间，这段时间如果因为 client 侧的转发规则更新不及时导致还有新请求转发过来，Pod 还是可以正常处理请求，避免了连接异常的发生。听起来感觉有点不优雅，但实际效果还是比较好的，分布式的世界没有银弹，我们只能尽量在当前设计现状下找到并实践能够解决问题的最优解。"
				}
			]
		},
		{
			"ID": "20230906010803-8ivqx5p",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230906010803-8ivqx5p",
				"updated": "20230906010803"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "针对第二种情况，可以给 container 加 ReadinessProbe (就绪检查)，让容器内进程真正启动完成后才更新 Service 的 Endpoint，然后 client 所在节点 kube-proxy 再更新转发规则，让流量进来。这样能够保证等 Pod 完全就绪了才会被转发流量，也就避免了链接异常的发生。"
				}
			]
		},
		{
			"ID": "20230906010803-r4i0boz",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230906010803-r4i0boz",
				"updated": "20230906010803"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "最佳实践 yaml 示例:"
				}
			]
		},
		{
			"ID": "20230906010850-wfi8bjc",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230906010850-wfi8bjc",
				"updated": "20230906010851"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "   readinessProbe:\n          httpGet:\n            path: /healthz\n            port: 80\n            httpHeaders:\n            - name: X-Custom-Header\n              value: Awesome\n          initialDelaySeconds: 10\n          timeoutSeconds: 1\n        lifecycle:\n          preStop:\n            exec:\n              command: [\"/bin/bash\", \"-c\", \"sleep 10\"]\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230906010803-jiqfixd",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230906010803-jiqfixd",
				"updated": "20230906010803"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "最后，业务本身也需要实现优雅终止，避免被销毁时中断业务，参考 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "a",
					"TextMarkAHref": "https://imroc.cc/kubernetes/best-practices/graceful-shutdown/index.html",
					"TextMarkTextContent": "优雅终止最佳实践"
				}
			]
		}
	]
}