{
	"ID": "20230906004043-54i9fy9",
	"Spec": "1",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20230906004043-54i9fy9",
		"scroll": "{\u0026quot;startId\u0026quot;:\u0026quot;20230906004140-pdu2zsa\u0026quot;,\u0026quot;endId\u0026quot;:\u0026quot;20230906010516-anysfoq\u0026quot;,\u0026quot;scrollTop\u0026quot;:0,\u0026quot;focusId\u0026quot;:\u0026quot;20230906004240-472a1om\u0026quot;,\u0026quot;focusStart\u0026quot;:46,\u0026quot;focusEnd\u0026quot;:46}",
		"title": "5.1 Pod打散调度",
		"updated": "20230906010544"
	},
	"Children": [
		{
			"ID": "20230906004140-pdu2zsa",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230906004140-pdu2zsa",
				"updated": "20230906004140"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "将 Pod 打散调度到不同地方，可避免因软硬件故障、光纤故障、断电或自然灾害等因素导致服务不可用，以实现服务的高可用部署。"
				}
			]
		},
		{
			"ID": "20230906004140-skq52qi",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230906004140-skq52qi",
				"updated": "20230906004140"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Kubernetes 支持两种方式将 Pod 打散调度:"
				}
			]
		},
		{
			"ID": "20230906004140-uxe33hl",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20230906004140-uxe33hl",
				"updated": "20230906004140"
			},
			"Children": [
				{
					"ID": "20230906004140-h7fpc6o",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230906004140-h7fpc6o",
						"updated": "20230906004140"
					},
					"Children": [
						{
							"ID": "20230906004140-zbc8ehu",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230906004140-zbc8ehu",
								"updated": "20230906004140"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Pod 反亲和 (Pod Anti-Affinity)"
								}
							]
						}
					]
				},
				{
					"ID": "20230906004140-81r72ao",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230906004140-81r72ao",
						"updated": "20230906004140"
					},
					"Children": [
						{
							"ID": "20230906004140-j7vmaf9",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230906004140-j7vmaf9",
								"updated": "20230906004140"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Pod 拓扑分布约束 (Pod Topology Spread Constraints)"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230906004140-1qjmxoa",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230906004140-1qjmxoa",
				"updated": "20230906004140"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "本文介绍两种方式的用法示例与对比总结。"
				}
			]
		},
		{
			"ID": "20230906004216-fylkx78",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20230906004216-fylkx78",
				"updated": "20230906010544"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "1. "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "a",
					"TextMarkAHref": "https://imroc.cc/kubernetes/best-practices/ha/pod-split-up-scheduling.html#%E4%BD%BF%E7%94%A8-podantiaffinity",
					"TextMarkTextContent": "使用 podAntiAffinity"
				}
			]
		},
		{
			"ID": "20230906004225-tdsssnq",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230906004225-tdsssnq",
				"updated": "20230906004225"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "将 Pod 强制打散调度到不同节点上(强反亲和)，以避免单点故障"
				},
				{
					"Type": "NodeText",
					"Data": ":"
				}
			]
		},
		{
			"ID": "20230906004240-472a1om",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230906004240-472a1om",
				"updated": "20230906004306"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: nginx\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      affinity:\n        podAntiAffinity:\n          requiredDuringSchedulingIgnoredDuringExecution:\n          - topologyKey: kubernetes.io/hostname\n            labelSelector:\n              matchLabels:\n                app: nginx\n      containers:\n      - name: nginx\n        image: nginx\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230906004225-vgjccfq",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20230906004225-vgjccfq",
				"updated": "20230906004344"
			},
			"Children": [
				{
					"ID": "20230906004225-muyplfl",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230906004225-muyplfl",
						"updated": "20230906004225"
					},
					"Children": [
						{
							"ID": "20230906004225-r8mgjlt",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230906004225-r8mgjlt",
								"updated": "20230906004225"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "labelSelector.matchLabels"
								},
								{
									"Type": "NodeText",
									"Data": "​ 替换成选中 Pod 实际使用的 label。"
								}
							]
						}
					]
				},
				{
					"ID": "20230906004225-f46hncp",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230906004225-f46hncp",
						"updated": "20230906004225"
					},
					"Children": [
						{
							"ID": "20230906004225-0rpkgfg",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230906004225-0rpkgfg",
								"updated": "20230906004225"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "topologyKey"
								},
								{
									"Type": "NodeText",
									"Data": "​: 节点的某个 label 的 key，能代表节点所处拓扑域，可以用 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "a",
									"TextMarkAHref": "https://kubernetes.io/docs/reference/labels-annotations-taints/#failure-domainbetakubernetesioregion",
									"TextMarkTextContent": "Well-Known Labels"
								},
								{
									"Type": "NodeText",
									"Data": "，常用的是 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "kubernetes.io/hostname"
								},
								{
									"Type": "NodeText",
									"Data": "​ (节点维度)、"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "topology.kubernetes.io/zone"
								},
								{
									"Type": "NodeText",
									"Data": "​ (可用区/机房 维度)。也可以自行手动为节点打上自定义的 label 来定义拓扑域，比如 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "rack"
								},
								{
									"Type": "NodeText",
									"Data": "​ (机架维度)、"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "machine"
								},
								{
									"Type": "NodeText",
									"Data": "​ (物理机维度)、"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "switch"
								},
								{
									"Type": "NodeText",
									"Data": "​ (交换机维度)。"
								}
							]
						}
					]
				},
				{
					"ID": "20230906004225-bvbj64o",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230906004225-bvbj64o",
						"updated": "20230906004344"
					},
					"Children": [
						{
							"ID": "20230906004225-w072adp",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230906004225-w072adp",
								"updated": "20230906004225"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "若不希望用强制，可以使用弱反亲和，让 Pod 尽量调度到不同节点:"
								}
							]
						},
						{
							"ID": "20230906004334-p33lc6h",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20230906004334-p33lc6h",
								"updated": "20230906004344"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker"
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "podAntiAffinity:\n  preferredDuringSchedulingIgnoredDuringExecution:\n  - podAffinityTerm:\n      topologyKey: kubernetes.io/hostname\n    weight: 100\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230906004225-q9a8m5o",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230906004225-q9a8m5o",
				"updated": "20230906004225"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "将 Pod 强制打散调度到不同可用区(机房)，以实现跨机房容灾"
				},
				{
					"Type": "NodeText",
					"Data": ":"
				}
			]
		},
		{
			"ID": "20230906004225-w6sc9o6",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230906004225-w6sc9o6",
				"updated": "20230906004225"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "将 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "kubernetes.io/hostname"
				},
				{
					"Type": "NodeText",
					"Data": "​ 换成 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "topology.kubernetes.io/zone"
				},
				{
					"Type": "NodeText",
					"Data": "​，其余同上"
				}
			]
		},
		{
			"ID": "20230906010103-mrr09nb",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20230906010103-mrr09nb",
				"updated": "20230906010531"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "2. "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "a",
					"TextMarkAHref": "https://imroc.cc/kubernetes/best-practices/ha/pod-split-up-scheduling.html#%E4%BD%BF%E7%94%A8-topologyspreadconstraints",
					"TextMarkTextContent": "使用 topologySpreadConstraints"
				}
			]
		},
		{
			"ID": "20230906010135-uzg1mfi",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230906010135-uzg1mfi",
				"updated": "20230906010135"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "将 Pod 最大程度上均匀的打散调度到各个节点上"
				},
				{
					"Type": "NodeText",
					"Data": ":"
				}
			]
		},
		{
			"ID": "20230906010140-aet3x0e",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230906010140-aet3x0e",
				"updated": "20230906010147"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: nginx\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      topologySpreadConstraints:\n      - maxSkew: 1\n        topologyKey: kubernetes.io/hostname\n        whenUnsatisfiable: DoNotSchedule\n        labelSelector:\n        - matchLabels:\n            app: nginx\n      containers:\n      - name: nginx\n        image: nginx\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230906010204-s0mcow1",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20230906010204-s0mcow1",
				"updated": "20230906010204"
			},
			"Children": [
				{
					"ID": "20230906010204-bgri63c",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230906010204-bgri63c",
						"updated": "20230906010204"
					},
					"Children": [
						{
							"ID": "20230906010204-a0p8bcq",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230906010204-a0p8bcq",
								"updated": "20230906010204"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "topologyKey"
								},
								{
									"Type": "NodeText",
									"Data": "​: 与 podAntiAffinity 中配置类似。"
								}
							]
						}
					]
				},
				{
					"ID": "20230906010204-wabwxyr",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230906010204-wabwxyr",
						"updated": "20230906010204"
					},
					"Children": [
						{
							"ID": "20230906010204-jvj3rnh",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230906010204-jvj3rnh",
								"updated": "20230906010204"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "labelSelector"
								},
								{
									"Type": "NodeText",
									"Data": "​: 与 podAntiAffinity 中配置类似，只是这里可以支持选中多组 pod 的 label。"
								}
							]
						}
					]
				},
				{
					"ID": "20230906010204-18xsnm6",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230906010204-18xsnm6",
						"updated": "20230906010204"
					},
					"Children": [
						{
							"ID": "20230906010204-9m44fnq",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230906010204-9m44fnq",
								"updated": "20230906010204"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "maxSkew"
								},
								{
									"Type": "NodeText",
									"Data": "​: 必须是大于零的整数，表示能容忍不同拓扑域中 Pod 数量差异的最大值。这里的 1 意味着只允许相差 1 个 Pod。"
								}
							]
						}
					]
				},
				{
					"ID": "20230906010204-wzs8vpv",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230906010204-wzs8vpv",
						"updated": "20230906010204"
					},
					"Children": [
						{
							"ID": "20230906010204-4w470cr",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230906010204-4w470cr",
								"updated": "20230906010204"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "whenUnsatisfiable"
								},
								{
									"Type": "NodeText",
									"Data": "​: 指示不满足条件时如何处理。"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "DoNotSchedule"
								},
								{
									"Type": "NodeText",
									"Data": "​ 不调度 (保持 Pending)，类似强反亲和；"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "ScheduleAnyway"
								},
								{
									"Type": "NodeText",
									"Data": "​ 表示要调度，类似弱反亲和"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230906010236-ijvf9j2",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230906010236-ijvf9j2",
				"updated": "20230906010237"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "以上配置连起来解释: 将所有 nginx 的 Pod 严格均匀打散调度到不同节点上，不同节点上 nginx 的副本数量最多只能相差 1 个，如果有节点因其它因素无法调度更多的 Pod (比如资源不足)，那么就让剩余的 nginx 副本 Pending。"
				}
			]
		},
		{
			"ID": "20230906010244-02s85h8",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230906010244-02s85h8",
				"updated": "20230906010245"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "所以，如果要在所有节点中严格打散，通常不太可取，可以加下 nodeAffinity，只在部分资源充足的节点严格打散:"
				}
			]
		},
		{
			"ID": "20230906010257-9yzs9t8",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230906010257-9yzs9t8",
				"updated": "20230906010259"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "    spec:\n      affinity:\n        nodeAffinity:\n          requiredDuringSchedulingIgnoredDuringExecution:\n            nodeSelectorTerms:\n            - matchExpressions:\n              - key: io\n                operator: In\n                values:\n                - high\n      topologySpreadConstraints:\n      - maxSkew: 1\n        topologyKey: kubernetes.io/hostname\n        whenUnsatisfiable: DoNotSchedule\n        labelSelector:\n        - matchLabels:\n            app: nginx\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230906010350-t6gstrq",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230906010350-t6gstrq",
				"updated": "20230906010351"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "或者类似弱反亲和， "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "将 Pod 尽量均匀的打散调度到各个节点上，不强制"
				},
				{
					"Type": "NodeText",
					"Data": " (DoNotSchedule 改为 ScheduleAnyway):"
				}
			]
		},
		{
			"ID": "20230906010353-ucgf9ek",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230906010353-ucgf9ek",
				"updated": "20230906010400"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "如果集群节点支持跨可用区，也可以 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "将 Pod 尽量均匀的打散调度到各个可用区"
				},
				{
					"Type": "NodeText",
					"Data": " 以实现更高级别的高可用 (topologyKey 改为 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "topology.kubernetes.io/zone"
				},
				{
					"Type": "NodeText",
					"Data": "​):"
				}
			]
		},
		{
			"ID": "20230906010401-83knirx",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230906010401-83knirx",
				"updated": "20230906010413"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "    spec:\n      topologySpreadConstraints:\n      - maxSkew: 1\n        topologyKey: topology.kubernetes.io/zone\n        whenUnsatisfiable: ScheduleAnyway\n        labelSelector:\n        - matchLabels:\n            app: nginx\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230906010419-o6syojz",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230906010419-o6syojz",
				"updated": "20230906010419"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "更进一步地，可以 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "将 Pod 尽量均匀的打散调度到各个可用区的同时，在可用区内部各节点也尽量打散"
				},
				{
					"Type": "NodeText",
					"Data": ":"
				}
			]
		},
		{
			"ID": "20230906010427-35jm2fl",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230906010427-35jm2fl",
				"updated": "20230906010429"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "    spec:\n      topologySpreadConstraints:\n      - maxSkew: 1\n        topologyKey: topology.kubernetes.io/zone\n        whenUnsatisfiable: ScheduleAnyway\n        labelSelector:\n        - matchLabels:\n            app: nginx\n      - maxSkew: 1\n        topologyKey: kubernetes.io/hostname\n        whenUnsatisfiable: ScheduleAnyway\n        labelSelector:\n        - matchLabels:\n            app: nginx\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230906010459-snz23t5",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20230906010459-snz23t5",
				"updated": "20230906010508"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "3. 小结"
				}
			]
		},
		{
			"ID": "20230906010508-ix9k4na",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230906010508-ix9k4na",
				"updated": "20230906010510"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "从示例能明显看出，"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "topologySpreadConstraints"
				},
				{
					"Type": "NodeText",
					"Data": "​ 比 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "podAntiAffinity"
				},
				{
					"Type": "NodeText",
					"Data": "​ 功能更强，提供了提供更精细的调度控制，我们可以理解成 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "topologySpreadConstraints"
				},
				{
					"Type": "NodeText",
					"Data": "​ 是 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "podAntiAffinity"
				},
				{
					"Type": "NodeText",
					"Data": "​ 的升级版。"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "topologySpreadConstraints"
				},
				{
					"Type": "NodeText",
					"Data": "​ 特性在 K8S v1.18 默认启用，所以建议 v1.18 及其以上的集群使用 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "topologySpreadConstraints"
				},
				{
					"Type": "NodeText",
					"Data": "​ 来打散 Pod 的分布以提高服务可用性。"
				}
			]
		},
		{
			"ID": "20230906010516-2hx13bt",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20230906010516-2hx13bt",
				"updated": "20230906010526"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "4. "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "a",
					"TextMarkAHref": "https://imroc.cc/kubernetes/best-practices/ha/pod-split-up-scheduling.html#%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99",
					"TextMarkTextContent": "参考资料"
				}
			]
		},
		{
			"ID": "20230906010516-anysfoq",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20230906010516-anysfoq",
				"updated": "20230906010516"
			},
			"Children": [
				{
					"ID": "20230906010516-j092d04",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230906010516-j092d04",
						"updated": "20230906010516"
					},
					"Children": [
						{
							"ID": "20230906010516-1xe5eh3",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230906010516-1xe5eh3",
								"updated": "20230906010516"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "a",
									"TextMarkAHref": "https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/",
									"TextMarkTextContent": "Pod Topology Spread Constraints"
								}
							]
						}
					]
				}
			]
		}
	]
}