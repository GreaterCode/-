{
	"ID": "20221122154416-gux5uyv",
	"Spec": "1",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20221122154416-gux5uyv",
		"title": "Kubernetes 中数据包的生命周期 -- 第 3 部分",
		"updated": "20221122154416"
	},
	"Children": [
		{
			"ID": "20221122154416-tiuj6au",
			"Type": "NodeThematicBreak",
			"Properties": {
				"id": "20221122154416-tiuj6au"
			}
		},
		{
			"ID": "20221122154416-pwpbde8",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20221122154416-pwpbde8"
			},
			"Children": [
				{
					"ID": "20221122154416-316k9j3",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122154416-316k9j3"
					},
					"Children": [
						{
							"ID": "20221122154416-uxea6b8",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122154416-uxea6b8"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "a",
									"TextMarkAHref": "https://mp.weixin.qq.com/s?__biz=MzkxOTIwMDgxMg==\u0026mid=2247485836\u0026idx=1\u0026sn=b0f8847151a00e768f83f97a373d50ed\u0026chksm=c1a4fccff6d375d91673221ae435ce65f18f6cde72f1c7f546ef1e4b3d6ee0aca4fe3ddf3d7c\u0026cur_album_id=2342519043662004229\u0026scene=189#wechat_redirect",
									"TextMarkTextContent": "https://mp.weixin.qq.com/s?__biz=MzkxOTIwMDgxMg==\u0026amp;mid=2247485836\u0026amp;idx=1\u0026amp;sn=b0f8847151a00e768f83f97a373d50ed\u0026amp;chksm=c1a4fccff6d375d91673221ae435ce65f18f6cde72f1c7f546ef1e4b3d6ee0aca4fe3ddf3d7c\u0026amp;cur_album_id=2342519043662004229\u0026amp;scene=189#wechat_redirect - 微信公众平台"
								}
							]
						}
					]
				},
				{
					"ID": "20221122154416-w2ts1dg",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122154416-w2ts1dg"
					},
					"Children": [
						{
							"ID": "20221122154416-gndsxc2",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122154416-gndsxc2"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "本文将介绍 Kubernetes 中的 kube-proxy 组件如何使用 iptables 来控制流量的。"
								}
							]
						}
					]
				},
				{
					"ID": "20221122154416-qv330zt",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122154416-qv330zt"
					},
					"Children": [
						{
							"ID": "20221122154416-nur9zar",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122154416-nur9zar"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "2022-11-22 15:44:16"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221122154416-ik61f5p",
			"Type": "NodeThematicBreak",
			"Properties": {
				"id": "20221122154416-ik61f5p"
			}
		},
		{
			"ID": "20221122154416-d76i95m",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20221122154416-d76i95m"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20221122154416-juungru",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20221122154416-juungru"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "本文翻译自："
						},
						{
							"Type": "NodeTextMark",
							"TextMarkType": "strong",
							"TextMarkTextContent": "Life of a Packet in Kubernetes — Part 3 [1]"
						},
						{
							"Type": "NodeText",
							"Data": "\n作者：Dinesh Kumar Ramasamy\n本文在原文的基础上做了适当的修改，如有疑问请查阅原文。"
						}
					]
				}
			]
		},
		{
			"ID": "20221122154416-zu5eh0a",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122154416-zu5eh0a"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "本文是 Kubernetes 中数据包的生命周期系列文章的第 3 部分。我们将讨论 Kubernetes 的 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "kube-proxy"
				},
				{
					"Type": "NodeText",
					"Data": " 组件如何使用 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "iptables"
				},
				{
					"Type": "NodeText",
					"Data": " 来控制流量。了解 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "kube-proxy"
				},
				{
					"Type": "NodeText",
					"Data": " 在 Kubernetes 环境中的作用以及它如何使用 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "iptables"
				},
				{
					"Type": "NodeText",
					"Data": " 来控制流量非常重要。"
				}
			]
		},
		{
			"ID": "20221122154416-61u1ipu",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122154416-61u1ipu"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "本文包含以下章节："
				}
			]
		},
		{
			"ID": "20221122154416-cjhmxrj",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20221122154416-cjhmxrj"
			},
			"Children": [
				{
					"ID": "20221122154416-pll1q4j",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122154416-pll1q4j"
					},
					"Children": [
						{
							"ID": "20221122154416-kudpt7m",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122154416-kudpt7m"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "1.Pod-to-Pod"
								}
							]
						}
					]
				},
				{
					"ID": "20221122154416-jq4csbf",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122154416-jq4csbf"
					},
					"Children": [
						{
							"ID": "20221122154416-g4juuj7",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122154416-g4juuj7"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "2.Pod-to-External"
								}
							]
						}
					]
				},
				{
					"ID": "20221122154416-x7f1lgn",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122154416-x7f1lgn"
					},
					"Children": [
						{
							"ID": "20221122154416-7lrlxjs",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122154416-7lrlxjs"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "3.Pod-to-Service"
								}
							]
						}
					]
				},
				{
					"ID": "20221122154416-5sw1fiv",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122154416-5sw1fiv"
					},
					"Children": [
						{
							"ID": "20221122154416-1x08fxy",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122154416-1x08fxy"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "4.NodePort（External-to-Pod）"
								}
							]
						}
					]
				},
				{
					"ID": "20221122154416-94gumyy",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122154416-94gumyy"
					},
					"Children": [
						{
							"ID": "20221122154416-tw68s3u",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122154416-tw68s3u"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "5.External Traffic Policy"
								}
							]
						}
					]
				},
				{
					"ID": "20221122154416-68lco0f",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122154416-68lco0f"
					},
					"Children": [
						{
							"ID": "20221122154416-u2538xb",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122154416-u2538xb"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "6.Kube-Proxy"
								}
							]
						}
					]
				},
				{
					"ID": "20221122154416-mvopiwa",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122154416-mvopiwa"
					},
					"Children": [
						{
							"ID": "20221122154416-52fo1yy",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122154416-52fo1yy"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "7.iptables 规则处理流程"
								}
							]
						}
					]
				},
				{
					"ID": "20221122154416-4j0y4bz",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122154416-4j0y4bz"
					},
					"Children": [
						{
							"ID": "20221122154416-zdx94ke",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122154416-zdx94ke"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "8.Headless Service"
								}
							]
						}
					]
				},
				{
					"ID": "20221122154416-wnicuuk",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122154416-wnicuuk"
					},
					"Children": [
						{
							"ID": "20221122154416-f2pnzte",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122154416-f2pnzte"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "9.Network Policy"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221122154416-mfcvobw",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20221122154416-mfcvobw"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "1 Pod-to-Pod"
				}
			]
		},
		{
			"ID": "20221122154416-uxvx0xb",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122154416-uxvx0xb"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "kube-proxy"
				},
				{
					"Type": "NodeText",
					"Data": " 不会参与 Pod 之间的通信，因为 CNI 会为 Node 和 Pod 配置所需的路由。所有容器都可以在没有 NAT 的情况下与其他容器进行通信。所有节点都可以在没有 NAT 的情况下与容器通信（反之亦然）。"
				}
			]
		},
		{
			"ID": "20221122154416-uqnpgbq",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122154416-uqnpgbq"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "注意：Pod 的 IP 地址不是静态的（静态 IP 有多种配置方式，但默认配置不保证静态 IP 地址）。当 Pod 重启时，CNI 会为 Pod 分配一个新的 IP 地址，因为 CNI 不会维护 Pod 和 IP 地址之间的映射关系。另外，通过 Deployment 方式部署的 Pod 的名字也不是静态的。"
				}
			]
		},
		{
			"ID": "20221122154416-515ej3x",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122154416-515ej3x"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "图片"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/640-20221122154416-8c8vyxf"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20221122154416-ekfy2ab",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122154416-ekfy2ab"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "实际上，通过 Deployment 部署的 Pod 应该使用负载均衡类型的实体来发布服务，因为应用程序是无状态的，并且通常会有多个 Pod 托管应用程序。负载均衡器类型的实体在 Kubernetes中称为  "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "Service"
				},
				{
					"Type": "NodeText",
					"Data": " 。"
				}
			]
		},
		{
			"ID": "20221122154416-3stisot",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20221122154416-3stisot"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "2 Pod-to-external"
				}
			]
		},
		{
			"ID": "20221122154416-pivy3k8",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122154416-pivy3k8"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "对于从 Pod 到外部地址的流量，Kubernetes 使用 SNAT（源地址转换）。它所做的是将 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "Pod IP:Port"
				},
				{
					"Type": "NodeText",
					"Data": " 替换为 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "主机 IP:Port"
				},
				{
					"Type": "NodeText",
					"Data": " 。当返回的数据包到主机时，主机会修改数据包中的目标 IP 和端口为  "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "Pod IP:Port"
				},
				{
					"Type": "NodeText",
					"Data": " ，并将数据包发回原始的 Pod。整个过程对原始 Pod 是透明的，Pod 并不知道发生了地址转换。"
				}
			]
		},
		{
			"ID": "20221122154416-9wjw1ih",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20221122154416-9wjw1ih"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "3 Pod-to-Service"
				}
			]
		},
		{
			"ID": "20221122154416-6dypzvt",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122154416-6dypzvt"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Kubernetes 中有一个叫做 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "Service"
				},
				{
					"Type": "NodeText",
					"Data": " 的概念，它是 Pod 前面的 L4 负载均衡器。在 Kubernetes 中有几种不同类型的 Service，最基本的类型称为 ClusterIP。这种类型的 Service 有一个唯一的 VIP 地址，只能在集群内部路由。"
				}
			]
		},
		{
			"ID": "20221122154416-d5rmax6",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122154416-d5rmax6"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "仅仅通过 Pod IP 将流量发送到特定的应用程序并不容易。Kubernetes 集群的动态特性意味着 Pod 可以被移动，重启，升级或者扩缩容。此外，一些服务会有很多副本，因此我们需要一些方法来平衡它们之间的负载。"
				}
			]
		},
		{
			"ID": "20221122154416-9g8nfix",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122154416-9g8nfix"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Kubernetes 通过 Service 解决了这个问题。Service 是一个 API 对象，它将单个虚拟 IP（VIP）映射到一组 Pod IP。此外，Kubernetes 还为每个 Service 的 VIP 提供了 DNS 的解析条目，以便可以轻松通过域名来访问 Service。"
				}
			]
		},
		{
			"ID": "20221122154416-53z7dx3",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122154416-53z7dx3"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "集群内 VIP 到 Pod IP 的映射由每个节点上的 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "kube-proxy"
				},
				{
					"Type": "NodeText",
					"Data": " 进程协调。kube-proxy 通过设置 iptables 或者 IPVS 规则将目的地址是 Service VIP 的请求转换为 Pod IP。请求建立的连接会被追踪，因此数据包从 Pod 返回时可以正确地转换为 Service 的 VIP 再响应客户端。IPVS 和 iptables 可以将单个 Service 的 VIP 负载均衡到多个 Pod IP，IPVS 和 iptables 相比有着更好的性能和更灵活的负载均衡算法。"
				}
			]
		},
		{
			"ID": "20221122154416-0bj6flr",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122154416-0bj6flr"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "图片"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/640-20221122154416-iyxf32c"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "接下来创建 FrontEnd 和 Backend 两个 Deployment，并通过 ClusterIP 类型的 Service 作为负载均衡。"
				}
			]
		},
		{
			"ID": "20221122154416-goze4y9",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122154416-goze4y9"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "FrontEnd Deployment:"
				}
			]
		},
		{
			"ID": "20221122154416-7bkfwbl",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221122154416-7bkfwbl"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: webapp\n  labels:\n    app: webapp\nspec:\n  replicas: 2\n  selector:\n    matchLabels:\n      app: webapp\n  template:\n    metadata:\n      labels:\n        app: webapp\n    spec:\n      containers:\n      - name: nginx\n        image: nginx:1.14.2\n        imagePullPolicy: IfNotPresent\n        ports:\n        - containerPort: 80\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221122154416-v8fo3tc",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122154416-v8fo3tc"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "Backend Deployment:"
				}
			]
		},
		{
			"ID": "20221122154416-j1uty9h",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221122154416-j1uty9h"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: auth\n  labels:\n    app: auth\nspec:\n  replicas: 2\n  selector:\n    matchLabels:\n      app: auth\n  template:\n    metadata:\n      labels:\n        app: auth\n    spec:\n      containers:\n      - name: nginx\n        image: nginx:1.14.2\n        imagePullPolicy: IfNotPresent\n        ports:\n        - containerPort: 80\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221122154416-j3pcosi",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122154416-j3pcosi"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "Service:"
				}
			]
		},
		{
			"ID": "20221122154416-chopq9a",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221122154416-chopq9a"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "---\napiVersion: v1\nkind: Service\nmetadata:\n  name: frontend\n  labels:\n    app: frontend\nspec:\n  ports:\n  - port: 80\n    protocol: TCP\n  type: ClusterIP\n  selector:\n    app: webapp\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: backend\n  labels:\n    app: backend\nspec:\n  ports:\n  - port: 80\n    protocol: TCP\n  type: ClusterIP\n  selector:\n    app: auth\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221122154416-hlv4h6i",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122154416-hlv4h6i"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "现在 FrontEnd Pod 可以通过 ClusterIP 或者 Kubernetes 添加的 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "DNS"
				},
				{
					"Type": "NodeText",
					"Data": " 条目访问 Backend。一个集群感知的 DNS 服务器，例如 CoreDNS，监视 Kubernetes API 获取新创建的服务，并为每个服务创建一组 DNS 记录。"
				}
			]
		},
		{
			"ID": "20221122154416-xjlwpev",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122154416-xjlwpev"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "图片"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/640-20221122154416-au8463j"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20221122154416-pfqvhfw",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20221122154416-pfqvhfw"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20221122154416-k61a9m0",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20221122154416-k61a9m0"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "“普通“服务（除了无头服务）会以 "
						},
						{
							"Type": "NodeTextMark",
							"TextMarkType": "code",
							"TextMarkTextContent": "your-svc.your-namespace.svc.cluster.local"
						},
						{
							"Type": "NodeText",
							"Data": " 这种名字的形式分配一个 DNS 记录。该名称会解析成对应 Service 的 ClusterIP。"
						}
					]
				}
			]
		},
		{
			"ID": "20221122154416-mmk0sp3",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20221122154416-mmk0sp3"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "4 NodePort（External-to-Pod）"
				}
			]
		},
		{
			"ID": "20221122154416-1a33a87",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122154416-1a33a87"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "现在我们可以在集群内部通过 VIP 或者域名访问 Service。 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "然而，由于 VIP 是虚拟和私有的，此时外部请求还无法到达集群内的 Service"
				},
				{
					"Type": "NodeText",
					"Data": " 。"
				}
			]
		},
		{
			"ID": "20221122154416-p895jwx",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122154416-p895jwx"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "图片"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/640-20221122154416-c6kjbrc"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20221122154416-hb3mcnc",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122154416-hb3mcnc"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "让我们创建一个 NodePort 类型的服务将 FrontEnd 服务暴露到集群外部。如果将 Service 的 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "type"
				},
				{
					"Type": "NodeText",
					"Data": " 字段设置为 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "NodePort"
				},
				{
					"Type": "NodeText",
					"Data": " 时，Kubernetes 会为该服务分配一个随机端口。端口的默认范围是 30000-32767，可以通过 API Server 的 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "--service-node-port-range"
				},
				{
					"Type": "NodeText",
					"Data": " 参数进行设置。每个节点会将访问 nodePort 端口（每个端口号相同）的请求代理到你的 Service。"
				}
			]
		},
		{
			"ID": "20221122154416-5ox3gz9",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221122154416-5ox3gz9"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "---\napiVersion: v1\nkind: Service\nmetadata:\n  name: frontend\nspec:\n  type: NodePort # 将 Service 设置为 NodePort 类型\n  selector:\n    app: webapp\n  ports:\n      # By default and for convenience, the `targetPort` is set to the same value as the `port` field.\n    - port: 80\n      targetPort: 80\n      # Optional field\n      # By default and for convenience, the Kubernetes control plane will allocate a port from a range (default: 30000-32767)\n      nodePort: 31380 # 指定端口\n...\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221122154416-ckrxd46",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122154416-ckrxd46"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "图片"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/640-20221122154416-nkjfh2e"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20221122154416-yiijmz8",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122154416-yiijmz8"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "现在我们可以在集群外部通过 \u003c任何一个节点 IP\u003e:\u003cnodePort 端口\u003e 访问 FrontEnd Service 了。如果你需要指定特定的端口号，那么可以在 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "nodePort"
				},
				{
					"Type": "NodeText",
					"Data": " 字段中进行设置。这意味着你需要自己处理可能的端口冲突，同时你还必须使用一个有效的端口号，当设置的 nodePort 冲突或超过范围时，API Server 会返回错误信息。"
				}
			]
		},
		{
			"ID": "20221122154416-473q4wj",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20221122154416-473q4wj"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "5 External Traffic Policy"
				}
			]
		},
		{
			"ID": "20221122154416-80xz1xf",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122154416-80xz1xf"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "ExternalTrafficPolicy 表示该 Service 是否希望将外部流量路由到节点本地或集群范围的端点。"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "Local"
				},
				{
					"Type": "NodeText",
					"Data": " 表示保留客户端的源 IP，并且 NodePort 或者 LoadBalancer 类型的 Service 将不会把流量分发到其他节点上的 Pod，这样可以避免产生额外的网络跳数，与此同时可能会存在流量传播不平衡的风险。"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "Cluster"
				},
				{
					"Type": "NodeText",
					"Data": " 隐藏了客户端的源 IP，并且可能会将流量分发到其他节点上的 Pod， 此时会产生额外的网络跳数，但这样会具有良好的整体负载均衡。"
				}
			]
		},
		{
			"ID": "20221122154416-ppk31sq",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20221122154416-ppk31sq"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "5.1 Cluster Traffic Policy"
				}
			]
		},
		{
			"ID": "20221122154416-wh5twg9",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122154416-wh5twg9"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Cluster Traffic Policy 是 Kubernetes Service "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "默认"
				},
				{
					"Type": "NodeText",
					"Data": "的 ExternalTrafficPolicy 策略。这里假设的是，你总是希望将流量平衡地路由到 Service 下的所有 Pod。"
				}
			]
		},
		{
			"ID": "20221122154416-3jjfrd9",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122154416-3jjfrd9"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "使用此策略的一个注意事项是，当外部流量访问 NodePort Service 时，你可能会在节点之间看到不必要的网络跃点。例如，当通过 NodePort 接收外部流量，NodePort Service 可能会（随机）将流量路由到另一台主机上的 Pod，而它本来可以将流量路由到同一主机上的 Pod，从而避免额外的网络跳数。"
				}
			]
		},
		{
			"ID": "20221122154416-nl787g1",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122154416-nl787g1"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "Cluster"
				},
				{
					"Type": "NodeText",
					"Data": " Traffic Policy 中数据包的流量如下："
				}
			]
		},
		{
			"ID": "20221122154416-xxw3ws1",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20221122154416-xxw3ws1"
			},
			"Children": [
				{
					"ID": "20221122154416-5hiwqfm",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122154416-5hiwqfm"
					},
					"Children": [
						{
							"ID": "20221122154416-lm85moe",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122154416-lm85moe"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "客户端发送数据包到 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Node2:3138"
								},
								{
									"Type": "NodeText",
									"Data": "。"
								}
							]
						}
					]
				},
				{
					"ID": "20221122154416-axpr6f5",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122154416-axpr6f5"
					},
					"Children": [
						{
							"ID": "20221122154416-jtzodrp",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122154416-jtzodrp"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Node2"
								},
								{
									"Type": "NodeText",
									"Data": " 将数据包的目标 IP 通过  "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "DNAT"
								},
								{
									"Type": "NodeText",
									"Data": " （目标地址）转换为 Pod IP。"
								}
							]
						}
					]
				},
				{
					"ID": "20221122154416-exxdxb6",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122154416-exxdxb6"
					},
					"Children": [
						{
							"ID": "20221122154416-8k5gpp1",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122154416-8k5gpp1"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Node2"
								},
								{
									"Type": "NodeText",
									"Data": " 将数据包的源 IP 通过  "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "SNAT"
								},
								{
									"Type": "NodeText",
									"Data": " （源地址转换）转换为 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Node2"
								},
								{
									"Type": "NodeText",
									"Data": " 自身的 IP。"
								}
							]
						}
					]
				},
				{
					"ID": "20221122154416-3s8l20m",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122154416-3s8l20m"
					},
					"Children": [
						{
							"ID": "20221122154416-8v0wr1u",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122154416-8v0wr1u"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "数据包路由到 Node1 或者 Node3，然后交给节点上的 Pod。"
								}
							]
						}
					]
				},
				{
					"ID": "20221122154416-96tj6v4",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122154416-96tj6v4"
					},
					"Children": [
						{
							"ID": "20221122154416-0czurff",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122154416-0czurff"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Pod 的响应回到 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Node2"
								},
								{
									"Type": "NodeText",
									"Data": "，源 IP 是 Pod IP，目标 IP 是 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Node2"
								},
								{
									"Type": "NodeText",
									"Data": " 的 IP。"
								}
							]
						}
					]
				},
				{
					"ID": "20221122154416-crlvxxk",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122154416-crlvxxk"
					},
					"Children": [
						{
							"ID": "20221122154416-nnaz1c7",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122154416-nnaz1c7"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Node2"
								},
								{
									"Type": "NodeText",
									"Data": " 将 Pod 返回数据包的源 IP 修改为 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Node2"
								},
								{
									"Type": "NodeText",
									"Data": " 的 IP，目标 IP 修改为客户端的 IP，然后响应客户端。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221122154416-jlzxrnb",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122154416-jlzxrnb"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "图片"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/640-20221122154416-eckbx87"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20221122154416-voizhdq",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20221122154416-voizhdq"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "5.2 Local Traffic Policy"
				}
			]
		},
		{
			"ID": "20221122154416-zn9mugc",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122154416-zn9mugc"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "当使用 Local Traffic Policy 策略时，kube-proxy 将仅为同一节点（本地）上的 Pod 添加代理规则，而不是为 Service 的每个 Pod 添加代理规则。此时 kube-proxy 只会将请求代理到本地端点，而不会将流量转发到其他节点。"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "这样可以保留原始的源 IP 地址。"
				},
				{
					"Type": "NodeText",
					"Data": " 如果没有本地端点，则丢弃发送到节点的数据包。"
				}
			]
		},
		{
			"ID": "20221122154416-hjdla88",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122154416-hjdla88"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "如果你尝试在 Serivce 上设置 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "externalTrafficPolicy: Local"
				},
				{
					"Type": "NodeText",
					"Data": "，Kubernetes API 将要求你使用 LoadBalancer 或 NodePort 类型的 Service。这是因为 Local 模式的 ExternalTrafficPolicy 策略仅与外部流量相关，因此只适用于这两种类型的 Service。"
				}
			]
		},
		{
			"ID": "20221122154416-lpuztoe",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221122154416-lpuztoe"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "---\napiVersion: v1\nkind: Service\nmetadata:\n  name: frontend\nspec:\n  type: NodePort\n  externalTrafficPolicy: Local # 仅转发到本地 Pod，保留客户端源 IP\n  selector:\n    app: webapp\n  ports:\n      # By default and for convenience, the `targetPort` is set to the same value as the `port` field.\n    - port: 80\n      targetPort: 80\n      # Optional field\n      # By default and for convenience, the Kubernetes control plane will allocate a port from a range (default: 30000-32767)\n      nodePort: 31380\n...\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221122154416-ub3cwxl",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122154416-ub3cwxl"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "Local"
				},
				{
					"Type": "NodeText",
					"Data": " Traffic Policy 中数据包的流量如下："
				}
			]
		},
		{
			"ID": "20221122154416-uvp4jq0",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20221122154416-uvp4jq0"
			},
			"Children": [
				{
					"ID": "20221122154416-lk8ajsp",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122154416-lk8ajsp"
					},
					"Children": [
						{
							"ID": "20221122154416-jcovdin",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122154416-jcovdin"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "客户端发送数据包到 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Node1:31380"
								},
								{
									"Type": "NodeText",
									"Data": "，该节点上有 FrontEnd 的 Pod。"
								}
							]
						}
					]
				},
				{
					"ID": "20221122154416-pc0nmyt",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122154416-pc0nmyt"
					},
					"Children": [
						{
							"ID": "20221122154416-fp7ta5z",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122154416-fp7ta5z"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Node1 将数据包路由到本地的 Pod，保留正确的源 IP。"
								}
							]
						}
					]
				},
				{
					"ID": "20221122154416-89gt7qp",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122154416-89gt7qp"
					},
					"Children": [
						{
							"ID": "20221122154416-e8a9f5f",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122154416-e8a9f5f"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "由于设置了 Local 的转发策略，因此 Node1 不会将数据包路由到 Node3。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221122154416-e6h64nq",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122154416-e6h64nq"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "图片"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/640-20221122154416-pmjneox"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20221122154416-zqmor1z",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20221122154416-zqmor1z"
			},
			"Children": [
				{
					"ID": "20221122154416-9lgsb7i",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122154416-9lgsb7i"
					},
					"Children": [
						{
							"ID": "20221122154416-3jisv9b",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122154416-3jisv9b"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "客户端发送数据包到 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Node2:31380"
								},
								{
									"Type": "NodeText",
									"Data": "，该节点上没有 FrontEnd 的 Pod。"
								}
							]
						}
					]
				},
				{
					"ID": "20221122154416-1ienzu4",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122154416-1ienzu4"
					},
					"Children": [
						{
							"ID": "20221122154416-o9lbfwv",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122154416-o9lbfwv"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "数据包将会被 Node2 丢弃。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221122154416-mqhw1fm",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122154416-mqhw1fm"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "图片"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/640-20221122154416-8t2x16p"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20221122154416-q8hdt64",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20221122154416-q8hdt64"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "5.3 Local traffic policy in LoadBalancer Service type"
				}
			]
		},
		{
			"ID": "20221122154416-6nga3qu",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122154416-6nga3qu"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "当你将公有云的 Kubernetes 服务（例如 Google Kubernetes Engine，GCE）中的 Service 设置为 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "externalTrafficPolicy: Local"
				},
				{
					"Type": "NodeText",
					"Data": " 时，如果节点中没有 Service 对应的 Pod，将不会通过负载均衡器（LB）的健康检查而被移出转发列表，在这种情况下不会发生数据包的丢弃。这种模式非常适合有大量的入访流量，同时希望避免网络上不必要的跃点以减少延迟的应用程序。同时我们还可以保留真正的客户端 IP，因为我们不再需要来自代理节点的 SNAT 流量！然而，正如 Kubernetes 文档中提到的，使用 Local traffic policy 策略的最大缺点是应用程序的流量可能不平衡。"
				}
			]
		},
		{
			"ID": "20221122154416-09qy00k",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122154416-09qy00k"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "图片"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/640-20221122154416-5w43lbk"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20221122154416-i4i3pxv",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20221122154416-i4i3pxv"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "6 Kube-Proxy (iptable mode)"
				}
			]
		},
		{
			"ID": "20221122154416-r3l2t51",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122154416-r3l2t51"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Kubernetes 中实现 Service 的组件称为  "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "kube-proxy"
				},
				{
					"Type": "NodeText",
					"Data": " 。它位于每个节点上，编写复杂的 iptables 规则以在 Pod 和 Service 之间进行各种过滤和 NAT。如果你到 Kubernetes 节点上执行 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "iptables-save"
				},
				{
					"Type": "NodeText",
					"Data": " 命令，你将能够看到 Kubernetes 或者其他程序插入的 iptables 规则。其中最重要的链是  "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "KUBE-SERVICES"
				},
				{
					"Type": "NodeText",
					"Data": ", "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "KUBE-SVC-*"
				},
				{
					"Type": "NodeText",
					"Data": " 和 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "KUBE-SEP-*"
				},
				{
					"Type": "NodeText",
					"Data": "。"
				}
			]
		},
		{
			"ID": "20221122154416-u08pdnw",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20221122154416-u08pdnw"
			},
			"Children": [
				{
					"ID": "20221122154416-zqmp7eg",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122154416-zqmp7eg"
					},
					"Children": [
						{
							"ID": "20221122154416-altc6rr",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122154416-altc6rr"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "KUBE-SERVICES"
								},
								{
									"Type": "NodeText",
									"Data": " 链是访问 Service 的入口，它的作用是匹配目标 IP:Port 并将数据包分发到相应的 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "KUBE-SVC-*"
								},
								{
									"Type": "NodeText",
									"Data": " 链。"
								}
							]
						}
					]
				},
				{
					"ID": "20221122154416-n1bx2ce",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122154416-n1bx2ce"
					},
					"Children": [
						{
							"ID": "20221122154416-oqxtazc",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122154416-oqxtazc"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "KUBE-SVC-*"
								},
								{
									"Type": "NodeText",
									"Data": " 链充当负载均衡器（Service），将数据包平均分配到 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "KUBE-SEP-*"
								},
								{
									"Type": "NodeText",
									"Data": " 链。每个 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "KUBE-SVC-*"
								},
								{
									"Type": "NodeText",
									"Data": " 链中含有与其后面端点数量相同的 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "KUBE-SEP-*"
								},
								{
									"Type": "NodeText",
									"Data": " 链。"
								}
							]
						}
					]
				},
				{
					"ID": "20221122154416-i85tfua",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122154416-i85tfua"
					},
					"Children": [
						{
							"ID": "20221122154416-9mog3yy",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122154416-9mog3yy"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "KUBE-SEP-*"
								},
								{
									"Type": "NodeText",
									"Data": " 链代表一个服务端点（Pod），它只做 DNAT，将 Service 的 IP:Port 替换为 Pod 的 IP:Port。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221122154416-xu4eej8",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122154416-xu4eej8"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "对于 DNAT，conntrack 会跟踪连接状态，因为它需要记住修改的目标地址，以便数据包返回时将其更改回来。iptables 还可以依靠 conntrack 状态 (ctstate) 来决定数据包的命运。这 4 个 conntrack 状态尤其重要："
				}
			]
		},
		{
			"ID": "20221122154416-tjlnkzw",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20221122154416-tjlnkzw"
			},
			"Children": [
				{
					"ID": "20221122154416-cl3xmg8",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122154416-cl3xmg8"
					},
					"Children": [
						{
							"ID": "20221122154416-9nfr32c",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122154416-9nfr32c"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "NEW"
								},
								{
									"Type": "NodeText",
									"Data": " ：一个连接的初始状态（例如：TCP 连接中，一个 SYN 包的到来）。"
								}
							]
						}
					]
				},
				{
					"ID": "20221122154416-4o2cve8",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122154416-4o2cve8"
					},
					"Children": [
						{
							"ID": "20221122154416-cykh9q0",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122154416-cykh9q0"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "ESTABLISHED"
								},
								{
									"Type": "NodeText",
									"Data": " ：连接已经建立完成。"
								}
							]
						}
					]
				},
				{
					"ID": "20221122154416-czlpa95",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122154416-czlpa95"
					},
					"Children": [
						{
							"ID": "20221122154416-7o9ky0h",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122154416-7o9ky0h"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "RELATED"
								},
								{
									"Type": "NodeText",
									"Data": " ：这是一个关联连接，是一个主链接的子连接，例如 FTP 的数据通道的连接。"
								}
							]
						}
					]
				},
				{
					"ID": "20221122154416-4dfj5pc",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122154416-4dfj5pc"
					},
					"Children": [
						{
							"ID": "20221122154416-9or5sjn",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122154416-9or5sjn"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "INVALID"
								},
								{
									"Type": "NodeText",
									"Data": " ：这是一个特殊的状态，用于记录那些没有按照预期行为进行的连接。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221122154416-zsyqkma",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122154416-zsyqkma"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "以下是 Pod 和 Service 之间连接的工作方式，事件的顺序如下："
				}
			]
		},
		{
			"ID": "20221122154416-nyt6751",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20221122154416-nyt6751"
			},
			"Children": [
				{
					"ID": "20221122154416-dte1juo",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122154416-dte1juo"
					},
					"Children": [
						{
							"ID": "20221122154416-92jaw5t",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122154416-92jaw5t"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "左侧的客户端 Pod 向 Service 2.2.2.10:80 发送数据包。"
								}
							]
						}
					]
				},
				{
					"ID": "20221122154416-84fenvv",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122154416-84fenvv"
					},
					"Children": [
						{
							"ID": "20221122154416-5tx076o",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122154416-5tx076o"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "数据包在客户端节点经过 iptables 规则，目的 IP 被更改为服务端 Pod IP（1.1.1.20:80）。"
								}
							]
						}
					]
				},
				{
					"ID": "20221122154416-ny77f8l",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122154416-ny77f8l"
					},
					"Children": [
						{
							"ID": "20221122154416-rm2m3h9",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122154416-rm2m3h9"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "数据包返回客户端节点，conntrack 识别到数据包并将源地址重写回 2.2.2.2:80。"
								}
							]
						}
					]
				},
				{
					"ID": "20221122154416-ysfwlf4",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122154416-ysfwlf4"
					},
					"Children": [
						{
							"ID": "20221122154416-sfpdibb",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122154416-sfpdibb"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "客户端 Pod 收到响应数据包。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221122154416-hvl65fl",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122154416-hvl65fl"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "GIF 动图演示："
				}
			]
		},
		{
			"ID": "20221122154416-h4m496j",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122154416-h4m496j"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "图片"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/640-20221122154416-9f17o4g"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20221122154416-dlwnqct",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20221122154416-dlwnqct"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "7 Iptables 规则处理流程"
				}
			]
		},
		{
			"ID": "20221122154416-fkx7c83",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122154416-fkx7c83"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "netfilter"
				},
				{
					"Type": "NodeText",
					"Data": " 是 Linux 内核中一个对数据包进行控制、修改和过滤的框架。"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "iptables"
				},
				{
					"Type": "NodeText",
					"Data": " 是配置 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "netfilter"
				},
				{
					"Type": "NodeText",
					"Data": " 过滤功能的用户空间工具。"
				}
			]
		},
		{
			"ID": "20221122154416-7yx3jpj",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20221122154416-7yx3jpj"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "7.1 Chains 链"
				}
			]
		},
		{
			"ID": "20221122154416-5igri6f",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122154416-5igri6f"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "iptables 中有 5 条链，每条链负责一个特定的任务："
				}
			]
		},
		{
			"ID": "20221122154416-5znvftg",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20221122154416-5znvftg"
			},
			"Children": [
				{
					"ID": "20221122154416-ezrffub",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122154416-ezrffub"
					},
					"Children": [
						{
							"ID": "20221122154416-0jjydhk",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122154416-0jjydhk"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "PREROUTING"
								},
								{
									"Type": "NodeText",
									"Data": " ：在数据包做路由选择前应用此链路中的规则，所有的数据包进来时都先由这条链处理。"
								}
							]
						}
					]
				},
				{
					"ID": "20221122154416-i3fbe9i",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122154416-i3fbe9i"
					},
					"Children": [
						{
							"ID": "20221122154416-cwytjx8",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122154416-cwytjx8"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "INPUT"
								},
								{
									"Type": "NodeText",
									"Data": " ：经过路由表判断后，目的为本机的数据包应用这条链上的策略。"
								}
							]
						}
					]
				},
				{
					"ID": "20221122154416-6t25zbj",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122154416-6t25zbj"
					},
					"Children": [
						{
							"ID": "20221122154416-gjw8krw",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122154416-gjw8krw"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "FORWARD"
								},
								{
									"Type": "NodeText",
									"Data": " ：经过路由表判断后，目标地址不为本机，转发数据包时应用这条链上的策略。"
								}
							]
						}
					]
				},
				{
					"ID": "20221122154416-z7jfnxk",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122154416-z7jfnxk"
					},
					"Children": [
						{
							"ID": "20221122154416-xrvwuef",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122154416-xrvwuef"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "OUTPUT"
								},
								{
									"Type": "NodeText",
									"Data": " ：由本机产生的往外发送的数据包应用这条链中的策略。"
								}
							]
						}
					]
				},
				{
					"ID": "20221122154416-6eixny3",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122154416-6eixny3"
					},
					"Children": [
						{
							"ID": "20221122154416-aaw3eaq",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122154416-aaw3eaq"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "POSTROUTING"
								},
								{
									"Type": "NodeText",
									"Data": " ：数据包发送到网卡之前应用这条链中的策略，所有的数据包出来的时候都由这条链处理。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221122154416-zwjqwyy",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122154416-zwjqwyy"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "图片"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/640-20221122154416-b33v52p"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20221122154416-yefln3e",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20221122154416-yefln3e"
			},
			"Children": [
				{
					"ID": "20221122154416-zk85qj3",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122154416-zk85qj3"
					},
					"Children": [
						{
							"ID": "20221122154416-luwy501",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122154416-luwy501"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "进入的数据包目的是本机："
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "PREROUTING -\u0026gt; INPUT"
								},
								{
									"Type": "NodeText",
									"Data": "。"
								}
							]
						}
					]
				},
				{
					"ID": "20221122154416-nfq0mzg",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122154416-nfq0mzg"
					},
					"Children": [
						{
							"ID": "20221122154416-c6q1j6v",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122154416-c6q1j6v"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "进入的数据包目的是其他主机："
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "PREROUTING -\u0026gt; FORWARD -\u0026gt; POSTROUTING"
								},
								{
									"Type": "NodeText",
									"Data": "。"
								}
							]
						}
					]
				},
				{
					"ID": "20221122154416-t8v9qbx",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122154416-t8v9qbx"
					},
					"Children": [
						{
							"ID": "20221122154416-soacegr",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122154416-soacegr"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "本机产生的数据包："
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "OUTPUT -\u0026gt; POSTROUTING"
								},
								{
									"Type": "NodeText",
									"Data": "。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221122154416-43xkee8",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122154416-43xkee8"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "FORWARD"
				},
				{
					"Type": "NodeText",
					"Data": " 链仅当 Linux 服务器中启用 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "ip_forward"
				},
				{
					"Type": "NodeText",
					"Data": " 时才有效，这就是以下命令在设置和调试 Kubernetes 集群时很重要的原因。"
				}
			]
		},
		{
			"ID": "20221122154416-p13mgiy",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221122154416-p13mgiy"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "node-1# sysctl -w net.ipv4.ip_forward=1\nnet.ipv4.ip_forward = 1\nnode-1# cat /proc/sys/net/ipv4/ip_forward\n1\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221122154416-bkjxwww",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122154416-bkjxwww"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "上述命令的修改不是永久的，要在 Linux 系统上永久启用 IP 转发，请编辑 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "em",
					"TextMarkTextContent": "/etc/sysctl.conf"
				},
				{
					"Type": "NodeText",
					"Data": " 并添加以下内容："
				}
			]
		},
		{
			"ID": "20221122154416-p5cqxmy",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221122154416-p5cqxmy"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "net.ipv4.ip_forward = 1\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221122154416-79d8oac",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20221122154416-79d8oac"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "7.2 Tables 表"
				}
			]
		},
		{
			"ID": "20221122154416-1o7j56g",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122154416-1o7j56g"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "iptables 中有 5 种表："
				}
			]
		},
		{
			"ID": "20221122154416-zvi8wxo",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20221122154416-zvi8wxo"
			},
			"Children": [
				{
					"ID": "20221122154416-hd7ijxu",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122154416-hd7ijxu"
					},
					"Children": [
						{
							"ID": "20221122154416-u5ystg0",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122154416-u5ystg0"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "Filter"
								},
								{
									"Type": "NodeText",
									"Data": " ：这是默认的表，用于过滤数据包。"
								}
							]
						}
					]
				},
				{
					"ID": "20221122154416-fu9nix5",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122154416-fu9nix5"
					},
					"Children": [
						{
							"ID": "20221122154416-38bcj2z",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122154416-38bcj2z"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "NAT"
								},
								{
									"Type": "NodeText",
									"Data": " ：网络地址转换（端口映射、地址映射等）。"
								}
							]
						}
					]
				},
				{
					"ID": "20221122154416-ui7dl4k",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122154416-ui7dl4k"
					},
					"Children": [
						{
							"ID": "20221122154416-4hkv369",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122154416-4hkv369"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "Mangle"
								},
								{
									"Type": "NodeText",
									"Data": " ：主要功能是根据规则修改数据包的一些标志位，以便其他规则或程序可以利用这些标志对数据包进行过滤或策略路由。"
								}
							]
						}
					]
				},
				{
					"ID": "20221122154416-00ho6lh",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122154416-00ho6lh"
					},
					"Children": [
						{
							"ID": "20221122154416-z5bqmni",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122154416-z5bqmni"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "Raw"
								},
								{
									"Type": "NodeText",
									"Data": " ：设置 RAW 表时一般是为了不再让 iptables 做数据包的链接跟踪处理，以提高性能。"
								}
							]
						}
					]
				},
				{
					"ID": "20221122154416-6eyrhuh",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122154416-6eyrhuh"
					},
					"Children": [
						{
							"ID": "20221122154416-5mh85f1",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122154416-5mh85f1"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "Security"
								},
								{
									"Type": "NodeText",
									"Data": " ：用于在数据包上设置内部 SELinux 安全上下文标记。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221122154416-5p2d5dp",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20221122154416-5p2d5dp"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "7.3 Kubernetes 中的 iptables 配置"
				}
			]
		},
		{
			"ID": "20221122154416-jfzt03d",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122154416-jfzt03d"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "让我们在 Kubernetes 中部署一个副本数为 2 的 Nginx 应用程序并查看 iptables 规则。Service 类型： "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "NodePort"
				},
				{
					"Type": "NodeText",
					"Data": " 。"
				}
			]
		},
		{
			"ID": "20221122154416-xv80r8y",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221122154416-xv80r8y"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "master # kubectl get svc webapp\nNAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE\nwebapp NodePort 10.103.46.104 \u003cnone\u003e 80:31380/TCP 3d13hmaster # kubectl get ep webapp \nNAME ENDPOINTS AGE\nwebapp 10.244.120.102:80,10.244.120.103:80 3d13h\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221122154416-2xr4qem",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122154416-2xr4qem"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "ClusterIP 在主机的接口上并不存在，它的虚拟 IP 存在于 iptables 规则中，在 CoreDNS 中添加了下面这个 DNS 条目。"
				}
			]
		},
		{
			"ID": "20221122154416-f38c7ab",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221122154416-f38c7ab"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "master # kubectl exec -i -t dnsutils -- nslookup webapp.default\nServer:  10.96.0.10\nAddress: 10.96.0.10#53\nName: webapp.default.svc.cluster.local\nAddress: 10.103.46.104\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221122154416-wrvjahg",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122154416-wrvjahg"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Kubernetes 在 iptables 中创建了 KUBE-SERVICES 链以便对数据包进行过滤和 NAT。它将会把所有 PREROUTING 和 OUTPUT 链的流量重定向到 KUBE-SERVICES 链上。"
				}
			]
		},
		{
			"ID": "20221122154416-xbqgb7j",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221122154416-xbqgb7j"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "$ sudo iptables -t nat -L PREROUTING | column -t\nChain            PREROUTING  (policy  ACCEPT)target           prot        opt      source    destination                                                      cali-PREROUTING  all         --       anywhere  anywhere     /*        cali:6gwbT8clXdHdC1b1  */                 KUBE-SERVICES    all         --       anywhere  anywhere     /*        kubernetes             service   portals  */DOCKER           all         --       anywhere  anywhere     ADDRTYPE  match                  dst-type  LOCAL\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221122154416-2h0vjvw",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122154416-2h0vjvw"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在将 KUBE-SERVICES 链用于包过滤和 NAT 后，Kubernetes 可以检查到 Service 的流量并相应地应用 SNAT/DNAT。在 KUBE-SERVICES 链的末端，它将插入另一个自定义链 KUBE-NODEPORTS 来处理 Service 类型是 NodePort 的流量。"
				}
			]
		},
		{
			"ID": "20221122154416-gceb1cn",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122154416-gceb1cn"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "如果流量是针对 ClusterIP 的，"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "KUBE-SVC-2IRACUALRELARSND"
				},
				{
					"Type": "NodeText",
					"Data": " 链会处理流量；否则，下一条链将处理流量，即  "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "KUBE-NODEPORTS"
				},
				{
					"Type": "NodeText",
					"Data": " 。"
				}
			]
		},
		{
			"ID": "20221122154416-lwjg8a2",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221122154416-lwjg8a2"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "$ sudo iptables -t nat -L KUBE-SERVICES | column -t\nChain                      KUBE-SERVICES  (2   references)                                                                                                                                                                             \ntarget                     prot           opt  source          destination                                                                                                                                                             \nKUBE-MARK-MASQ             tcp            --   !10.244.0.0/16  10.103.46.104   /*  default/webapp                   cluster  IP          */     tcp   dpt:www                                                                          \nKUBE-SVC-2IRACUALRELARSND  tcp            --   anywhere        10.103.46.104   /*  default/webapp                   cluster  IP          */     tcp   dpt:www                                                                                                                                             \nKUBE-NODEPORTS             all            --   anywhere        anywhere        /*  kubernetes                       service  nodeports;  NOTE:  this  must        be  the  last  rule  in  this  chain  */  ADDRTYPE  match  dst-type  LOCAL\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221122154416-4lc9ba1",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122154416-4lc9ba1"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "让我们查看一下 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "KUBE-NODEPORTS"
				},
				{
					"Type": "NodeText",
					"Data": " 链。"
				}
			]
		},
		{
			"ID": "20221122154416-sdt359q",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221122154416-sdt359q"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "$ sudo iptables -t nat -L KUBE-NODEPORTS | column -t\nChain                      KUBE-NODEPORTS  (1   references)     target                     prot            opt  source       destination                               KUBE-MARK-MASQ             tcp             --   anywhere     anywhere     /*  default/webapp  */  tcp  dpt:31380KUBE-SVC-2IRACUALRELARSND  tcp             --   anywhere     anywhere     /*  default/webapp  */  tcp  dpt:31380\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221122154416-p5jtq5j",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122154416-p5jtq5j"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "可以看到 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "KUBE-NODEPORTS"
				},
				{
					"Type": "NodeText",
					"Data": " 链最终也会将流量送到 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "KUBE-SVC-2IRACUALRELARSND"
				},
				{
					"Type": "NodeText",
					"Data": " 链。"
				}
			]
		},
		{
			"ID": "20221122154416-55vqb1e",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221122154416-55vqb1e"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "# statistic  mode  random -\u003e Random load-balancing between endpoints.\n# Service 的流量随机分发给两个 Pod\n$ sudo iptables -t nat -L KUBE-SVC-2IRACUALRELARSND | column -t\nChain                      KUBE-SVC-2IRACUALRELARSND  (2   references)                                                                             \ntarget                     prot                       opt  source       destination# Pod1\nKUBE-SEP-AO6KYGU752IZFEZ4  all                        --   anywhere     anywhere     /*  default/webapp  */  statistic  mode  random  probability  0.50000000000\n# Pod2\nKUBE-SEP-PJFBSHHDX4VZAOXM  all                        --   anywhere     anywhere     /*  default/webapp  */# 流量分发到 Pod1\n$ sudo iptables -t nat -L KUBE-SEP-AO6KYGU752IZFEZ4 | column -t\nChain           KUBE-SEP-AO6KYGU752IZFEZ4  (1   references)                                               \ntarget          prot                       opt  source          destinationKUBE-MARK-MASQ  all                        --   10.244.120.102  anywhere     /*  default/webapp  */DNAT            tcp                        --   anywhere        anywhere     /*  default/webapp  */  tcp  to:10.244.120.102:80# 流量分发到 Pod2\n$ sudo iptables -t nat -L KUBE-SEP-PJFBSHHDX4VZAOXM | column -t\nChain           KUBE-SEP-PJFBSHHDX4VZAOXM  (1   references)                                               \ntarget          prot                       opt  source          destination                               \nKUBE-MARK-MASQ  all                        --   10.244.120.103  anywhere     /*  default/webapp  */       DNAT            tcp                        --   anywhere        anywhere     /*  default/webapp  */  tcp  to:10.244.120.103:80# 源地址转换\n$ sudo iptables -t nat -L KUBE-MARK-MASQ | column -t\nChain   KUBE-MARK-MASQ  (24  references)                         \ntarget  prot            opt  source       destination            MARK    all             --   anywhere     anywhere     MARK  or  0x4000\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221122154416-4cu9qc7",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122154416-4cu9qc7"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "总结一下：  "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "ClusterIP"
				},
				{
					"Type": "NodeText",
					"Data": " : KUBE-SERVICES → KUBE-SVC-XXX → KUBE-SEP-XXX。  "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "NodePort"
				},
				{
					"Type": "NodeText",
					"Data": " : KUBE-SERVICES → KUBE-NODEPORTS → KUBE-SVC-XXX → KUBE-SEP-XXX。"
				}
			]
		},
		{
			"ID": "20221122154416-7siaqx8",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122154416-7siaqx8"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "注意：NodePort 类型的 Service 将分配一个 ClusterIP 来处理内部和外部流量。"
				}
			]
		},
		{
			"ID": "20221122154416-ku0qkj0",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122154416-ku0qkj0"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "上述规则的示意图如下："
				}
			]
		},
		{
			"ID": "20221122154416-5x3fsvb",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122154416-5x3fsvb"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "图片"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/640-20221122154416-urw25te"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "ExtrenalTrafficPolicy: Local"
				},
				{
					"Type": "NodeText",
					"Data": " 如前所述，使用 externalTrafficPolicy: Local 将保留源 IP 并丢弃没有本地端点的数据包。让我们来看看没有本地端点的节点中的 iptables 规则。"
				}
			]
		},
		{
			"ID": "20221122154416-8ju9qw9",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221122154416-8ju9qw9"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "master # kubectl get nodes\nNAME           STATUS   ROLES    AGE    VERSION\nminikube       Ready    master   6d1h   v1.19.2\nminikube-m02   Ready    \u003cnone\u003e   85m    v1.19.2\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221122154416-75ezkhf",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122154416-75ezkhf"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "这次只部署 1 个 Nginx Pod，Service 设置为 externalTrafficPolicy: Local。"
				}
			]
		},
		{
			"ID": "20221122154416-2cshgr8",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221122154416-2cshgr8"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "master # kubectl get pods nginx-deployment-7759cc5c66-p45tz -o wide\nNAME                                READY   STATUS    RESTARTS   AGE   IP               NODE       NOMINATED NODE   READINESS GATES\nnginx-deployment-7759cc5c66-p45tz   1/1     Running   0          29m   10.244.120.111   minikube   \u003cnone\u003e           \u003cnone\u003e\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221122154416-r0olczh",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122154416-r0olczh"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "检查 externalTrafficPolicy。"
				}
			]
		},
		{
			"ID": "20221122154416-o003yks",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221122154416-o003yks"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "master # kubectl get svc webapp -o wide -o jsonpath={.spec.externalTrafficPolicy}\nLocal\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221122154416-njn5k8s",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122154416-njn5k8s"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "获取 Service。"
				}
			]
		},
		{
			"ID": "20221122154416-0ng58oq",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221122154416-0ng58oq"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "master # kubectl get svc webapp -o wide\nNAME     TYPE       CLUSTER-IP      EXTERNAL-IP   PORT(S)        AGE   SELECTOR\nwebapp   NodePort   10.111.243.62   \u003cnone\u003e        80:30080/TCP   29m   app=webserver\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221122154416-gxqfhhq",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122154416-gxqfhhq"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "让我们检查 minikube-m02 节点中的 iptables 规则， "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "应该有一个 DROP 规则来丢弃数据包，因为该节点上没有 Nginx Pod"
				},
				{
					"Type": "NodeText",
					"Data": " 。"
				}
			]
		},
		{
			"ID": "20221122154416-ct97j0t",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221122154416-ct97j0t"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "$ sudo iptables -t nat -L KUBE-NODEPORTSChain KUBE-NODEPORTS (1 references)target prot opt source destinationKUBE-MARK-MASQ tcp — 127.0.0.0/8 anywhere /* default/webapp */ tcp dpt:30080KUBE-XLB-2IRACUALRELARSND tcp — anywhere anywhere /* default/webapp */ tcp dpt:30080\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221122154416-elk76zu",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122154416-elk76zu"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "检查 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "KUBE-XLB-2IRACUALRELARSND"
				},
				{
					"Type": "NodeText",
					"Data": " 链。"
				}
			]
		},
		{
			"ID": "20221122154416-lccjms0",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221122154416-lccjms0"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "$ sudo iptables -t nat -L KUBE-XLB-2IRACUALRELARSND\nChain KUBE-XLB-2IRACUALRELARSND (1 references)target prot opt source destinationKUBE-SVC-2IRACUALRELARSND all — 10.244.0.0/16 anywhere /* Redirect pods trying to reach external loadbalancer VIP to clusterIP */KUBE-MARK-MASQ all — anywhere anywhere /* masquerade LOCAL traffic for default/webapp LB IP */ ADDRTYPE match src-type LOCALKUBE-SVC-2IRACUALRELARSND all — anywhere anywhere /* route LOCAL traffic for default/webapp LB IP to service chain */ ADDRTYPE match src-type LOCAL# 丢弃没有本地端点的数据包\nKUBE-MARK-DROP all — anywhere anywhere /* default/webapp has no local endpoints */\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221122154416-6536air",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122154416-6536air"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "查看 minikube 节点的 iptables，该节点上有 Nginx Pod，因此不会丢弃数据包。"
				}
			]
		},
		{
			"ID": "20221122154416-m5dm3qw",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221122154416-m5dm3qw"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "# NodePort 规则\n$ sudo iptables -t nat -L KUBE-NODEPORTSChain KUBE-NODEPORTS (1 references)target prot opt source destinationKUBE-MARK-MASQ tcp — 127.0.0.0/8 anywhere /* default/webapp */ tcp dpt:30080KUBE-XLB-2IRACUALRELARSND tcp — anywhere anywhere /* default/webapp */ tcp dpt:30080# 不会丢弃数据包，最后没有 DROP 规则\n$ sudo iptables -t nat -L KUBE-XLB-2IRACUALRELARSNDChain KUBE-XLB-2IRACUALRELARSND (1 references)target prot opt source destinationKUBE-SVC-2IRACUALRELARSND all — 10.244.0.0/16 anywhere /* Redirect pods trying to reach external loadbalancer VIP to clusterIP */KUBE-MARK-MASQ all — anywhere anywhere /* masquerade LOCAL traffic for default/webapp LB IP */ ADDRTYPE match src-type LOCALKUBE-SVC-2IRACUALRELARSND all — anywhere anywhere /* route LOCAL traffic for default/webapp LB IP to service chain */ ADDRTYPE match src-type LOCALKUBE-SEP-5T4S2ILYSXWY3R2J all — anywhere anywhere /* Balancing rule 0 for default/webapp */# Service 规则，将流量分发到 Pod\n$ sudo iptables -t nat -L KUBE-SVC-2IRACUALRELARSNDChain KUBE-SVC-2IRACUALRELARSND (3 references)target prot opt source destinationKUBE-SEP-5T4S2ILYSXWY3R2J all — anywhere anywhere /* default/webapp */\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221122154416-8pi3uf9",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20221122154416-8pi3uf9"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "8 Headless Service"
				}
			]
		},
		{
			"ID": "20221122154416-olhd1wc",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122154416-olhd1wc"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "有的应用并不需要负载均衡和服务 IP。在这种情况下就可以使用 Headless Service，只要设置 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": ".spec.clusterIP"
				},
				{
					"Type": "NodeText",
					"Data": " 为 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "None"
				},
				{
					"Type": "NodeText",
					"Data": " 即可。"
				}
			]
		},
		{
			"ID": "20221122154416-bagglqx",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122154416-bagglqx"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "可以借助这种服务类型和其他服务发现机制协作，无需和 Kubernetes 绑定。Headless Service 并不会分配 Cluster IP，kube-proxy 不会处理它们， 而且平台也不会为它们进行负载均衡和路由。另外，DNS 的配置要根据 selector 来确定。"
				}
			]
		},
		{
			"ID": "20221122154416-j4zsauf",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122154416-j4zsauf"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "带选择器（selector）的服务"
				}
			]
		},
		{
			"ID": "20221122154416-eqwf5vg",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122154416-eqwf5vg"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "定义了 selector 的 Headless Service，Endpoint 控制器会创建 Endpoints 记录， 并修改 DNS 记录，通过域名可以直接访问 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "Service"
				},
				{
					"Type": "NodeText",
					"Data": " 的后端 Pod 。"
				}
			]
		},
		{
			"ID": "20221122154416-c4s1f3n",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221122154416-c4s1f3n"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "master # kubectl get svc webapp-hs\nNAME        TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)   AGE\nwebapp-hs   ClusterIP   None         \u003cnone\u003e        80/TCP    24smaster # kubectl get ep webapp-hs\nNAME        ENDPOINTS                             AGE\nwebapp-hs   10.244.120.109:80,10.244.120.110:80   31s\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221122154416-69anwkv",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122154416-69anwkv"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "无选择器的服务"
				}
			]
		},
		{
			"ID": "20221122154416-rna46l0",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122154416-rna46l0"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "没有定义 selector 的 Headless Service，也就没有 Endpoint 记录。然而 DNS 系统会尝试配置："
				}
			]
		},
		{
			"ID": "20221122154416-mutjflz",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20221122154416-mutjflz"
			},
			"Children": [
				{
					"ID": "20221122154416-ixdbi8q",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122154416-ixdbi8q"
					},
					"Children": [
						{
							"ID": "20221122154416-s8uw1km",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122154416-s8uw1km"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "ExternalName"
								},
								{
									"Type": "NodeText",
									"Data": " 类型的服务，会产生 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "CNAME"
								},
								{
									"Type": "NodeText",
									"Data": " 记录。"
								}
							]
						}
					]
				},
				{
					"ID": "20221122154416-t3yz590",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122154416-t3yz590"
					},
					"Children": [
						{
							"ID": "20221122154416-83sbzs4",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122154416-83sbzs4"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "所有其他类型的服务，查找与 Service 名称相同的 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Endpoints"
								},
								{
									"Type": "NodeText",
									"Data": " 的记录。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221122154416-hdbhcfx",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20221122154416-hdbhcfx"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "9 Network Policy"
				}
			]
		},
		{
			"ID": "20221122154416-emkt4os",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122154416-emkt4os"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "到目前为止，你可能已经了解了 Kubernetes 中的网络策略是如何实现的。是的，又是  "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "iptables"
				},
				{
					"Type": "NodeText",
					"Data": " ；CNI 负责实施网络策略，而不是  "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "kube-proxy"
				},
				{
					"Type": "NodeText",
					"Data": " 。"
				}
			]
		},
		{
			"ID": "20221122154416-jacpcg8",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122154416-jacpcg8"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "让我们创建 3 个服务：FrontEnd, Backend 和 DB。默认情况下，Pod 是非隔离的；他们接受来自任何来源的流量。"
				}
			]
		},
		{
			"ID": "20221122154416-bxz40bk",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122154416-bxz40bk"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "图片"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/640-20221122154416-bc84o99"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20221122154416-w2lliem",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122154416-w2lliem"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "但是，应该有一个网络策略将 DB pod 与 FrontEnd pod 隔离，以避免它们之间的任何流量。"
				}
			]
		},
		{
			"ID": "20221122154416-s5o1nrh",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122154416-s5o1nrh"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "图片"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/640-20221122154416-3z6uliz"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20221122154416-6tsoas7",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122154416-6tsoas7"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "我们可以通过设置 NetworkPolicy 来实现网络策略，如果入访的 Pod 带有 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "networking/allow-db-access: \u0026quot;true\u0026quot;"
				},
				{
					"Type": "NodeText",
					"Data": " 标签，则允许访问 DB。"
				}
			]
		},
		{
			"ID": "20221122154416-v8cqi7w",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221122154416-v8cqi7w"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "# 网络策略\n---\napiVersion: networking.k8s.io/v1\nkind: NetworkPolicy\nmetadata:\n  name: allow-db-access\nspec:\n  podSelector:  # 匹配应用策略的 Pod\n    matchLabels:\n      app: \"db\"\n  policyTypes:\n  - Ingress\n  ingress:\n  - from:\n    - podSelector: # 匹配入访 Pod\n        matchLabels:\n          networking/allow-db-access: \"true\"      # Backend 服务\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: backend\n  labels:\n    app: backend\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: backend\n  template:\n    metadata:\n      labels:\n        app: backend\n        networking/allow-db-access: \"true\"  # 网络策略会允许有该标签的 Pod 访问 DB 服务\n    spec:\n      volumes:\n      - name: workdir\n        emptyDir: {}\n      containers:\n      - name: nginx\n        image: nginx:1.14.2\n        imagePullPolicy: IfNotPresent\n        ports:\n        - containerPort: 80\n        volumeMounts:\n        - name: workdir\n          mountPath: /usr/share/nginx/html\n      initContainers:\n      - name: install\n        image: busybox\n        imagePullPolicy: IfNotPresent\n        command: ['sh', '-c', \"echo $HOSTNAME \u003e /work-dir/index.html\"]\n        volumeMounts:\n        - name: workdir\n          mountPath: \"/work-dir\"\n...\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221122154416-8ohtd9k",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122154416-8ohtd9k"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "应用上面的 NetworkPolicy，可以看到 FrontEnd 可以正常访问 Backend，但是已经无法访问 DB 了。"
				}
			]
		},
		{
			"ID": "20221122154416-70iijbh",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221122154416-70iijbh"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "master # kubectl exec -it frontend-8b474f47-zdqdv -- /bin/sh\n# curl backend\nbackend-867fd6dff-mjf92# curl db\ncurl: (7) Failed to connect to db port 80: Connection timed out\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221122154416-tm5jruj",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122154416-tm5jruj"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "但是 Backend 依然可以访问 DB。"
				}
			]
		},
		{
			"ID": "20221122154416-op8kibf",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221122154416-op8kibf"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "master # kubectl exec -it backend-867fd6dff-mjf92 -- /bin/sh\n# curl db\ndb-8d66ff5f7-bp6kf\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221122154416-gtll9ts",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122154416-gtll9ts"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "如果使用的 CNI 是 Calico，Calico 会将 Kubernetes 的网络策略转换为 Calico 的格式。"
				}
			]
		},
		{
			"ID": "20221122154416-7ld2e1s",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221122154416-7ld2e1s"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "master # calicoctl get networkPolicy --output yaml\napiVersion: projectcalico.org/v3\nitems:\n- apiVersion: projectcalico.org/v3\n  kind: NetworkPolicy\n  metadata:\n    creationTimestamp: \"2020-11-05T05:26:27Z\"\n    name: knp.default.allow-db-access\n    namespace: default\n    resourceVersion: /53872\n    uid: 1b3eb093-b1a8-4429-a77d-a9a054a6ae90\n  spec:\n    ingress:\n    - action: Allow\n      destination: {}\n      source:\n        selector: projectcalico.org/orchestrator == 'k8s' \u0026\u0026 networking/allow-db-access\n          == 'true'\n    order: 1000\n    selector: projectcalico.org/orchestrator == 'k8s' \u0026\u0026 app == 'db'\n    types:\n    - Ingress\nkind: NetworkPolicyList\nmetadata:\n  resourceVersion: 56821/56821\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221122154416-xax37eh",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122154416-xax37eh"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "使用 calicoctl 获取工作负载端点的详细信息。"
				}
			]
		},
		{
			"ID": "20221122154416-3mjqsjv",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221122154416-3mjqsjv"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "master # calicoctl get workloadEndpoint\nWORKLOAD                         NODE       NETWORKS        INTERFACE         \nbackend-867fd6dff-mjf92          minikube   10.88.0.27/32   cali2b1490aa46a   \ndb-8d66ff5f7-bp6kf               minikube   10.88.0.26/32   cali95aa86cbb2a   \nfrontend-8b474f47-zdqdv          minikube   10.88.0.24/32   cali505cfbeac50\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221122154416-i2akw59",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122154416-i2akw59"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "cali95aa86cbb2a"
				},
				{
					"Type": "NodeText",
					"Data": " 是 DB pod 正在使用的 veth 对的主机端。我们来获取这个接口相关的 iptables 规则。从 iptables 规则中，可以看到只有数据包来着 Backend Pod 时才允许进入 DB Pod。"
				}
			]
		},
		{
			"ID": "20221122154416-u7sepbk",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221122154416-u7sepbk"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "# Calico iptables 规则链命名\n# cali-: 前缀，calico 的规则链 \n# tw: 简写，to wordkoad endpoint\n# wl: 简写，workload endpoint\n# fw: 简写，from workload endpoint \n# from-XXX: XXX发出的报文 \n# to-XXX: 发送到XXX的报文 \n# pi: 简写，policy inbound\n# po: 简写，policy outbound\n# pri: 简写，profile inbound\n# pro: 简写，profile outbound $ sudo iptables-save | grep cali95aa86cbb2a\n...\n# 先检查 fw: from workload 的规则，再检查 tw: to workload 的规则，下面以 tw 的规则进行说明\n# 第一步：如果 conntrack 表中能够检索到该连接的状态，可以直接根据状态放行或者丢弃\n-A cali-tw-cali95aa86cbb2a -m comment --comment \"cali:eCrqwxNk3cKw9Eq6\" -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT-A cali-tw-cali95aa86cbb2a -m comment --comment \"cali:_krp5nzavhAu5avJ\" -m conntrack --ctstate INVALID -j DROP# 第二步：先对数据包进行标记，--set-xmark value[/mask]，value 表示要匹配的 mark 的值，mask 代表掩码，如果要完全匹配可以省略掉掩码\n# 如果经过 Network Policy 后 mark 值没有修改，第七步会丢弃该数据包\n-A cali-tw-cali95aa86cbb2a -m comment --comment \"cali:leBL64hpAXM9y4nk\" -m comment --comment \"Start of policies\" -j MARK --set-xmark 0x0/0x20000# 第三步（重点）：进入 cali-pi-_tTE-E7yY40ogArNVgKt 链进行 Network Policy 判断\n-A cali-tw-cali95aa86cbb2a -m comment --comment \"cali:pm-LK-c1ra31tRwz\" -m mark --mark 0x0/0x20000 -j cali-pi-_tTE-E7yY40ogArNVgKt# 第六步：如果 Network Policy 检查通过（检查是否匹配 mark 0x10000/0x10000）, 匹配说明通过，直接 RETURN，不再检查其他的规则\n-A cali-tw-cali95aa86cbb2a -m comment --comment \"cali:q_zG8dAujKUIBe0Q\" -m comment --comment \"Return if policy accepted\" -m mark --mark 0x10000/0x10000 -j RETURN# 第七步：如果 mark 没有修改，与原先一致，视为没有任何一个 Network Policy允许该包通过，丢弃数据包\n-A cali-tw-cali95aa86cbb2a -m comment --comment \"cali:FUDVBYh1Yr6tVRgq\" -m comment --comment \"Drop if no policies passed packet\" -m mark --mark 0x0/0x20000 -j DROP\n...# Network Policy 规则判断\n$ sudo iptables-save -t filter | grep cali-pi-_tTE-E7yY40ogArNVgKt\n...\n# 第四步（重点）：如果源 IP 匹配 ipsetali40s:LrVD8vMIGQDyv8Y7sPFB1Ge，将数据包添加 mark 0x10000\n-A cali-pi-_tTE-E7yY40ogArNVgKt -m comment --comment \"cali:M4Und37HGrw6jUk8\" -m set --match-set cali40s:LrVD8vMIGQDyv8Y7sPFB1Ge src -j MARK --set-xmark 0x10000/0x10000# 第五步：检查是否匹配 mark，如果匹配就 RETURN 放行\n-A cali-pi-_tTE-E7yY40ogArNVgKt -m comment --comment \"cali:sEnlfZagUFRSPRoe\" -m mark --mark 0x10000/0x10000 -j RETURN\n...\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221122154416-et5nbl7",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122154416-et5nbl7"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Calico 使用 ipset 进行流量管理，ipset 是 iptables 的扩展，有以下几个优点："
				}
			]
		},
		{
			"ID": "20221122154416-cxji7xx",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20221122154416-cxji7xx"
			},
			"Children": [
				{
					"ID": "20221122154416-e7j33hl",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122154416-e7j33hl"
					},
					"Children": [
						{
							"ID": "20221122154416-bdcktjh",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122154416-bdcktjh"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "允许在一条规则中根据多个 IP 地址和端口号进行匹配。"
								}
							]
						}
					]
				},
				{
					"ID": "20221122154416-zmixg35",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122154416-zmixg35"
					},
					"Children": [
						{
							"ID": "20221122154416-744iujf",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122154416-744iujf"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "允许针对 IP 地址或者端口号动态更新 iptables 规则。"
								}
							]
						}
					]
				},
				{
					"ID": "20221122154416-uwixo77",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122154416-uwixo77"
					},
					"Children": [
						{
							"ID": "20221122154416-tzwznoz",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122154416-tzwznoz"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "ipset 使用 set 集合作为存储结构，set 在查询时十分高效。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221122154416-2hsv93w",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122154416-2hsv93w"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "通过检查 ipset，很明显看到只允许从 Backend Pod 的 IP 10.88.0.27 访问 DB Pod。"
				}
			]
		},
		{
			"ID": "20221122154416-j59b464",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221122154416-j59b464"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "[root@minikube /]# ipset list\nName: cali40s:LrVD8vMIGQDyv8Y7sPFB1Ge\nType: hash:net\nRevision: 6\nHeader: family inet hashsize 1024 maxelem 1048576\nSize in memory: 408\nReferences: 3\nNumber of entries: 1\nMembers:\n10.88.0.27\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221122154416-7a21ovy",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20221122154416-7a21ovy"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "参考资料"
				}
			]
		},
		{
			"ID": "20221122154416-88oqwzr",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20221122154416-88oqwzr"
			},
			"Children": [
				{
					"ID": "20221122154416-5skoaxd",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122154416-5skoaxd"
					},
					"Children": [
						{
							"ID": "20221122154416-9yy2jwz",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122154416-9yy2jwz"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "[1] 原文: https://dramasamy.medium.com/life-of-a-packet-in-kubernetes-part-3-dd881476da0f"
								}
							]
						}
					]
				},
				{
					"ID": "20221122154416-uh8sbna",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122154416-uh8sbna"
					},
					"Children": [
						{
							"ID": "20221122154416-hl58ykt",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122154416-hl58ykt"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "[2] iptables四表五链及规则组成: https://blog.csdn.net/wfs1994/article/details/89047230)"
								}
							]
						}
					]
				},
				{
					"ID": "20221122154416-l4yrucb",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122154416-l4yrucb"
					},
					"Children": [
						{
							"ID": "20221122154416-uwbm6ox",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122154416-uwbm6ox"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "[3] 使用 iptables、ipset 的全局智能代理: https://blog.chih.me/global-proxy-within-ipset-and-iptables.html"
								}
							]
						}
					]
				},
				{
					"ID": "20221122154416-p8mjzgd",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122154416-p8mjzgd"
					},
					"Children": [
						{
							"ID": "20221122154416-dzcnc9a",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122154416-dzcnc9a"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "[4] networkpolicy的实践--felix: https://segmentfault.com/a/1190000039030174"
								}
							]
						}
					]
				},
				{
					"ID": "20221122154416-8ifmthg",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122154416-8ifmthg"
					},
					"Children": [
						{
							"ID": "20221122154416-fv8pwdu",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122154416-fv8pwdu"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "[5] calico iptables详解: https://blog.csdn.net/ptmozhu/article/details/73301971"
								}
							]
						}
					]
				},
				{
					"ID": "20221122154416-5n0pnhs",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122154416-5n0pnhs"
					},
					"Children": [
						{
							"ID": "20221122154416-ut1l25q",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122154416-ut1l25q"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "[6] iptables mark: https://www.kancloud.cn/pshizhsysu/linux/2084993"
								}
							]
						}
					]
				}
			]
		}
	]
}