{
	"ID": "20221122154306-9qd0n6m",
	"Spec": "1",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20221122154306-9qd0n6m",
		"scroll": "{\u0026quot;startId\u0026quot;:\u0026quot;20221122154306-3rsj7mp\u0026quot;,\u0026quot;endId\u0026quot;:\u0026quot;20221122154306-g0ja0zb\u0026quot;,\u0026quot;scrollTop\u0026quot;:10599}",
		"title": "Kubenetes高可用集群搭建",
		"updated": "20221122154306"
	},
	"Children": [
		{
			"ID": "20221122154306-3rsj7mp",
			"Type": "NodeThematicBreak",
			"Properties": {
				"id": "20221122154306-3rsj7mp"
			}
		},
		{
			"ID": "20221122154306-sxrkxom",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20221122154306-sxrkxom"
			},
			"Children": [
				{
					"ID": "20221122154306-7lw8bxo",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122154306-7lw8bxo"
					},
					"Children": [
						{
							"ID": "20221122154306-9e94kvj",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122154306-9e94kvj"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "a",
									"TextMarkAHref": "https://mp.weixin.qq.com/s?__biz=MzkxOTIwMDgxMg==\u0026mid=2247483790\u0026idx=1\u0026sn=b4eeb112fb5fc6e8657d85dfc23c46b3\u0026chksm=c1a4f4cdf6d37ddb423d13718a10c050d681c8b028ca19167da416e2fbf536fd056edf4a01bf\u0026cur_album_id=2342519043662004229\u0026scene=190#rd",
									"TextMarkTextContent": "https://mp.weixin.qq.com/s?__biz=MzkxOTIwMDgxMg==\u0026amp;mid=2247483790\u0026amp;idx=1\u0026amp;sn=b4eeb112fb5fc6e8657d85dfc23c46b3\u0026amp;chksm=c1a4f4cdf6d37ddb423d13718a10c050d681c8b028ca19167da416e2fbf536fd056edf4a01bf\u0026amp;cur_album_id=2342519043662004229\u0026amp;scene=190#rd - 微信公众平台"
								}
							]
						}
					]
				},
				{
					"ID": "20221122154306-odbyt3d",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122154306-odbyt3d"
					},
					"Children": [
						{
							"ID": "20221122154306-6w52sro",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122154306-6w52sro"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Kubernetes搭建高可用集群实践分享"
								}
							]
						}
					]
				},
				{
					"ID": "20221122154306-8io0p4n",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122154306-8io0p4n"
					},
					"Children": [
						{
							"ID": "20221122154306-5b8pc51",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122154306-5b8pc51"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "2022-11-22 15:43:06"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221122154306-6qvas2f",
			"Type": "NodeThematicBreak",
			"Properties": {
				"id": "20221122154306-6qvas2f"
			}
		},
		{
			"ID": "20221122154306-ha5q9ik",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20221122154306-ha5q9ik"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "集群拓扑"
				}
			]
		},
		{
			"ID": "20221122154306-d71lub7",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122154306-d71lub7"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "图片"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/640-20221122154306-20q0ug7"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20221122154306-0mgqxg4",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20221122154306-0mgqxg4"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "架构说明"
				}
			]
		},
		{
			"ID": "20221122154306-jtipzpy",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122154306-jtipzpy"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "部署主要分为以下4个步骤："
				}
			]
		},
		{
			"ID": "20221122154306-h2sw42i",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20221122154306-h2sw42i"
			},
			"Children": [
				{
					"ID": "20221122154306-39oukia",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122154306-39oukia"
					},
					"Children": [
						{
							"ID": "20221122154306-mb0q2vh",
							"Type": "NodeList",
							"ListData": {
								"Typ": 1
							},
							"Properties": {
								"id": "20221122154306-mb0q2vh"
							},
							"Children": [
								{
									"ID": "20221122154306-em5w703",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "MS4=",
										"Num": 1
									},
									"Properties": {
										"id": "20221122154306-em5w703"
									},
									"Children": [
										{
											"ID": "20221122154306-uft1whh",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20221122154306-uft1whh"
											},
											"Children": [
												{
													"Type": "NodeTextMark",
													"TextMarkType": "strong",
													"TextMarkTextContent": "搭建外部etcd集群"
												},
												{
													"Type": "NodeText",
													"Data": " : etcd是kubernetes集群中的一个十分重要的组件，用于保存集群所有的网络配置和对象的状态信息。本次实验通过kubelet部署static pod方式在集群外部部署一个3节点的etcd集群。"
												}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20221122154306-edbedts",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122154306-edbedts"
					},
					"Children": [
						{
							"ID": "20221122154306-y9ju2jw",
							"Type": "NodeList",
							"ListData": {
								"Typ": 1
							},
							"Properties": {
								"id": "20221122154306-y9ju2jw"
							},
							"Children": [
								{
									"ID": "20221122154306-c2hogwa",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "Mi4=",
										"Num": 2
									},
									"Properties": {
										"id": "20221122154306-c2hogwa"
									},
									"Children": [
										{
											"ID": "20221122154306-ps8dwie",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20221122154306-ps8dwie"
											},
											"Children": [
												{
													"Type": "NodeTextMark",
													"TextMarkType": "strong",
													"TextMarkTextContent": "负载均衡配置"
												},
												{
													"Type": "NodeText",
													"Data": " ：haproxy为3个k8s master的apiserver提供反向代理功能，另外还是用keepalived为2个haproxy提供一个VIP（虚拟IP），当主haproxy发生故障时，VIP可以自动切换到备haproxy。"
												}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20221122154306-vtt1y67",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122154306-vtt1y67"
					},
					"Children": [
						{
							"ID": "20221122154306-dw6a58m",
							"Type": "NodeList",
							"ListData": {
								"Typ": 1
							},
							"Properties": {
								"id": "20221122154306-dw6a58m"
							},
							"Children": [
								{
									"ID": "20221122154306-3km3rr9",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "My4=",
										"Num": 3
									},
									"Properties": {
										"id": "20221122154306-3km3rr9"
									},
									"Children": [
										{
											"ID": "20221122154306-5sg56l1",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20221122154306-5sg56l1"
											},
											"Children": [
												{
													"Type": "NodeTextMark",
													"TextMarkType": "strong",
													"TextMarkTextContent": "kubeadm部署集群"
												},
												{
													"Type": "NodeText",
													"Data": " ：部署3 mater，3 worker高可用集群。"
												}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20221122154306-30ulmsc",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122154306-30ulmsc"
					},
					"Children": [
						{
							"ID": "20221122154306-7flstey",
							"Type": "NodeList",
							"ListData": {
								"Typ": 1
							},
							"Properties": {
								"id": "20221122154306-7flstey"
							},
							"Children": [
								{
									"ID": "20221122154306-jtea8jc",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "NC4=",
										"Num": 4
									},
									"Properties": {
										"id": "20221122154306-jtea8jc"
									},
									"Children": [
										{
											"ID": "20221122154306-w09oxb5",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20221122154306-w09oxb5"
											},
											"Children": [
												{
													"Type": "NodeTextMark",
													"TextMarkType": "strong",
													"TextMarkTextContent": "部署Rancher"
												},
												{
													"Type": "NodeText",
													"Data": " （可选）：在kubernetes集群中安装rancher-agent，将kubeadm部署的k8s集群纳管到Rancher中。Rancher可以提供可视化管理界面。"
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221122154306-6u6079q",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20221122154306-6u6079q"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "IP地址规划"
				}
			]
		},
		{
			"ID": "20221122154306-pudptl9",
			"Type": "NodeTable",
			"TableAligns": [
				0,
				0,
				0
			],
			"Properties": {
				"id": "20221122154306-pudptl9"
			},
			"Children": [
				{
					"Type": "NodeTableHead",
					"Data": "thead",
					"Children": [
						{
							"Type": "NodeTableRow",
							"Data": "tr",
							"Children": [
								{
									"Type": "NodeTableCell",
									"Data": "th",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "IP"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"Data": "th",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "主机名"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"Data": "th",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "用途"
										}
									]
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "192.168.1.242"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "etcd1"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "etcd"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "192.168.1.243"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "etcd2"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "etcd"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "192.168.1.244"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "etcd3"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "etcd"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "192.168.1.245"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "master1"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "k8s master"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "192.168.1.246"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "master2"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "k8s master"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "192.168.1.247"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "master3"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "k8s master"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "192.168.1.248"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "worker1"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "k8s worker"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "192.168.1.249"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "worker2"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "k8s worker"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "192.168.1.250"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "worker3"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "k8s worker"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "192.168.1.251"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "haproxy-master"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "haproxy-master"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "192.168.1.252"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "haproxy-backup"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "haproxy-backup"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "192.168.1.253"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeBr",
									"Data": "br"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "k8s api-server VIP"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221122154306-17dpw60",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20221122154306-17dpw60"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "部署操作"
				}
			]
		},
		{
			"ID": "20221122154306-acq694c",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20221122154306-acq694c"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "1 etcd集群搭建"
				}
			]
		},
		{
			"ID": "20221122154306-tnixzmt",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20221122154306-tnixzmt"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "1.1 前提准备"
				}
			]
		},
		{
			"ID": "20221122154306-7lqnpaa",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221122154306-7lqnpaa"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "#关闭selinux\nsetenforce 0 \u0026\u0026 sed -i 's/^SELINUX=.*/SELINUX=disabled/' /etc/selinux/config\n#关闭swap\nswapoff -a \u0026\u0026 sed -i '/ swap / s/^\\(.*\\)$/#\\1/g' /etc/fstab\n#安装kubectl,kubeadm,kubelet\ncat \u003c\u003cEOF \u003e /etc/yum.repos.d/kubernetes.repo\n[kubernetes]\nname=Kubernetes\nbaseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64/\nenabled=1\ngpgcheck=1\nrepo_gpgcheck=1\ngpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg\nEOF\nsetenforce 0\nyum install -y kubelet kubeadm kubectl\nsystemctl enable kubelet \u0026\u0026 systemctl start kubelet\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221122154306-3vwhzzf",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20221122154306-3vwhzzf"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "1.2 kubelet配置"
				}
			]
		},
		{
			"ID": "20221122154306-dr2bu5m",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122154306-dr2bu5m"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "kubelet会根据/etc/kubernetes/manifests目录中的yaml文件拉起etcd的容器："
				}
			]
		},
		{
			"ID": "20221122154306-7dgo03o",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221122154306-7dgo03o"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "cat \u003c\u003c EOF \u003e /etc/systemd/system/kubelet.service.d/20-etcd-service-manager.conf\n[Service]\nExecStart=\n#  Replace \"systemd\" with the cgroup driver of your container runtime. The default value in the kubelet is \"cgroupfs\".\nExecStart=/usr/bin/kubelet --address=127.0.0.1 --pod-manifest-path=/etc/kubernetes/manifests --cgroup-driver=cgroupfs\nRestart=always\nEOFsystemctl daemon-reload\nsystemctl restart kubelet\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221122154306-x68cjxg",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20221122154306-x68cjxg"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "1.3 创建kubeadm配置文件"
				}
			]
		},
		{
			"ID": "20221122154306-wioj9eu",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122154306-wioj9eu"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "使用以下脚本为每个将要运行 etcd 成员的主机生成一个 kubeadm 配置文件："
				}
			]
		},
		{
			"ID": "20221122154306-1mhparj",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221122154306-1mhparj"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "# 指定etcd集群成员IP地址\nexport HOST1=192.168.1.242\nexport HOST2=192.168.1.243\nexport HOST3=192.168.1.244# 创建临时目录来存储将被分发到其它主机上的文件\nmkdir -p /tmp/${HOST1}/ /tmp/${HOST2}/ /tmp/${HOST3}/ETCDHOSTS=(${HOST1} ${HOST2} ${HOST3})\nNAMES=(\"infra0\" \"infra1\" \"infra2\")for i in \"${!ETCDHOSTS[@]}\"; do\nHOST=${ETCDHOSTS[$i]}\nNAME=${NAMES[$i]}\ncat \u003c\u003c EOF \u003e /tmp/${HOST}/kubeadmcfg.yaml\napiVersion: \"kubeadm.k8s.io/v1beta2\"\nkind: ClusterConfiguration\netcd:\n    local:\n        serverCertSANs:\n        - \"${HOST}\"\n        peerCertSANs:\n        - \"${HOST}\"\n        extraArgs:\n            initial-cluster: infra0=https://${ETCDHOSTS[0]}:2380,infra1=https://${ETCDHOSTS[1]}:2380,infra2=https://${ETCDHOSTS[2]}:2380\n            initial-cluster-state: new\n            name: ${NAME}\n            listen-peer-urls: https://${HOST}:2380\n            listen-client-urls: https://${HOST}:2379\n            advertise-client-urls: https://${HOST}:2379\n            initial-advertise-peer-urls: https://${HOST}:2380\nEOF\ndone\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221122154306-db3boj3",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20221122154306-db3boj3"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "1.4 生成证书颁发机构"
				}
			]
		},
		{
			"ID": "20221122154306-hbk767b",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122154306-hbk767b"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在HOST1（192.168.1.242）主机上生成证书颁发机构："
				}
			]
		},
		{
			"ID": "20221122154306-xfzg009",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221122154306-xfzg009"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "kubeadm init phase certs etcd-ca\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221122154306-7a0lpl2",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122154306-7a0lpl2"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "创建了如下两个文件："
				}
			]
		},
		{
			"ID": "20221122154306-19xk3yx",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221122154306-19xk3yx"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "/etc/kubernetes/pki/etcd/ca.crt\n/etc/kubernetes/pki/etcd/ca.key\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221122154306-464209k",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122154306-464209k"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "复制 CA 的 crt 和 key 文件到 etc/kubernetes/pki/etcd/ca.crt 和 /etc/kubernetes/pki/etcd/ca.key。"
				}
			]
		},
		{
			"ID": "20221122154306-iauqcpc",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20221122154306-iauqcpc"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "1.5 为每个成员创建证书"
				}
			]
		},
		{
			"ID": "20221122154306-0asd4jk",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221122154306-0asd4jk"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "kubeadm init phase certs etcd-server --config=/tmp/${HOST3}/kubeadmcfg.yaml\nkubeadm init phase certs etcd-peer --config=/tmp/${HOST3}/kubeadmcfg.yaml\nkubeadm init phase certs etcd-healthcheck-client --config=/tmp/${HOST3}/kubeadmcfg.yaml\nkubeadm init phase certs apiserver-etcd-client --config=/tmp/${HOST3}/kubeadmcfg.yaml\ncp -R /etc/kubernetes/pki /tmp/${HOST3}/\n# 清理不可重复使用的证书\nfind /etc/kubernetes/pki -not -name ca.crt -not -name ca.key -type f -deletekubeadm init phase certs etcd-server --config=/tmp/${HOST2}/kubeadmcfg.yaml\nkubeadm init phase certs etcd-peer --config=/tmp/${HOST2}/kubeadmcfg.yaml\nkubeadm init phase certs etcd-healthcheck-client --config=/tmp/${HOST2}/kubeadmcfg.yaml\nkubeadm init phase certs apiserver-etcd-client --config=/tmp/${HOST2}/kubeadmcfg.yaml\ncp -R /etc/kubernetes/pki /tmp/${HOST2}/\nfind /etc/kubernetes/pki -not -name ca.crt -not -name ca.key -type f -deletekubeadm init phase certs etcd-server --config=/tmp/${HOST1}/kubeadmcfg.yaml\nkubeadm init phase certs etcd-peer --config=/tmp/${HOST1}/kubeadmcfg.yaml\nkubeadm init phase certs etcd-healthcheck-client --config=/tmp/${HOST1}/kubeadmcfg.yaml\nkubeadm init phase certs apiserver-etcd-client --config=/tmp/${HOST1}/kubeadmcfg.yaml\nmv /tmp/${HOST1}/kubeadmcfg.yaml  /etc/kubernetes\n# 不需要移动 certs 因为它们是给 HOST1 使用的# 清理不应从此主机复制的证书\nfind /tmp/${HOST3} -name ca.key -type f -delete\nfind /tmp/${HOST2} -name ca.key -type f -delete\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221122154306-nxwrpij",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20221122154306-nxwrpij"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "1.6 复制证书和kubeadm配置文件到其他两个etcd节点"
				}
			]
		},
		{
			"ID": "20221122154306-tw2esxt",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221122154306-tw2esxt"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "scp -r /tmp/${HOST2}/* root@${HOST2}:/etc/kubernetes\nscp -r /tmp/${HOST3}/* root@${HOST3}:/etc/kubernetes\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221122154306-e4jq28b",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122154306-e4jq28b"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "确保已经所有预期的文件都存在："
				}
			]
		},
		{
			"ID": "20221122154306-h4se35l",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221122154306-h4se35l"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "[root@etcd1 ~]# tree /etc/kubernetes/\n/etc/kubernetes/\n├── kubeadmcfg.yaml\n├── manifests\n│   └── etcd.yaml\n└── pki\n    ├── apiserver-etcd-client.crt\n    ├── apiserver-etcd-client.key\n    └── etcd\n        ├── ca.crt\n        ├── ca.key\n        ├── healthcheck-client.crt\n        ├── healthcheck-client.key\n        ├── peer.crt\n        ├── peer.key\n        ├── server.crt\n        └── server.key3 directories, 12 files[root@etcd2 kubernetes]# tree /etc/kubernetes/\n.\n├── kubeadmcfg.yaml\n├── manifests\n│   └── etcd.yaml\n└── pki\n    ├── apiserver-etcd-client.crt\n    ├── apiserver-etcd-client.key\n    └── etcd\n        ├── ca.crt\n        ├── healthcheck-client.crt\n        ├── healthcheck-client.key\n        ├── peer.crt\n        ├── peer.key\n        ├── server.crt\n        └── server.key3 directories, 11 files[root@etcd3 ~]# tree /etc/kubernetes/\n/etc/kubernetes/\n├── kubeadmcfg.yaml\n├── manifests\n│   └── etcd.yaml\n└── pki\n    ├── apiserver-etcd-client.crt\n    ├── apiserver-etcd-client.key\n    └── etcd\n        ├── ca.crt\n        ├── healthcheck-client.crt\n        ├── healthcheck-client.key\n        ├── peer.crt\n        ├── peer.key\n        ├── server.crt\n        └── server.key3 directories, 11 files\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221122154306-xyzguqv",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20221122154306-xyzguqv"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "1.7 生成静态Pod配置文件"
				}
			]
		},
		{
			"ID": "20221122154306-r137ur4",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221122154306-r137ur4"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "[root@etcd1 ~]#  kubeadm init phase etcd local --config=/etc/kubernetes/kubeadmcfg.yaml  \n[root@etcd2 ~]#  kubeadm init phase etcd local --config=/etc/kubernetes/kubeadmcfg.yaml  \n[root@etcd3 ~]#  kubeadm init phase etcd local --config=/etc/kubernetes/kubeadmcfg.yaml  \n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221122154306-fsxiekj",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20221122154306-fsxiekj"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "1.8 检查etcd集群运行情况"
				}
			]
		},
		{
			"ID": "20221122154306-9alf6s8",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221122154306-9alf6s8"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "[root@etcd1 kubernetes]# docker run --rm -it --name etcd-check \\\n\u003e --net host \\\n\u003e -v /etc/kubernetes:/etc/kubernetes k8s.gcr.io/etcd:${ETCD_TAG} etcdctl \\\n\u003e --cert /etc/kubernetes/pki/etcd/peer.crt \\\n\u003e --key /etc/kubernetes/pki/etcd/peer.key \\\n\u003e --cacert /etc/kubernetes/pki/etcd/ca.crt \\\n\u003e --endpoints https://${HOST1}:2379 endpoint health --cluster\nhttps://192.168.1.244:2379 is healthy: successfully committed proposal: took = 29.827986ms\nhttps://192.168.1.243:2379 is healthy: successfully committed proposal: took = 30.169169ms\nhttps://192.168.1.242:2379 is healthy: successfully committed proposal: took = 31.270748ms\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221122154306-frr6g6v",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20221122154306-frr6g6v"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "2 负载均衡配置"
				}
			]
		},
		{
			"ID": "20221122154306-6c36gbw",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20221122154306-6c36gbw"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "2.1 部署haproxy"
				}
			]
		},
		{
			"ID": "20221122154306-hd8jbfp",
			"Type": "NodeHeading",
			"HeadingLevel": 5,
			"Properties": {
				"id": "20221122154306-hd8jbfp"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "2.1.1 安装haproxy"
				}
			]
		},
		{
			"ID": "20221122154306-vuxkliw",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221122154306-vuxkliw"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "yum install -y haproxy\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221122154306-ppw0c2o",
			"Type": "NodeHeading",
			"HeadingLevel": 5,
			"Properties": {
				"id": "20221122154306-ppw0c2o"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "2.1.2 修改haproxy配置文件"
				}
			]
		},
		{
			"ID": "20221122154306-sjtq634",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122154306-sjtq634"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "vim /etc/haproxy/haproxy.cfg，两台haproxy的配置文件是一致的。"
				}
			]
		},
		{
			"ID": "20221122154306-vwjcx4j",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221122154306-vwjcx4j"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "#---------------------------------------------------------------------\n# Example configuration for a possible web application.  See the\n# full configuration options online.\n#\n#   http://haproxy.1wt.eu/download/1.4/doc/configuration.txt\n#\n#---------------------------------------------------------------------#---------------------------------------------------------------------\n# Global settings\n#---------------------------------------------------------------------\nglobal\n    # to have these messages end up in /var/log/haproxy.log you will\n    # need to:\n    #\n    # 1) configure syslog to accept network log events.  This is done\n    #    by adding the '-r' option to the SYSLOGD_OPTIONS in\n    #    /etc/sysconfig/syslog\n    #\n    # 2) configure local2 events to go to the /var/log/haproxy.log\n    #   file. A line like the following can be added to\n    #   /etc/sysconfig/syslog\n    #\n    #    local2.*                       /var/log/haproxy.log\n    #\n    log         127.0.0.1 local2    chroot      /var/lib/haproxy\n    pidfile     /var/run/haproxy.pid\n    maxconn     4000\n    user        haproxy\n    group       haproxy\n    daemon    # turn on stats unix socket\n    stats socket /var/lib/haproxy/stats#---------------------------------------------------------------------\n# common defaults that all the 'listen' and 'backend' sections will\n# use if not designated in their block\n#---------------------------------------------------------------------\ndefaults\n    mode                    http\n    log                     global\n    option                  httplog\n    option                  dontlognull\n    option http-server-close\n    option forwardfor       except 127.0.0.0/8\n    option                  redispatch\n    retries                 3\n    timeout http-request    10s\n    timeout queue           1m\n    timeout connect         10s\n    timeout client          1m\n    timeout server          1m\n    timeout http-keep-alive 10s\n    timeout check           10s\n    maxconn                 3000#---------------------------------------------------------------------\n# main frontend which proxys to the backends\n#---------------------------------------------------------------------\nfrontend apiserver\n    bind *:6443\n    mode tcp\n    option tcplog\n    default_backend apiserver\n#---------------------------------------------------------------------\n# static backend for serving up images, stylesheets and such\n#---------------------------------------------------------------------\nbackend apiserver\n    option httpchk GET /healthz\n    http-check expect status 200\n    mode tcp\n    option ssl-hello-chk\n    balance  roundrobin\n    #server为三个k8s master的地址:端口\n    server  master1 192.168.1.245:6443 check\n    server  master2 192.168.1.246:6443 check\n    server  master3 192.168.1.247:6443 check\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221122154306-90dqtrd",
			"Type": "NodeHeading",
			"HeadingLevel": 5,
			"Properties": {
				"id": "20221122154306-90dqtrd"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "2.1.3 启动haproxy"
				}
			]
		},
		{
			"ID": "20221122154306-dxqsnih",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221122154306-dxqsnih"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "systemctl enable haproxy --now\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221122154306-o6ocpbc",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20221122154306-o6ocpbc"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "2.2 部署keepalived"
				}
			]
		},
		{
			"ID": "20221122154306-a1t1hhe",
			"Type": "NodeHeading",
			"HeadingLevel": 5,
			"Properties": {
				"id": "20221122154306-a1t1hhe"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "2.2.1 安装keepalived"
				}
			]
		},
		{
			"ID": "20221122154306-hyois6u",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221122154306-hyois6u"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "yum install -y keepalived\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221122154306-iakeflg",
			"Type": "NodeHeading",
			"HeadingLevel": 5,
			"Properties": {
				"id": "20221122154306-iakeflg"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "2.2.2 修改keepalived配置文件"
				}
			]
		},
		{
			"ID": "20221122154306-ncftznr",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122154306-ncftznr"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "vim /etc/keepalived/keepalived.conf keepalived master配置文件："
				}
			]
		},
		{
			"ID": "20221122154306-zvbf60k",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221122154306-zvbf60k"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "global_defs {\n    router_id LVS_DEVEL\n}\nvrrp_script check_apiserver {\n  script \"/etc/keepalived/check_apiserver.sh\"\n  interval 3\n  weight -2\n  fall 10\n  rise 2\n}vrrp_instance VI_1 {\n    state MASTER #Master\n    interface ens192\n    virtual_router_id 51 #主备的router_id保存一致\n    priority 101   #Master的优先级要高于Backup\n    authentication {\n        auth_type PASS\n        auth_pass 42  #主备的auth_pass保存一致\n    }\n    virtual_ipaddress {\n        192.168.1.253  #VIP\n    }\n    track_script {\n        check_apiserver\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221122154306-k6xn18e",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122154306-k6xn18e"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "keepalived backup配置文件："
				}
			]
		},
		{
			"ID": "20221122154306-ktd1s5k",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221122154306-ktd1s5k"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "global_defs {\n    router_id LVS_DEVEL\n}\nvrrp_script check_apiserver {\n  script \"/etc/keepalived/check_apiserver.sh\"\n  interval 3\n  weight -2\n  fall 10\n  rise 2\n}vrrp_instance VI_1 {\n    state BACKUP #BACKUP\n    interface ens192\n    virtual_router_id 51  #主备的router_id保存一致\n    priority 100  #Master的优先级要高于Backup\n    authentication {\n        auth_type PASS\n        auth_pass 42  #主备的auth_pass保存一致\n    }\n    virtual_ipaddress {\n        192.168.1.253  #VIP\n    }\n    track_script {\n        check_apiserver\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221122154306-rh17tgm",
			"Type": "NodeHeading",
			"HeadingLevel": 5,
			"Properties": {
				"id": "20221122154306-rh17tgm"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "2.2.3 编辑健康检查脚本"
				}
			]
		},
		{
			"ID": "20221122154306-jnj8b48",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221122154306-jnj8b48"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "#!/bin/sh\n\nerrorExit() {\n    echo \"*** $*\" 1\u003e\u00262\n    exit 1\n}curl --silent --max-time 2 --insecure https://localhost:6443/ -o /dev/null || errorExit \"Error GET https://localhost:6443/\"\nif ip addr | grep -q 192.168.1.253; then\n    curl --silent --max-time 2 --insecure https://192.168.1.253:6443/ -o /dev/null || errorExit \"Error GET https://192.168.1.253:6443/\"\nfi\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221122154306-41edu0i",
			"Type": "NodeHeading",
			"HeadingLevel": 5,
			"Properties": {
				"id": "20221122154306-41edu0i"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "2.2.4 启动keepalived"
				}
			]
		},
		{
			"ID": "20221122154306-2nsmmo6",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221122154306-2nsmmo6"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "systemctl enable keepalived --now\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221122154306-igzn1bu",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20221122154306-igzn1bu"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "3 kubeadm部署集群"
				}
			]
		},
		{
			"ID": "20221122154306-a88ul97",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20221122154306-a88ul97"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "3.1 前提准备"
				}
			]
		},
		{
			"ID": "20221122154306-3k5qjcb",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221122154306-3k5qjcb"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "#关闭selinux\nsetenforce 0 \u0026\u0026 sed -i 's/^SELINUX=.*/SELINUX=disabled/' /etc/selinux/config\n#关闭swap\nswapoff -a \u0026\u0026 sed -i '/ swap / s/^\\(.*\\)$/#\\1/g' /etc/fstab\n#安装kubectl,kubeadm,kubelet\ncat \u003c\u003cEOF \u003e /etc/yum.repos.d/kubernetes.repo\n[kubernetes]\nname=Kubernetes\nbaseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64/\nenabled=1\ngpgcheck=1\nrepo_gpgcheck=1\ngpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg\nEOF\nsetenforce 0\nyum install -y kubelet kubeadm kubectl\nsystemctl enable kubelet \u0026\u0026 systemctl start kubelet\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221122154306-hqgs3xs",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20221122154306-hqgs3xs"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "3.2 初始化集群"
				}
			]
		},
		{
			"ID": "20221122154306-9u4k7d5",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122154306-9u4k7d5"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "kubeadm初始化yaml文件："
				}
			]
		},
		{
			"ID": "20221122154306-ysk6syl",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221122154306-ysk6syl"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "apiVersion: kubeadm.k8s.io/v1beta2\nkind: ClusterConfiguration\nkubernetesVersion: stable\ncontrolPlaneEndpoint: \"192.168.1.253:6443\" #haproxy的keepalived提供的VIP\netcd:\n    external:\n        endpoints:\n        - https://192.168.1.242:2379\n        - https://192.168.1.243:2379\n        - https://192.168.1.244:2379\n        caFile: /etc/kubernetes/pki/etcd/ca.crt\n        certFile: /etc/kubernetes/pki/apiserver-etcd-client.crt\n        keyFile: /etc/kubernetes/pki/apiserver-etcd-client.key\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221122154306-2pv5uwp",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122154306-2pv5uwp"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "执行初始化命令："
				}
			]
		},
		{
			"ID": "20221122154306-rk56f43",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221122154306-rk56f43"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "#--upload-certs命令用于分发证书到其他控制节点\n[root@master1 kubernetes]# kubeadm init --config kubeadm-config.yaml --upload-certs\nW1125 16:28:56.393074   13988 configset.go:348] WARNING: kubeadm cannot validate component configs for API groups [kubelet.config.k8s.io kubeproxy.config.k8s.io]\n[init] Using Kubernetes version: v1.19.4\n[preflight] Running pre-flight checks\n        [WARNING IsDockerSystemdCheck]: detected \"cgroupfs\" as the Docker cgroup driver. The recommended driver is \"systemd\". Please follow the guide at https://kubernetes.io/docs/setup/cri/\n[preflight] Pulling images required for setting up a Kubernetes cluster\n[preflight] This might take a minute or two, depending on the speed of your internet connection\n[preflight] You can also perform this action in beforehand using 'kubeadm config images pull'\n[certs] Using certificateDir folder \"/etc/kubernetes/pki\"\n[certs] Generating \"ca\" certificate and key\n[certs] Generating \"apiserver\" certificate and key\n[certs] apiserver serving cert is signed for DNS names [kubernetes kubernetes.default kubernetes.default.svc kubernetes.default.svc.cluster.local master1] and IPs [10.96.0.1 192.168.1.245 192.168.1.253]\n[certs] Generating \"apiserver-kubelet-client\" certificate and key\n[certs] Generating \"front-proxy-ca\" certificate and key\n[certs] Generating \"front-proxy-client\" certificate and key\n[certs] External etcd mode: Skipping etcd/ca certificate authority generation\n[certs] External etcd mode: Skipping etcd/server certificate generation\n[certs] External etcd mode: Skipping etcd/peer certificate generation\n[certs] External etcd mode: Skipping etcd/healthcheck-client certificate generation\n[certs] External etcd mode: Skipping apiserver-etcd-client certificate generation\n[certs] Generating \"sa\" key and public key\n[kubeconfig] Using kubeconfig folder \"/etc/kubernetes\"\n[kubeconfig] Writing \"admin.conf\" kubeconfig file\n[kubeconfig] Writing \"kubelet.conf\" kubeconfig file\n[kubeconfig] Writing \"controller-manager.conf\" kubeconfig file\n[kubeconfig] Writing \"scheduler.conf\" kubeconfig file\n[kubelet-start] Writing kubelet environment file with flags to file \"/var/lib/kubelet/kubeadm-flags.env\"\n[kubelet-start] Writing kubelet configuration to file \"/var/lib/kubelet/config.yaml\"\n[kubelet-start] Starting the kubelet\n[control-plane] Using manifest folder \"/etc/kubernetes/manifests\"\n[control-plane] Creating static Pod manifest for \"kube-apiserver\"\n[control-plane] Creating static Pod manifest for \"kube-controller-manager\"\n[control-plane] Creating static Pod manifest for \"kube-scheduler\"\n[wait-control-plane] Waiting for the kubelet to boot up the control plane as static Pods from directory \"/etc/kubernetes/manifests\". This can take up to 4m0s\n[apiclient] All control plane components are healthy after 22.048332 seconds\n[upload-config] Storing the configuration used in ConfigMap \"kubeadm-config\" in the \"kube-system\" Namespace\n[kubelet] Creating a ConfigMap \"kubelet-config-1.19\" in namespace kube-system with the configuration for the kubelets in the cluster\n[upload-certs] Storing the certificates in Secret \"kubeadm-certs\" in the \"kube-system\" Namespace\n[upload-certs] Using certificate key:\n467b45aac2ebf12a6bd88d71abc91e6628698b5310529b83f9c8a8b5ec7831e6\n[mark-control-plane] Marking the node master1 as control-plane by adding the label \"node-role.kubernetes.io/master=''\"\n[mark-control-plane] Marking the node master1 as control-plane by adding the taints [node-role.kubernetes.io/master:NoSchedule]\n[bootstrap-token] Using token: d0idxe.5qepodyefo6ohfey\n[bootstrap-token] Configuring bootstrap tokens, cluster-info ConfigMap, RBAC Roles\n[bootstrap-token] configured RBAC rules to allow Node Bootstrap tokens to get nodes\n[bootstrap-token] configured RBAC rules to allow Node Bootstrap tokens to post CSRs in order for nodes to get long term certificate credentials\n[bootstrap-token] configured RBAC rules to allow the csrapprover controller automatically approve CSRs from a Node Bootstrap Token\n[bootstrap-token] configured RBAC rules to allow certificate rotation for all node client certificates in the cluster\n[bootstrap-token] Creating the \"cluster-info\" ConfigMap in the \"kube-public\" namespace\n[kubelet-finalize] Updating \"/etc/kubernetes/kubelet.conf\" to point to a rotatable kubelet client certificate and key\n[addons] Applied essential addon: CoreDNS\n[addons] Applied essential addon: kube-proxyYour Kubernetes control-plane has initialized successfully!To start using your cluster, you need to run the following as a regular user:  mkdir -p $HOME/.kube\n  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config\n  sudo chown $(id -u):$(id -g) $HOME/.kube/configYou should now deploy a pod network to the cluster.\nRun \"kubectl apply -f [podnetwork].yaml\" with one of the options listed at:\n  https://kubernetes.io/docs/concepts/cluster-administration/addons/You can now join any number of the control-plane node running the following command on each as root:  kubeadm join 192.168.1.253:6443 --token d0idxe.5qepodyefo6ohfey \\\n    --discovery-token-ca-cert-hash sha256:2e864b2742535b83090b51416290d5b48cebe7b2d7b487c273e5e1bfe6248cca \\\n    --control-plane --certificate-key 467b45aac2ebf12a6bd88d71abc91e6628698b5310529b83f9c8a8b5ec7831e6Please note that the certificate-key gives access to cluster sensitive data, keep it secret!\nAs a safeguard, uploaded-certs will be deleted in two hours; If necessary, you can use\n\"kubeadm init phase upload-certs --upload-certs\" to reload certs afterward.Then you can join any number of worker nodes by running the following on each as root:kubeadm join 192.168.1.253:6443 --token d0idxe.5qepodyefo6ohfey \\\n    --discovery-token-ca-cert-hash sha256:2e864b2742535b83090b51416290d5b48cebe7b2d7b487c273e5e1bfe6248cca \n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221122154306-0ftzvnl",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20221122154306-0ftzvnl"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "3.3 加入新的master节点"
				}
			]
		},
		{
			"ID": "20221122154306-fg7oiod",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221122154306-fg7oiod"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "  kubeadm join 192.168.1.253:6443 --token d0idxe.5qepodyefo6ohfey \\\n    --discovery-token-ca-cert-hash sha256:2e864b2742535b83090b51416290d5b48cebe7b2d7b487c273e5e1bfe6248cca \\\n    --control-plane --certificate-key 467b45aac2ebf12a6bd88d71abc91e6628698b5310529b83f9c8a8b5ec7831e6\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221122154306-yz9ijks",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20221122154306-yz9ijks"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "3.4 加入新的worker节点"
				}
			]
		},
		{
			"ID": "20221122154306-hr90s6j",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221122154306-hr90s6j"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "kubeadm join 192.168.1.253:6443 --token d0idxe.5qepodyefo6ohfey \\\n    --discovery-token-ca-cert-hash sha256:2e864b2742535b83090b51416290d5b48cebe7b2d7b487c273e5e1bfe6248cca \n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221122154306-qe1ohhv",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20221122154306-qe1ohhv"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "3.5 查看创建完的集群"
				}
			]
		},
		{
			"ID": "20221122154306-1574mfl",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221122154306-1574mfl"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "[root@master1 ~]# kubectl get node -o wide\nNAME      STATUS   ROLES    AGE    VERSION   INTERNAL-IP     EXTERNAL-IP   OS-IMAGE                KERNEL-VERSION          CONTAINER-RUNTIME\nmaster1   Ready    master   3d8h   v1.19.4   192.168.1.245   \u003cnone\u003e        CentOS Linux 7 (Core)   3.10.0-693.el7.x86_64   docker://18.9.4\nmaster2   Ready    master   3d6h   v1.19.4   192.168.1.246   \u003cnone\u003e        CentOS Linux 7 (Core)   3.10.0-693.el7.x86_64   docker://18.9.4\nmaster3   Ready    master   3d6h   v1.19.4   192.168.1.247   \u003cnone\u003e        CentOS Linux 7 (Core)   3.10.0-693.el7.x86_64   docker://18.9.4\nworker1   Ready    \u003cnone\u003e   3d5h   v1.19.4   192.168.1.248   \u003cnone\u003e        CentOS Linux 7 (Core)   3.10.0-693.el7.x86_64   docker://18.9.4\nworker2   Ready    \u003cnone\u003e   3d5h   v1.19.4   192.168.1.249   \u003cnone\u003e        CentOS Linux 7 (Core)   3.10.0-693.el7.x86_64   docker://18.9.4\nworker3   Ready    \u003cnone\u003e   3d5h   v1.19.4   192.168.1.250   \u003cnone\u003e        CentOS Linux 7 (Core)   3.10.0-693.el7.x86_64   docker://18.9.4\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221122154306-cjq5vbf",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20221122154306-cjq5vbf"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "4 部署Rancher"
				}
			]
		},
		{
			"ID": "20221122154306-smnqsso",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20221122154306-smnqsso"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "4.1 安装Rancher"
				}
			]
		},
		{
			"ID": "20221122154306-yzlfbu9",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122154306-yzlfbu9"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "本次实验Rancher部署在k8s集群中，需要另外搭建一个k8s集群用于部署Rancher，这里跳过搭建k8s集群的步骤。 通过helm部署Rancher："
				}
			]
		},
		{
			"ID": "20221122154306-alyypi9",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221122154306-alyypi9"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "helm repo add rancher-latest https://releases.rancher.com/server-charts/rancher-latest\nhelm install rancher rancher-latest/rancher \\\n --namespace cattle-system \\\n --set hostname=www.chengzw.top\n #安装完成后，修改cattle-system命名空间中名为rancher的service的模式为NodePort，方便我们在集群外部访问Rancher\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221122154306-dishlgc",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20221122154306-dishlgc"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "4.2 部署Nginx SSL卸载（可选）"
				}
			]
		},
		{
			"ID": "20221122154306-51gzcuj",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122154306-51gzcuj"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "部署一台nginx用于反向代理Rancher："
				}
			]
		},
		{
			"ID": "20221122154306-z4be4ua",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221122154306-z4be4ua"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "events {\n    worker_connections 1024;\n}http {\n    #Rancher http NodePort地址\n    upstream rancher {\n        server 192.168.1.228:32284;\n        server 192.168.1.229:32284;\n        server 192.168.1.230:32284;\n    }    map $http_upgrade $connection_upgrade {\n        default Upgrade;\n        ''      close;\n    }\n    server {\n        listen 443 ssl http2;\n        server_name www.chengzw.top;\n        #提前导入www.chengzw.top证书和私钥到指定目录\n        ssl_certificate /root/cert/chengzwtop_2020.crt;\n        ssl_certificate_key /root/cert/chengzwtop_2020.key;        location / {\n            proxy_set_header Host $host;                        #注意：如果存在此标头，则rancher/rancher不会将 HTTP 重定向到 HTTPS。\n            proxy_set_header X-Forwarded-Proto $scheme;\n            proxy_set_header X-Forwarded-Port $server_port;\n            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n            proxy_pass http://rancher;\n            proxy_set_header Upgrade $http_upgrade;\n            proxy_set_header Connection $connection_upgrade;\n            proxy_http_version 1.1;\n            # This allows the ability for the execute sh window to remain open for up to 15 minutes. Without this parameter, the default is 1 minute and will automatically close.\n            proxy_read_timeout 900s;\n            proxy_buffering off;\n        }\n    }    server {\n        listen 80;\n        server_name www.chengzw.top;\n        return 301 https://$server_name$request_uri;\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221122154306-apoluei",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20221122154306-apoluei"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "4.3 导入Kubernetes集群"
				}
			]
		},
		{
			"ID": "20221122154306-lhfy6x5",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122154306-lhfy6x5"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在rancher页面点击添加集群--\u003e导入，下载提供的yaml文件："
				}
			]
		},
		{
			"ID": "20221122154306-rywlxg1",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221122154306-rywlxg1"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "wget https://www.chengzw.top/v3/import/cdvk6hs4bt7kcdxnrplpnf9sbw2gpjzshzxbgxs854d6t9f8lscp29.yaml\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221122154306-gxi53rz",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122154306-gxi53rz"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "修改cattle-cluster-agent的yaml文件，添加hostAlias指定Pod的host记录，否则Pod会去根据DNS去解析www.chengzw.top（计算宿主机写了host记录也没用，我们这里内部要解析到nginx上，如果用DNS解析会解析到公网上）。"
				}
			]
		},
		{
			"ID": "20221122154306-lhtekba",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221122154306-lhtekba"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "......\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: cattle-cluster-agent\n  namespace: cattle-system\nspec:\n  selector:\n    matchLabels:\n      app: cattle-cluster-agent\n  template:\n    metadata:\n      labels:\n        app: cattle-cluster-agent\n    spec:\n      affinity:\n        nodeAffinity:\n          requiredDuringSchedulingIgnoredDuringExecution:\n            nodeSelectorTerms:\n              - matchExpressions:\n                - key: beta.kubernetes.io/os\n                  operator: NotIn\n                  values:\n                    - windows\n          preferredDuringSchedulingIgnoredDuringExecution:\n          - weight: 100\n            preference:\n              matchExpressions:\n              - key: node-role.kubernetes.io/controlplane\n                operator: In\n                values:\n                - \"true\"\n          - weight: 1\n            preference:\n              matchExpressions:\n              - key: node-role.kubernetes.io/etcd\n                operator: In\n                values:\n                - \"true\"\n      serviceAccountName: cattle\n      tolerations:\n      - operator: Exists\n      #为cattle-cluster-agent添加host记录\n      hostAliases:\n      - ip: \"192.168.1.231\"\n        hostnames:\n        - \"www.chengzw.top\"\n      containers:\n        - name: cluster-register\n          imagePullPolicy: IfNotPresent\n          env:\n          - name: CATTLE_FEATURES\n            value: \"\"\n          - name: CATTLE_IS_RKE\n            value: \"false\"\n          - name: CATTLE_SERVER\n            value: \"https://www.chengzw.top\"\n          - name: CATTLE_CA_CHECKSUM\n            value: \"\"\n          - name: CATTLE_CLUSTER\n            value: \"true\"\n          - name: CATTLE_K8S_MANAGED\n            value: \"true\"\n          image: rancher/rancher-agent:v2.5.3\n          volumeMounts:\n          - name: cattle-credentials\n            mountPath: /cattle-credentials\n            readOnly: true\n          readinessProbe:\n            initialDelaySeconds: 2\n            periodSeconds: 5\n            httpGet:\n              path: /health\n              port: 8080\n      volumes:\n      - name: cattle-credentials\n        secret:\n          secretName: cattle-credentials-049e86b\n          defaultMode: 320\n......\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221122154306-koruk8a",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122154306-koruk8a"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "我们这里使用的证书是在阿里云上申请的受信任的证书，如果是自签名证书需要注意要将ca证书导入rancher-agent："
				}
			]
		},
		{
			"ID": "20221122154306-bnrz0lc",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221122154306-bnrz0lc"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": " #自签名证书需要添加ca.crt到cattle-cluster-agent内部\n- name: rancher-certs\n  mountPath: /etc/kubernetes/ssl/certs/ca.crt\n  subPath: ca.crt\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221122154306-zwjg55m",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20221122154306-zwjg55m"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "4.4 访问Rancher管理界面"
				}
			]
		},
		{
			"ID": "20221122154306-g0ja0zb",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122154306-g0ja0zb"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "图片"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/640-20221122154306-zcc8wcr"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		}
	]
}