{
	"ID": "20230326223457-28mdgxw",
	"Spec": "1",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20230326223457-28mdgxw",
		"scroll": "{\u0026quot;startId\u0026quot;:\u0026quot;20230326223457-ru32pvx\u0026quot;,\u0026quot;endId\u0026quot;:\u0026quot;20230326223457-mpbr1aa\u0026quot;,\u0026quot;scrollTop\u0026quot;:54,\u0026quot;focusId\u0026quot;:\u0026quot;20230326223457-ru32pvx\u0026quot;,\u0026quot;focusStart\u0026quot;:0,\u0026quot;focusEnd\u0026quot;:0}",
		"title": "Kubernetes和Jenkins——基于Kubernetes构建Jenkins持续集成平台_stan Z的博客-CSDN博客",
		"updated": "20230326231148"
	},
	"Children": [
		{
			"ID": "20230326223457-ru32pvx",
			"Type": "NodeThematicBreak",
			"Properties": {
				"id": "20230326223457-ru32pvx"
			}
		},
		{
			"ID": "20230326223457-mj6qvsz",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20230326223457-mj6qvsz"
			},
			"Children": [
				{
					"ID": "20230326223457-dldmsb0",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230326223457-dldmsb0"
					},
					"Children": [
						{
							"ID": "20230326223457-u0k5uap",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230326223457-u0k5uap"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "a",
									"TextMarkAHref": "https://blog.csdn.net/Cantevenl/article/details/116722510",
									"TextMarkTextContent": "https://blog.csdn.net/Cantevenl/article/details/116722510"
								}
							]
						}
					]
				},
				{
					"ID": "20230326223457-domqpnd",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230326223457-domqpnd"
					},
					"Children": [
						{
							"ID": "20230326223457-gh1e9mn",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230326223457-gh1e9mn"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "基于Kubernetes/K8S构建Jenkins持续集成平台Jenkins的Master-Slave分布式构建Jenkins的Master-Slave分布式构建什么是Master-Slave分布式构建Jenkins的Master-Slave分布式构建，就是通过将构建过程分配到从属Slave节点上，从而减轻Master节点的压力，而且可以同时构建多个，类似负载均衡的概念。..."
								}
							]
						}
					]
				},
				{
					"ID": "20230326223457-0w8bxru",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230326223457-0w8bxru"
					},
					"Children": [
						{
							"ID": "20230326223457-b7qm5pj",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230326223457-b7qm5pj"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "2023-03-26 22:34:57"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230326223457-wqpeun1",
			"Type": "NodeThematicBreak",
			"Properties": {
				"id": "20230326223457-wqpeun1"
			}
		},
		{
			"ID": "20230326223457-6cnq37b",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230326223457-6cnq37b"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "基于Kubernetes/K8S构建Jenkins持续集成平台"
				}
			]
		},
		{
			"ID": "20230326223457-lxgty5x",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20230326223457-lxgty5x"
			},
			"Children": [
				{
					"ID": "20230326223457-46zpw71",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230326223457-46zpw71"
					},
					"Children": [
						{
							"ID": "20230326223457-xyeddcv",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230326223457-xyeddcv"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "a",
									"TextMarkAHref": "https://blog.csdn.net/Cantevenl/article/details/116722510#KubernetesDockerJenkins_1",
									"TextMarkTextContent": "Kubernetes+Docker+Jenkins持续集成架构图"
								}
							]
						}
					]
				},
				{
					"ID": "20230326223457-weinyyc",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230326223457-weinyyc"
					},
					"Children": [
						{
							"ID": "20230326223457-zku63if",
							"Type": "NodeList",
							"ListData": {},
							"Properties": {
								"id": "20230326223457-zku63if"
							},
							"Children": [
								{
									"ID": "20230326223457-wrlb8vo",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20230326223457-wrlb8vo"
									},
									"Children": [
										{
											"ID": "20230326223457-5zx3d3p",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20230326223457-5zx3d3p"
											},
											"Children": [
												{
													"Type": "NodeTextMark",
													"TextMarkType": "a",
													"TextMarkAHref": "https://blog.csdn.net/Cantevenl/article/details/116722510#KubernetesDockerJenkins_12",
													"TextMarkTextContent": "Kubernetes+Docker+Jenkins持续集成方案好处"
												}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20230326223457-z54kg1l",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230326223457-z54kg1l"
					},
					"Children": [
						{
							"ID": "20230326223457-3et0pwg",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230326223457-3et0pwg"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "a",
									"TextMarkAHref": "https://blog.csdn.net/Cantevenl/article/details/116722510#KubeadmKubernetes_25",
									"TextMarkTextContent": "Kubeadm安装Kubernetes"
								}
							]
						}
					]
				},
				{
					"ID": "20230326223457-7qlm1m5",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230326223457-7qlm1m5"
					},
					"Children": [
						{
							"ID": "20230326223457-km02a82",
							"Type": "NodeList",
							"ListData": {},
							"Properties": {
								"id": "20230326223457-km02a82"
							},
							"Children": [
								{
									"ID": "20230326223457-d9bmmdf",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20230326223457-d9bmmdf"
									},
									"Children": [
										{
											"ID": "20230326223457-gkx7bph",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20230326223457-gkx7bph"
											},
											"Children": [
												{
													"Type": "NodeTextMark",
													"TextMarkType": "a",
													"TextMarkAHref": "https://blog.csdn.net/Cantevenl/article/details/116722510#Kubernetes_28",
													"TextMarkTextContent": "Kubernetes的架构"
												}
											]
										}
									]
								},
								{
									"ID": "20230326223457-bvwnvrr",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20230326223457-bvwnvrr"
									},
									"Children": [
										{
											"ID": "20230326223457-lmiteo1",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20230326223457-lmiteo1"
											},
											"Children": [
												{
													"Type": "NodeTextMark",
													"TextMarkType": "a",
													"TextMarkAHref": "https://blog.csdn.net/Cantevenl/article/details/116722510#_37",
													"TextMarkTextContent": "安装环境准备"
												}
											]
										}
									]
								},
								{
									"ID": "20230326223457-jrma01k",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20230326223457-jrma01k"
									},
									"Children": [
										{
											"ID": "20230326223457-cq7wcbm",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20230326223457-cq7wcbm"
											},
											"Children": [
												{
													"Type": "NodeTextMark",
													"TextMarkType": "a",
													"TextMarkAHref": "https://blog.csdn.net/Cantevenl/article/details/116722510#Dockerkubeletkubeadmkubectl_109",
													"TextMarkTextContent": "安装Docker、kubelet、kubeadm、kubectl"
												}
											]
										}
									]
								},
								{
									"ID": "20230326223457-hazfwlw",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20230326223457-hazfwlw"
									},
									"Children": [
										{
											"ID": "20230326223457-bowzzz2",
											"Type": "NodeList",
											"ListData": {},
											"Properties": {
												"id": "20230326223457-bowzzz2"
											},
											"Children": [
												{
													"ID": "20230326223457-jsx6cyu",
													"Type": "NodeListItem",
													"ListData": {
														"BulletChar": 42,
														"Marker": "Kg=="
													},
													"Properties": {
														"id": "20230326223457-jsx6cyu"
													},
													"Children": [
														{
															"ID": "20230326223457-nhyfxi1",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20230326223457-nhyfxi1"
															},
															"Children": [
																{
																	"Type": "NodeTextMark",
																	"TextMarkType": "a",
																	"TextMarkAHref": "https://blog.csdn.net/Cantevenl/article/details/116722510#Docker_113",
																	"TextMarkTextContent": "安装Docker"
																}
															]
														}
													]
												},
												{
													"ID": "20230326223457-w2uf7mw",
													"Type": "NodeListItem",
													"ListData": {
														"BulletChar": 42,
														"Marker": "Kg=="
													},
													"Properties": {
														"id": "20230326223457-w2uf7mw"
													},
													"Children": [
														{
															"ID": "20230326223457-ocvx9r1",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20230326223457-ocvx9r1"
															},
															"Children": [
																{
																	"Type": "NodeTextMark",
																	"TextMarkType": "a",
																	"TextMarkAHref": "https://blog.csdn.net/Cantevenl/article/details/116722510#kubeletkubeadmkubectl_160",
																	"TextMarkTextContent": "安装kubelet、kubeadm、kubectl"
																}
															]
														}
													]
												}
											]
										}
									]
								},
								{
									"ID": "20230326223457-7ux95i0",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20230326223457-7ux95i0"
									},
									"Children": [
										{
											"ID": "20230326223457-jk89ymu",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20230326223457-jk89ymu"
											},
											"Children": [
												{
													"Type": "NodeTextMark",
													"TextMarkType": "a",
													"TextMarkAHref": "https://blog.csdn.net/Cantevenl/article/details/116722510#Kubernetes_Mastermaster_184",
													"TextMarkTextContent": "部署Kubernetes Master（master节点）"
												}
											]
										}
									]
								},
								{
									"ID": "20230326223457-lq7ay1p",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20230326223457-lq7ay1p"
									},
									"Children": [
										{
											"ID": "20230326223457-wkqubq6",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20230326223457-wkqubq6"
											},
											"Children": [
												{
													"Type": "NodeTextMark",
													"TextMarkType": "a",
													"TextMarkAHref": "https://blog.csdn.net/Cantevenl/article/details/116722510#Kubernetes_NodeSlave_237",
													"TextMarkTextContent": "加入Kubernetes Node（Slave节点）"
												}
											]
										}
									]
								},
								{
									"ID": "20230326223457-k4owm7e",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20230326223457-k4owm7e"
									},
									"Children": [
										{
											"ID": "20230326223457-hu6k85t",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20230326223457-hu6k85t"
											},
											"Children": [
												{
													"Type": "NodeTextMark",
													"TextMarkType": "a",
													"TextMarkAHref": "https://blog.csdn.net/Cantevenl/article/details/116722510#kubectl_263",
													"TextMarkTextContent": "kubectl常用命令"
												}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20230326223457-hvwfvov",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230326223457-hvwfvov"
					},
					"Children": [
						{
							"ID": "20230326223457-xpv470p",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230326223457-xpv470p"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "a",
									"TextMarkAHref": "https://blog.csdn.net/Cantevenl/article/details/116722510#KubernetesJenkins_278",
									"TextMarkTextContent": "基于Kubernetes构建Jenkins持续集成平台"
								}
							]
						}
					]
				},
				{
					"ID": "20230326223457-bfcz1yo",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230326223457-bfcz1yo"
					},
					"Children": [
						{
							"ID": "20230326223457-5iihka8",
							"Type": "NodeList",
							"ListData": {},
							"Properties": {
								"id": "20230326223457-5iihka8"
							},
							"Children": [
								{
									"ID": "20230326223457-ojnimcq",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20230326223457-ojnimcq"
									},
									"Children": [
										{
											"ID": "20230326223457-8fwxm4d",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20230326223457-8fwxm4d"
											},
											"Children": [
												{
													"Type": "NodeTextMark",
													"TextMarkType": "a",
													"TextMarkAHref": "https://blog.csdn.net/Cantevenl/article/details/116722510#NFS_282",
													"TextMarkTextContent": "安装和配置NFS"
												}
											]
										}
									]
								},
								{
									"ID": "20230326223457-zvo5v1x",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20230326223457-zvo5v1x"
									},
									"Children": [
										{
											"ID": "20230326223457-mr2gljr",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20230326223457-mr2gljr"
											},
											"Children": [
												{
													"Type": "NodeTextMark",
													"TextMarkType": "a",
													"TextMarkAHref": "https://blog.csdn.net/Cantevenl/article/details/116722510#KubernetesJenkinsMaster_310",
													"TextMarkTextContent": "在Kubernetes安装Jenkins-Master"
												}
											]
										}
									]
								},
								{
									"ID": "20230326223457-dxyao1r",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20230326223457-dxyao1r"
									},
									"Children": [
										{
											"ID": "20230326223457-r4vf3kg",
											"Type": "NodeList",
											"ListData": {},
											"Properties": {
												"id": "20230326223457-r4vf3kg"
											},
											"Children": [
												{
													"ID": "20230326223457-c3tuqhb",
													"Type": "NodeListItem",
													"ListData": {
														"BulletChar": 42,
														"Marker": "Kg=="
													},
													"Properties": {
														"id": "20230326223457-c3tuqhb"
													},
													"Children": [
														{
															"ID": "20230326223457-mqis382",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20230326223457-mqis382"
															},
															"Children": [
																{
																	"Type": "NodeTextMark",
																	"TextMarkType": "a",
																	"TextMarkAHref": "https://blog.csdn.net/Cantevenl/article/details/116722510#NFS_client_provisioner_311",
																	"TextMarkTextContent": "创建NFS client provisioner"
																}
															]
														}
													]
												},
												{
													"ID": "20230326223457-2qo5srs",
													"Type": "NodeListItem",
													"ListData": {
														"BulletChar": 42,
														"Marker": "Kg=="
													},
													"Properties": {
														"id": "20230326223457-2qo5srs"
													},
													"Children": [
														{
															"ID": "20230326223457-j7a4edg",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20230326223457-j7a4edg"
															},
															"Children": [
																{
																	"Type": "NodeTextMark",
																	"TextMarkType": "a",
																	"TextMarkAHref": "https://blog.csdn.net/Cantevenl/article/details/116722510#JenkinsMaster_460",
																	"TextMarkTextContent": "安装Jenkins-Master"
																}
															]
														}
													]
												},
												{
													"ID": "20230326223457-j9e97v4",
													"Type": "NodeListItem",
													"ListData": {
														"BulletChar": 42,
														"Marker": "Kg=="
													},
													"Properties": {
														"id": "20230326223457-j9e97v4"
													},
													"Children": [
														{
															"ID": "20230326223457-78619z0",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20230326223457-78619z0"
															},
															"Children": [
																{
																	"Type": "NodeTextMark",
																	"TextMarkType": "a",
																	"TextMarkAHref": "https://blog.csdn.net/Cantevenl/article/details/116722510#Jenkins_753",
																	"TextMarkTextContent": "Jenkins插件管理"
																}
															]
														}
													]
												}
											]
										}
									]
								},
								{
									"ID": "20230326223457-1h7rodf",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20230326223457-1h7rodf"
									},
									"Children": [
										{
											"ID": "20230326223457-cot7zvh",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20230326223457-cot7zvh"
											},
											"Children": [
												{
													"Type": "NodeTextMark",
													"TextMarkType": "a",
													"TextMarkAHref": "https://blog.csdn.net/Cantevenl/article/details/116722510#JenkinsKubernetes_790",
													"TextMarkTextContent": "Jenkins与Kubernetes整合"
												}
											]
										}
									]
								},
								{
									"ID": "20230326223457-cqx53c2",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20230326223457-cqx53c2"
									},
									"Children": [
										{
											"ID": "20230326223457-uocx3li",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20230326223457-uocx3li"
											},
											"Children": [
												{
													"Type": "NodeTextMark",
													"TextMarkType": "a",
													"TextMarkAHref": "https://blog.csdn.net/Cantevenl/article/details/116722510#JenkinsSlave_808",
													"TextMarkTextContent": "构建Jenkins-Slave自定义镜像"
												}
											]
										}
									]
								},
								{
									"ID": "20230326223457-zo53ubr",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20230326223457-zo53ubr"
									},
									"Children": [
										{
											"ID": "20230326223457-rslikx0",
											"Type": "NodeList",
											"ListData": {},
											"Properties": {
												"id": "20230326223457-rslikx0"
											},
											"Children": [
												{
													"ID": "20230326223457-lagft7l",
													"Type": "NodeListItem",
													"ListData": {
														"BulletChar": 42,
														"Marker": "Kg=="
													},
													"Properties": {
														"id": "20230326223457-lagft7l"
													},
													"Children": [
														{
															"ID": "20230326223457-rqxpu0u",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20230326223457-rqxpu0u"
															},
															"Children": [
																{
																	"Type": "NodeTextMark",
																	"TextMarkType": "a",
																	"TextMarkAHref": "https://blog.csdn.net/Cantevenl/article/details/116722510#JenkinsSlave_1143",
																	"TextMarkTextContent": "测试Jenkins-Slave是否可以创建"
																}
															]
														}
													]
												}
											]
										}
									]
								},
								{
									"ID": "20230326223457-z7xfw7j",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20230326223457-z7xfw7j"
									},
									"Children": [
										{
											"ID": "20230326223457-aujukqj",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20230326223457-aujukqj"
											},
											"Children": [
												{
													"Type": "NodeTextMark",
													"TextMarkType": "a",
													"TextMarkAHref": "https://blog.csdn.net/Cantevenl/article/details/116722510#JenkinsKubernetesDocker_1197",
													"TextMarkTextContent": "Jenkins+Kubernetes+Docker完成微服务持续集成"
												}
											]
										}
									]
								},
								{
									"ID": "20230326223457-3fy81of",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20230326223457-3fy81of"
									},
									"Children": [
										{
											"ID": "20230326223457-sw35um5",
											"Type": "NodeList",
											"ListData": {},
											"Properties": {
												"id": "20230326223457-sw35um5"
											},
											"Children": [
												{
													"ID": "20230326223457-qz8al33",
													"Type": "NodeListItem",
													"ListData": {
														"BulletChar": 42,
														"Marker": "Kg=="
													},
													"Properties": {
														"id": "20230326223457-qz8al33"
													},
													"Children": [
														{
															"ID": "20230326223457-e5p74rd",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20230326223457-e5p74rd"
															},
															"Children": [
																{
																	"Type": "NodeTextMark",
																	"TextMarkType": "a",
																	"TextMarkAHref": "https://blog.csdn.net/Cantevenl/article/details/116722510#_1198",
																	"TextMarkTextContent": "拉取代码，构建镜像"
																}
															]
														}
													]
												},
												{
													"ID": "20230326223457-vbc16vx",
													"Type": "NodeListItem",
													"ListData": {
														"BulletChar": 42,
														"Marker": "Kg=="
													},
													"Properties": {
														"id": "20230326223457-vbc16vx"
													},
													"Children": [
														{
															"ID": "20230326223457-zjnzkq6",
															"Type": "NodeList",
															"ListData": {},
															"Properties": {
																"id": "20230326223457-zjnzkq6"
															},
															"Children": [
																{
																	"ID": "20230326223457-cm3bedw",
																	"Type": "NodeListItem",
																	"ListData": {
																		"BulletChar": 42,
																		"Marker": "Kg=="
																	},
																	"Properties": {
																		"id": "20230326223457-cm3bedw"
																	},
																	"Children": [
																		{
																			"ID": "20230326223457-fxryxu9",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20230326223457-fxryxu9"
																			},
																			"Children": [
																				{
																					"Type": "NodeTextMark",
																					"TextMarkType": "a",
																					"TextMarkAHref": "https://blog.csdn.net/Cantevenl/article/details/116722510#NFS_1199",
																					"TextMarkTextContent": "创建NFS共享目录"
																				}
																			]
																		}
																	]
																},
																{
																	"ID": "20230326223457-2yt82qy",
																	"Type": "NodeListItem",
																	"ListData": {
																		"BulletChar": 42,
																		"Marker": "Kg=="
																	},
																	"Properties": {
																		"id": "20230326223457-2yt82qy"
																	},
																	"Children": [
																		{
																			"ID": "20230326223457-zfjwj9d",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20230326223457-zfjwj9d"
																			},
																			"Children": [
																				{
																					"Type": "NodeTextMark",
																					"TextMarkType": "a",
																					"TextMarkAHref": "https://blog.csdn.net/Cantevenl/article/details/116722510#Pipeline_1218",
																					"TextMarkTextContent": "创建项目，编写构建Pipeline"
																				}
																			]
																		}
																	]
																},
																{
																	"ID": "20230326223457-jinj2tb",
																	"Type": "NodeListItem",
																	"ListData": {
																		"BulletChar": 42,
																		"Marker": "Kg=="
																	},
																	"Properties": {
																		"id": "20230326223457-jinj2tb"
																	},
																	"Children": [
																		{
																			"ID": "20230326223457-5r7xjfv",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20230326223457-5r7xjfv"
																			},
																			"Children": [
																				{
																					"Type": "NodeTextMark",
																					"TextMarkType": "a",
																					"TextMarkAHref": "https://blog.csdn.net/Cantevenl/article/details/116722510#_1337",
																					"TextMarkTextContent": "记录"
																				}
																			]
																		}
																	]
																}
															]
														}
													]
												}
											]
										}
									]
								},
								{
									"ID": "20230326223457-z4abd2v",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20230326223457-z4abd2v"
									},
									"Children": [
										{
											"ID": "20230326223457-i5w24s8",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20230326223457-i5w24s8"
											},
											"Children": [
												{
													"Type": "NodeTextMark",
													"TextMarkType": "a",
													"TextMarkAHref": "https://blog.csdn.net/Cantevenl/article/details/116722510#k8s_1636",
													"TextMarkTextContent": "微服务部署到k8s"
												}
											]
										}
									]
								},
								{
									"ID": "20230326223457-9t6l5my",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20230326223457-9t6l5my"
									},
									"Children": [
										{
											"ID": "20230326223457-ebqsl4j",
											"Type": "NodeList",
											"ListData": {},
											"Properties": {
												"id": "20230326223457-ebqsl4j"
											},
											"Children": [
												{
													"ID": "20230326223457-wll70bf",
													"Type": "NodeListItem",
													"ListData": {
														"BulletChar": 42,
														"Marker": "Kg=="
													},
													"Properties": {
														"id": "20230326223457-wll70bf"
													},
													"Children": [
														{
															"ID": "20230326223457-juid6c2",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20230326223457-juid6c2"
															},
															"Children": [
																{
																	"Type": "NodeTextMark",
																	"TextMarkType": "a",
																	"TextMarkAHref": "https://blog.csdn.net/Cantevenl/article/details/116722510#eurekaKubernetes_1758",
																	"TextMarkTextContent": "完成eureka集群部署到Kubernetes"
																}
															]
														}
													]
												},
												{
													"ID": "20230326223457-2b4r7wj",
													"Type": "NodeListItem",
													"ListData": {
														"BulletChar": 42,
														"Marker": "Kg=="
													},
													"Properties": {
														"id": "20230326223457-2b4r7wj"
													},
													"Children": [
														{
															"ID": "20230326223457-ym1s8xe",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20230326223457-ym1s8xe"
															},
															"Children": [
																{
																	"Type": "NodeTextMark",
																	"TextMarkType": "a",
																	"TextMarkAHref": "https://blog.csdn.net/Cantevenl/article/details/116722510#_1887",
																	"TextMarkTextContent": "错误排查"
																}
															]
														}
													]
												}
											]
										}
									]
								},
								{
									"ID": "20230326223457-cnuwecu",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20230326223457-cnuwecu"
									},
									"Children": [
										{
											"ID": "20230326223457-ao96dk2",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20230326223457-ao96dk2"
											},
											"Children": [
												{
													"Type": "NodeTextMark",
													"TextMarkType": "a",
													"TextMarkAHref": "https://blog.csdn.net/Cantevenl/article/details/116722510#k8s_2199",
													"TextMarkTextContent": "网关集群部署到k8s"
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230326223457-kq1sfyj",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230326223457-kq1sfyj"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Kubernetes+Docker+Jenkins持续集成架构图"
				}
			]
		},
		{
			"ID": "20230326223457-mrw4v1v",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230326223457-mrw4v1v"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "在这里插入图片描述"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/20210513133524349-20230326223456-aev2zor.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n "
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "在这里插入图片描述"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/20210513133831115-20230326223456-0ruovte.jpg"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20230326223457-mkjkq5j",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20230326223457-mkjkq5j"
			},
			"Children": [
				{
					"ID": "20230326223457-pou5rcl",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20230326223457-pou5rcl"
					},
					"Children": [
						{
							"ID": "20230326223457-z4w4i0h",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230326223457-z4w4i0h"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "构建K8S集群"
								}
							]
						}
					]
				},
				{
					"ID": "20230326223457-0g0gx5y",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20230326223457-0g0gx5y"
					},
					"Children": [
						{
							"ID": "20230326223457-hgo9o5n",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230326223457-hgo9o5n"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Jenkins调度K8S API"
								}
							]
						}
					]
				},
				{
					"ID": "20230326223457-q01gjki",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "My4=",
						"Num": 3
					},
					"Properties": {
						"id": "20230326223457-q01gjki"
					},
					"Children": [
						{
							"ID": "20230326223457-oz13tvd",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230326223457-oz13tvd"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "动态生成 Jenkins Slave pod"
								}
							]
						}
					]
				},
				{
					"ID": "20230326223457-6zo7n2w",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "NC4=",
						"Num": 4
					},
					"Properties": {
						"id": "20230326223457-6zo7n2w"
					},
					"Children": [
						{
							"ID": "20230326223457-k08478e",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230326223457-k08478e"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Slave pod 拉取 Git 代码／编译／打包镜像"
								}
							]
						}
					]
				},
				{
					"ID": "20230326223457-r3kfcjc",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "NS4=",
						"Num": 5
					},
					"Properties": {
						"id": "20230326223457-r3kfcjc"
					},
					"Children": [
						{
							"ID": "20230326223457-jjhep7t",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230326223457-jjhep7t"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "推送到镜像仓库 Harbor"
								}
							]
						}
					]
				},
				{
					"ID": "20230326223457-qo0h08y",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Ni4=",
						"Num": 6
					},
					"Properties": {
						"id": "20230326223457-qo0h08y"
					},
					"Children": [
						{
							"ID": "20230326223457-7oikuya",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230326223457-7oikuya"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Slave 工作完成，Pod 自动销毁"
								}
							]
						}
					]
				},
				{
					"ID": "20230326223457-vthu943",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Ny4=",
						"Num": 7
					},
					"Properties": {
						"id": "20230326223457-vthu943"
					},
					"Children": [
						{
							"ID": "20230326223457-0m6knwl",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230326223457-0m6knwl"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "部署到测试或生产 Kubernetes平台"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230326223457-9npf6fa",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230326223457-9npf6fa"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Kubernetes+Docker+Jenkins持续集成方案好处"
				}
			]
		},
		{
			"ID": "20230326223457-452dq4s",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20230326223457-452dq4s"
			},
			"Children": [
				{
					"ID": "20230326223457-sqhg20u",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230326223457-sqhg20u"
					},
					"Children": [
						{
							"ID": "20230326223457-ed8t625",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230326223457-ed8t625"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "服务高可用"
								}
							]
						},
						{
							"ID": "20230326223457-nr40cmi",
							"Type": "NodeList",
							"ListData": {},
							"Properties": {
								"id": "20230326223457-nr40cmi"
							},
							"Children": [
								{
									"ID": "20230326223457-oqc2b0i",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20230326223457-oqc2b0i"
									},
									"Children": [
										{
											"ID": "20230326223457-w9dxjqs",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20230326223457-w9dxjqs"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "当 Jenkins Master 出现故障时，Kubernetes 会自动创建一个新的 Jenkins Master容器，并且将 Volume 分配给新创建的容器，保证数据不丢失，从而达到集群服务高可用"
												}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20230326223457-wdv5ln8",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230326223457-wdv5ln8"
					},
					"Children": [
						{
							"ID": "20230326223457-olpwj0k",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230326223457-olpwj0k"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "动态伸缩，合理使用资源"
								}
							]
						},
						{
							"ID": "20230326223457-4fh4vi6",
							"Type": "NodeList",
							"ListData": {},
							"Properties": {
								"id": "20230326223457-4fh4vi6"
							},
							"Children": [
								{
									"ID": "20230326223457-wqyz5r3",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20230326223457-wqyz5r3"
									},
									"Children": [
										{
											"ID": "20230326223457-oepkos3",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20230326223457-oepkos3"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "每次运行 Job 时，会自动创建一个 Jenkins Slave，Job 完成后，Slave自动注销并删除容器，资源自动释放"
												}
											]
										}
									]
								},
								{
									"ID": "20230326223457-cdroi76",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20230326223457-cdroi76"
									},
									"Children": [
										{
											"ID": "20230326223457-vewgr23",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20230326223457-vewgr23"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "而且 Kubernetes 会根据每个资源的使用情况，动态分配Slave 到空闲的节点上创建，降低出现因某节点资源利用率高，还排队等待在该节点的情况。"
												}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20230326223457-jny6fqk",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230326223457-jny6fqk"
					},
					"Children": [
						{
							"ID": "20230326223457-ajv17qi",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230326223457-ajv17qi"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "扩展性好\n当 Kubernetes 集群的资源严重不足而导致 Job 排队等待时，可以很容易的添加一个Kubernetes Node 到集群中，从而实现扩展。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230326223457-s5zx7ke",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230326223457-s5zx7ke"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Kubeadm安装Kubernetes"
				}
			]
		},
		{
			"ID": "20230326223457-34efjru",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230326223457-34efjru"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "K8S详细可以参考："
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "a",
					"TextMarkAHref": "https://blog.csdn.net/Cantevenl/article/details/116481831",
					"TextMarkTextContent": "Kubernetes"
				}
			]
		},
		{
			"ID": "20230326223457-uqgcru8",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230326223457-uqgcru8"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Kubernetes的架构"
				}
			]
		},
		{
			"ID": "20230326223457-oxudlvr",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230326223457-oxudlvr"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "在这里插入图片描述"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/20210513135008860-20230326223457-2nrznge.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20230326223457-tl0ucts",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20230326223457-tl0ucts"
			},
			"Children": [
				{
					"ID": "20230326223457-7ksmvsa",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230326223457-7ksmvsa"
					},
					"Children": [
						{
							"ID": "20230326223457-8las8b4",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230326223457-8las8b4"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "API Server：用于暴露Kubernetes API，任何资源的请求的调用操作都是通过kube-apiserver提供的接口进行的。"
								}
							]
						}
					]
				},
				{
					"ID": "20230326223457-mwz3bks",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230326223457-mwz3bks"
					},
					"Children": [
						{
							"ID": "20230326223457-umnjeg0",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230326223457-umnjeg0"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Etcd：是Kubernetes提供默认的存储系统，保存所有集群数据，使用时需要为etcd数据提供备份计划。"
								}
							]
						}
					]
				},
				{
					"ID": "20230326223457-zuxuy8g",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230326223457-zuxuy8g"
					},
					"Children": [
						{
							"ID": "20230326223457-so61onr",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230326223457-so61onr"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Controller-Manager：作为集群内部的管理控制中心，负责集群内的Node、Pod副本、服务端点（Endpoint）、命名空间（Namespace）、服务账号（ServiceAccount）、资源定额（ResourceQuota）的管理，当某个Node意外宕机时，Controller Manager会及时发现并执行自动化修复流程，确保集群始终处于预期的工作状态。"
								}
							]
						}
					]
				},
				{
					"ID": "20230326223457-xy3f8ve",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230326223457-xy3f8ve"
					},
					"Children": [
						{
							"ID": "20230326223457-ofcl59q",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230326223457-ofcl59q"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Scheduler：监视新创建没有分配到Node的Pod，为Pod选择一个Node。"
								}
							]
						}
					]
				},
				{
					"ID": "20230326223457-ql8w4i9",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230326223457-ql8w4i9"
					},
					"Children": [
						{
							"ID": "20230326223457-0qrjstx",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230326223457-0qrjstx"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Kubelet：负责维护容器的生命周期，同时负责Volume和网络的管理"
								}
							]
						}
					]
				},
				{
					"ID": "20230326223457-ihx7uvs",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230326223457-ihx7uvs"
					},
					"Children": [
						{
							"ID": "20230326223457-b5psute",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230326223457-b5psute"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Kube proxy：是Kubernetes的核心组件，部署在每个Node节点上，它是实现Kubernetes Service的通信与负载均衡机制的重要组件"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230326223457-mhfa8la",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230326223457-mhfa8la"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "安装环境准备"
				}
			]
		},
		{
			"ID": "20230326223457-r0tvl7m",
			"Type": "NodeTable",
			"TableAligns": [
				0,
				0,
				0
			],
			"Properties": {
				"id": "20230326223457-r0tvl7m"
			},
			"Children": [
				{
					"Type": "NodeTableHead",
					"Data": "thead",
					"Children": [
						{
							"Type": "NodeTableRow",
							"Data": "tr",
							"Children": [
								{
									"Type": "NodeTableCell",
									"Data": "th",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "主机"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"Data": "th",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "ip"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"Data": "th",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "安装的软件"
										}
									]
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "k8s-master"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "192.168.188.116"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "kube-apiserver、kube-controller-manager、kube-scheduler、docker、etcd、calico，NFS"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "k8s-node1"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "192.168.188.117"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "kubelet、kubeproxy、Docker"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "k8s-node2"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "192.168.188.118"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "kubelet、kubeproxy、Docker"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "harbor服务器"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "192.168.188.119"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Harbor"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "gitlab服务器"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "192.168.188.120"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Gitlab"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230326223457-60f7mu9",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230326223457-60f7mu9"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "三台k8s服务器都需要完成"
				}
			]
		},
		{
			"ID": "20230326223457-mpbr1aa",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230326223457-mpbr1aa",
				"updated": "20230326224031"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YmFzaA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "关闭防火墙\nsystemctl stop firewalld\nsystemctl disable firewalld\n\n关闭selinux\n# 临时关闭\nsetenforce 0\n# 永久关闭\nsed -i 's/enforcing/disabled/' /etc/selinux/config  \n  \n关闭swap\n# 临时\nswapoff -a \n# 永久关闭\nsed -ri 's/.*swap.*/#\u0026/' /etc/fstab\n\n# 根据规划设置主机名【master节点上操作】\nhostnamectl set-hostname master\n# 根据规划设置主机名【node1节点操作】\nhostnamectl set-hostname node1\n# 根据规划设置主机名【node2节点操作】\nhostnamectl set-hostname node2\n\n添加ip到hosts\ncat \u003e\u003e /etc/hosts \u003c\u003c EOF\n192.168.188.116 master\n192.168.188.117 node1\n192.168.188.118 node2\nEOF\n\n设置系统参数\n设置允许路由转发，不对bridge的数据进行处理\ncat \u003e /etc/sysctl.d/k8s.conf \u003c\u003c EOF\nnet.bridge.bridge-nf-call-ip6tables = 1\nnet.bridge.bridge-nf-call-iptables = 1\nnet.ipv4.ip_forward = 1\nvm.swappiness = 0\nEOF\n\n执行文件\nsysctl -p /etc/sysctl.d/k8s.conf\n\nkube-proxy开启ipvs的前置条件\n\ncat \u003e /etc/sysconfig/modules/ipvs.modules \u003c\u003cEOF \n#!/bin/bash \nmodprobe -- ip_vs \nmodprobe -- ip_vs_rr \nmodprobe -- ip_vs_wrr \nmodprobe -- ip_vs_sh \nmodprobe -- nf_conntrack_ipv4 \nEOF\n\nchmod 755 /etc/sysconfig/modules/ipvs.modules \u0026\u0026 bash \n\n/etc/sysconfig/modules/ipvs.modules \u0026\u0026 lsmod | grep -e ip_vs -e nf_conntrack_ipv4\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230326223457-jnzsfdx",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230326223457-jnzsfdx"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "安装Docker、kubelet、kubeadm、kubectl"
				}
			]
		},
		{
			"ID": "20230326223457-5iou92i",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230326223457-5iou92i"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "所有节点安装Docker、kubeadm、kubelet， =Kubernetes默认CRI（容器运行时）为Docker= ，因此先安装Docker"
				}
			]
		},
		{
			"ID": "20230326223457-2nd8f7d",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230326223457-2nd8f7d"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "安装Docker"
				}
			]
		},
		{
			"ID": "20230326223457-cdhn306",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230326223457-cdhn306",
				"updated": "20230326224027"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YmFzaA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "首先配置一下Docker的阿里yum源\n安装需要的安装包\nyum install -y yum-utils\n\n设置镜像仓库\n我们用阿里云\n\nyum-config-manager \\\n    --add-repo \\\n    http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo\n\n更新yum软件包索引\nyum makecache fast\n\n安装docker\tdocker-ce 社区\nyum -y install docker-ce\n\n查看版本\ndocker version\n\n设置开机启动\nsystemctl enable docker --now\n\n配置docker的镜像源\nmkdir -p /etc/docker\n\n这个是我自己阿里云的加速 每个人都不一样 可以去阿里云官方查看\n\ntee /etc/docker/daemon.json \u003c\u003c-EOF\n {\n   \"registry-mirrors\": [\"https://m0rsqupc.mirror.aliyuncs.com\"]\n }\nEOF\n\n验证\n[root@master ~]# cat /etc/docker/daemon.json \n { \n   \"registry-mirrors\": [\"https://m0rsqupc.mirror.aliyuncs.com\"]\n }\n\n然后重启docker\nsystemctl restart docker\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230326223457-b69shdy",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230326223457-b69shdy"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "安装kubelet、kubeadm、kubectl"
				}
			]
		},
		{
			"ID": "20230326223457-eyb4rjg",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20230326223457-eyb4rjg"
			},
			"Children": [
				{
					"ID": "20230326223457-hlx9l7q",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230326223457-hlx9l7q"
					},
					"Children": [
						{
							"ID": "20230326223457-wcy6tyt",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230326223457-wcy6tyt"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "kubeadm: 用来初始化集群的指令"
								}
							]
						}
					]
				},
				{
					"ID": "20230326223457-d68rsfl",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230326223457-d68rsfl"
					},
					"Children": [
						{
							"ID": "20230326223457-v1ynnk7",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230326223457-v1ynnk7"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "kubelet: 在集群中的每个节点上用来启动 pod 和 container 等"
								}
							]
						}
					]
				},
				{
					"ID": "20230326223457-s1p84yb",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230326223457-s1p84yb"
					},
					"Children": [
						{
							"ID": "20230326223457-8ropkrb",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230326223457-8ropkrb"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "kubectl: 用来与集群通信的命令行工具"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230326223457-wkhfmxr",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230326223457-wkhfmxr",
				"updated": "20230326224023"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YmFzaA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "添加kubernetes软件源\n\ncat \u003e /etc/yum.repos.d/kubernetes.repo \u003c\u003c EOF\n[kubernetes]\nname=Kubernetes\nbaseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64\nenabled=1\ngpgcheck=0\nrepo_gpgcheck=0\ngpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg\nEOF\n\n安装kubelet、kubeadm、kubectl，同时指定版本\n\nyum install -y kubelet-1.18.0 kubeadm-1.18.0 kubectl-1.18.0\n\nsystemctl enable kubelet --now\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230326223457-0ckjwva",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230326223457-0ckjwva"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "部署Kubernetes Master（master节点）"
				}
			]
		},
		{
			"ID": "20230326223457-fohrxkv",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230326223457-fohrxkv",
				"updated": "20230326224020"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YmFzaA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "kubeadm init --kubernetes-version=1.18.0 --apiserver-advertise-address=192.168.188.116 --image-repository registry.aliyuncs.com/google_containers --kubernetes-version v1.18.0 --service-cidr=10.96.0.0/12  --pod-network-cidr=10.244.0.0/16\n\n由于默认拉取镜像地址k8s.gcr.io国内无法访问，这里指定阿里云镜像仓库地址，（执行上述命令会比较慢，因为后台其实已经在拉取镜像了）\n我们 docker images 命令即可查看已经拉取的镜像\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230326223457-lksxbae",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230326223457-lksxbae"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "在这里插入图片描述"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/2021051314451824-20230326223457-3bvld6c.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20230326223457-75uva09",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230326223457-75uva09"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "表示kubernetes的镜像已经安装成功\n 红色圈出来的部分 是下面=加入从节点=需要使用的命令"
				}
			]
		},
		{
			"ID": "20230326223457-t6ty850",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230326223457-t6ty850",
				"updated": "20230326224011"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YmFzaA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "kubeadm join 192.168.188.116:6443 --token ic49lg.zuwab84r0zfs6bbr \\\n    --discovery-token-ca-cert-hash sha256:270285cba2080b1e291a3a2b3b21730616b59c95c55ca6f950fecf7b68869b97\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230326223457-ohblbzh",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230326223457-ohblbzh",
				"updated": "20230326224007"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YmFzaA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "使用kubectl工具\nmkdir -p $HOME/.kube\n\ncp -i /etc/kubernetes/admin.conf $HOME/.kube/config\n\nchown $(id -u):$(id -g) $HOME/.kube/config\n\n查看运行的节点\nkubectl get nodes\n\n目前有一个master节点已经运行了，但是还处于未准备状态\n\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230326223457-2nrmmcp",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230326223457-2nrmmcp"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "安装Calico"
				},
				{
					"Type": "NodeText",
					"Data": "\n Calico是一个网络组件，作用是实现master和子节点实现网络通讯功能"
				}
			]
		},
		{
			"ID": "20230326223457-mhz3zxb",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230326223457-mhz3zxb",
				"updated": "20230326224004"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YmFzaA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "mkdir k8s \ncd k8s \n\nwget https://docs.projectcalico.org/v3.10/getting-started/kubernetes/installation/hosted/kubernetes-datastore/calico-networking/1.7/calico.yaml\n\nsed -i 's/192.168.0.0/10.244.0.0/g' calico.yaml \n\n安装calico的组件\nkubectl apply -f calico.yaml\n\n查看pod\nkubectl get pod --all-namespaces\n必须是全部READY 状态必须是Running\n\n查看更详细的信息\nkubectl get pod --all-namespaces -o wide\n\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230326223457-n2dbbc3",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230326223457-n2dbbc3"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "在这里插入图片描述"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/20210513145601986-20230326223457-sc61e9r.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20230326223457-bi6s6bw",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230326223457-bi6s6bw"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "加入Kubernetes Node（Slave节点）"
				}
			]
		},
		{
			"ID": "20230326223457-cf1jmkn",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230326223457-cf1jmkn"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "需要到 node1 和 node2服务器，向集群添加新节点"
				}
			]
		},
		{
			"ID": "20230326223457-2gr20ty",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230326223457-2gr20ty"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "执行在kubeadm init输出的kubeadm join命令"
				}
			]
		},
		{
			"ID": "20230326223457-y32lzga",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230326223457-y32lzga"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "以下的命令是在master初始化完成后，每个人的 =都不一样= ！！！需要复制自己生成的"
				}
			]
		},
		{
			"ID": "20230326223457-ypj9ek1",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230326223457-ypj9ek1",
				"updated": "20230326224001"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YmFzaA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "kubeadm join 192.168.188.116:6443 --token ic49lg.zuwab84r0zfs6bbr \\\n    --discovery-token-ca-cert-hash sha256:270285cba2080b1e291a3a2b3b21730616b59c95c55ca6f950fecf7b68869b97\n\n查看kubelet是否开启\nsystemctl status kubelet\n\n然后查看node信息\nkubectl get nodes\n\n[root@master k8s]# kubectl get nodes\nNAME     STATUS   ROLES    AGE     VERSION\nmaster   Ready    master   17m     v1.18.0\nnode1    Ready    \u003cnone\u003e   2m27s   v1.18.0\nnode2    Ready    \u003cnone\u003e   2m25s   v1.18.0\n\n如果Status全部为Ready，代表集群环境搭建成功\n\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230326223457-eszfz95",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230326223457-eszfz95"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "kubectl常用命令"
				}
			]
		},
		{
			"ID": "20230326223457-2k3rjtl",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230326223457-2k3rjtl",
				"updated": "20230326223959"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YmFzaA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "kubectl get nodes 查看所有主从节点的状态 \nkubectl get ns 获取所有namespace资源 \nkubectl get pods -n { $nameSpace} 获取指定namespace的pod \nkubectl describe pod的名称 -n { $nameSpace} 查看某个pod的执行过程 \nkubectl logs --tail=1000 pod的名称 | less 查看日志 \nkubectl create -f xxx.yml 通过配置文件创建一个集群资源对象 \nkubectl delete -f xxx.yml 通过配置文件删除一个集群资源对象 \nkubectl delete pod名称 -n { $nameSpace} 通过pod删除集群资源 \nkubectl get service -n { $nameSpace} 查看pod的service情况\n\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230326223457-abh9o28",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230326223457-abh9o28"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "基于Kubernetes构建Jenkins持续集成平台"
				}
			]
		},
		{
			"ID": "20230326223457-knspkim",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20230326223457-knspkim"
			},
			"Children": [
				{
					"ID": "20230326223457-hyj74uh",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230326223457-hyj74uh"
					},
					"Children": [
						{
							"ID": "20230326223457-ufe18pg",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230326223457-ufe18pg"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "在K8S的基础上创建一个Jenkins主节点"
								}
							]
						}
					]
				},
				{
					"ID": "20230326223457-rcvglaj",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230326223457-rcvglaj"
					},
					"Children": [
						{
							"ID": "20230326223457-xt1snpa",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230326223457-xt1snpa"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "在K8S上再创建Jenkins的从节点，来帮助我们进行项目的构建"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230326223457-g9fey8h",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230326223457-g9fey8h"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "安装和配置NFS"
				}
			]
		},
		{
			"ID": "20230326223457-1ahb5kl",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230326223457-1ahb5kl"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "NFS（Network File System），它最大的功能就是可以通过网络，让不同的机器、不同的操作系统可以共享彼此的文件。我们可以利用NFS共享 =Jenkins运行的配置文件= 、=Maven的仓库依赖文件=等"
				}
			]
		},
		{
			"ID": "20230326223457-a0mcsl6",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230326223457-a0mcsl6"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "我们把NFS服务器安装在K8S主节点上"
				}
			]
		},
		{
			"ID": "20230326223457-ookikib",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230326223457-ookikib",
				"updated": "20230326223956"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YmFzaA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "安装NFS服务（这个需要在所有K8S的节点上安装）\nyum install -y nfs-utils\n\n创建共享目录（这个只需要在master节点）\nmkdir -p /opt/nfs/jenkins\n编写NFS的共享配置\nvim /etc/exports \n\n/opt/nfs/jenkins\t*(rw,no_root_squash) \n\n*代表对所有IP都开放此目录，rw是读写，no_root_squash不压制root权限\n\n启动服务\nsystemctl enable nfs --now\n\n查看NFS共享目录\nshowmount -e 192.168.188.116\n\n[root@node1 ~]# showmount -e 192.168.188.116\nExport list for 192.168.188.116:\n/opt/nfs/jenkins *\n\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230326223457-c0tb07d",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230326223457-c0tb07d"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在Kubernetes安装Jenkins-Master"
				}
			]
		},
		{
			"ID": "20230326223457-i8f0foo",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230326223457-i8f0foo"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "创建NFS client provisioner"
				}
			]
		},
		{
			"ID": "20230326223457-aejw87h",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230326223457-aejw87h"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "nfs-client-provisioner 是一个Kubernetes的简易NFS的外部provisioner，本身不提供NFS，需要现有的NFS服务器提供存储"
				}
			]
		},
		{
			"ID": "20230326223457-8oozvrr",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230326223457-8oozvrr"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "需要编写yaml了"
				}
			]
		},
		{
			"ID": "20230326223457-yxle777",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20230326223457-yxle777"
			},
			"Children": [
				{
					"ID": "20230326223457-q392g9r",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230326223457-q392g9r"
					},
					"Children": [
						{
							"ID": "20230326223457-nikjfey",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230326223457-nikjfey"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "StorageClass.yaml"
								}
							]
						}
					]
				},
				{
					"ID": "20230326223457-mkpn9dh",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230326223457-mkpn9dh"
					},
					"Children": [
						{
							"ID": "20230326223457-u3fby0k",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230326223457-u3fby0k"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "持久化存储Storageclass"
								}
							]
						}
					]
				},
				{
					"ID": "20230326223457-p4l0ofa",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230326223457-p4l0ofa"
					},
					"Children": [
						{
							"ID": "20230326223457-wydkbc8",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230326223457-wydkbc8"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "kubectl explain StorageClass"
								},
								{
									"Type": "NodeText",
									"Data": "查看kind和version"
								}
							]
						}
					]
				},
				{
					"ID": "20230326223457-6lp90mk",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230326223457-6lp90mk"
					},
					"Children": [
						{
							"ID": "20230326223457-sbr4npf",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230326223457-sbr4npf"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "定义名称为"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "managed-nfs-storage"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230326223457-obj8ezm",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230326223457-obj8ezm",
				"updated": "20230326223954"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "eWFtbA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "apiVersion: storage.k8s.io/v1\nkind: StorageClass\nmetadata:\n  name: managed-nfs-storage\nprovisioner: fuseim.pri/ifs # or choose another name, must match deployment's env PROVISIONER_NAME'\nparameters:\n  archiveOnDelete: \"true\"\n\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230326223457-wnf5qo2",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20230326223457-wnf5qo2"
			},
			"Children": [
				{
					"ID": "20230326223457-et15o25",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230326223457-et15o25"
					},
					"Children": [
						{
							"ID": "20230326223457-mfo6x9r",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230326223457-mfo6x9r"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "deployment.yaml"
								}
							]
						}
					]
				},
				{
					"ID": "20230326223457-tosrsgk",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230326223457-tosrsgk"
					},
					"Children": [
						{
							"ID": "20230326223457-t58tptj",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230326223457-t58tptj"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "部署NFS client provisioner"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230326223457-u0j8jcc",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230326223457-u0j8jcc",
				"updated": "20230326223951"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "eWFtbA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "apiVersion: storage.k8s.io/v1\nkind: ServiceAccount\nmetadata:\n  name: nfs-client-provisioner\n---\nkind: Deployment\napiVersion: apps/v1\nmetadata:\n  name: nfs-client-provisioner\nspec:\n  replicas: 1\n  strategy:\n    type: Recreate\n  selector:\n    matchLabels:\n      app: nfs-client-provisioner\n  template:\n    metadata:\n      labels:\n        app: nfs-client-provisioner\n    spec:\n      serviceAccountName: nfs-client-provisioner\n      containers:\n        - name: nfs-client-provisioner\n          image: lizhenliang/nfs-client-provisioner:latest\n          volumeMounts:\n            - name: nfs-client-root\n              mountPath: /persistentvolumes\n          env:\n            - name: PROVISIONER_NAME\n              value: fuseim.pri/ifs\n            - name: NFS_SERVER\n              value: 192.168.188.116\n            - name: NFS_PATH\n              value: /opt/nfs/jenkins/\n      volumes:\n        - name: nfs-client-root\n          nfs:\n            server: 192.168.188.116\n            path: /opt/nfs/jenkins/\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230326223457-d2tqbmr",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230326223457-d2tqbmr"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "最后是一个权限文件rbac.yaml"
				}
			]
		},
		{
			"ID": "20230326223457-pwgmpj3",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230326223457-pwgmpj3",
				"updated": "20230326223947"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "eWFtbA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "kind: ServiceAccount\napiVersion: v1\nmetadata:\n  name: nfs-client-provisioner\n---\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io/v1\nmetadata:\n  name: nfs-client-provisioner-runner\nrules:\n  - apiGroups: [\"\"]\n    resources: [\"persistentvolumes\"]\n    verbs: [\"get\", \"list\", \"watch\", \"create\", \"delete\"]\n  - apiGroups: [\"\"]\n    resources: [\"persistentvolumeclaims\"]\n    verbs: [\"get\", \"list\", \"watch\", \"update\"]\n  - apiGroups: [\"storage.k8s.io\"]\n    resources: [\"storageclasses\"]\n    verbs: [\"get\", \"list\", \"watch\"]\n  - apiGroups: [\"\"]\n    resources: [\"events\"]\n    verbs: [\"create\", \"update\", \"patch\"]\n---\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io/v1\nmetadata:\n  name: run-nfs-client-provisioner\nsubjects:\n  - kind: ServiceAccount\n    name: nfs-client-provisioner\n    namespace: default\nroleRef:\n  kind: ClusterRole\n  name: nfs-client-provisioner-runner\n  apiGroup: rbac.authorization.k8s.io\n---\nkind: Role\napiVersion: rbac.authorization.k8s.io/v1\nmetadata:\n  name: leader-locking-nfs-client-provisioner\nrules:\n  - apiGroups: [\"\"]\n    resources: [\"endpoints\"]\n    verbs: [\"get\", \"list\", \"watch\", \"create\", \"update\", \"patch\"]\n---\nkind: RoleBinding\napiVersion: rbac.authorization.k8s.io/v1\nmetadata:\n  name: leader-locking-nfs-client-provisioner\nsubjects:\n  - kind: ServiceAccount\n    name: nfs-client-provisioner\n    # replace with namespace where provisioner is deployed\n    namespace: default\nroleRef:\n  kind: Role\n  name: leader-locking-nfs-client-provisioner\n  apiGroup: rbac.authorization.k8s.io\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230326223457-66wu1la",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230326223457-66wu1la"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "构建pod"
				}
			]
		},
		{
			"ID": "20230326223457-kxw840u",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230326223457-kxw840u",
				"updated": "20230326223943"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YmFzaA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "将三个文件都写在同一个目录里面\nkubectl create -f .\n\n[root@master nfs-client]# kubectl create -f .\nstorageclass.storage.k8s.io/managed-nfs-storage created\nserviceaccount/nfs-client-provisioner created\ndeployment.apps/nfs-client-provisioner created\nclusterrole.rbac.authorization.k8s.io/nfs-client-provisioner-runner created\nclusterrolebinding.rbac.authorization.k8s.io/run-nfs-client-provisioner created\nrole.rbac.authorization.k8s.io/leader-locking-nfs-client-provisioner created\nrolebinding.rbac.authorization.k8s.io/leader-locking-nfs-client-provisioner created\nError from server (AlreadyExists): error when creating \"rbac.yaml\": serviceaccounts \"nfs-client-provisioner\" already exists\n\n查看pod\nkubectl get pod\n\n[root@master nfs-client]# kubectl get pod\nNAME                                      READY   STATUS    RESTARTS   AGE\nnfs-client-provisioner-795b4df87d-zchrq   1/1     Running   0          2m4s\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230326223457-e3gk0t6",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230326223457-e3gk0t6"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "安装Jenkins-Master"
				}
			]
		},
		{
			"ID": "20230326223457-w1fqtyb",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230326223457-w1fqtyb"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "还是需要我们自己写Jenkins的Yaml文件"
				}
			]
		},
		{
			"ID": "20230326223457-d87wk5s",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20230326223457-d87wk5s"
			},
			"Children": [
				{
					"ID": "20230326223457-2s992ww",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230326223457-2s992ww"
					},
					"Children": [
						{
							"ID": "20230326223457-4hgstzc",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230326223457-4hgstzc"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "rbac.yaml"
								}
							]
						}
					]
				},
				{
					"ID": "20230326223457-x03h39g",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230326223457-x03h39g"
					},
					"Children": [
						{
							"ID": "20230326223457-0xuetb0",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230326223457-0xuetb0"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "和权限有关的信息，把jenkins主节点的一些权限加入到k8s的管理下"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230326223457-fcdwfnt",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230326223457-fcdwfnt",
				"updated": "20230326223939"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "eWFtbA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "kind: Role\napiVersion: rbac.authorization.k8s.io/v1beta1\nmetadata:\n  name: jenkins\n  namespace: kube-ops\nrules:\n  - apiGroups: [\"extensions\", \"apps\"]\n    resources: [\"deployments\"]\n    verbs: [\"create\", \"delete\", \"get\", \"list\", \"watch\", \"patch\", \"update\"]\n  - apiGroups: [\"\"]\n    resources: [\"services\"]\n    verbs: [\"create\", \"delete\", \"get\", \"list\", \"watch\", \"patch\", \"update\"]\n  - apiGroups: [\"\"]\n    resources: [\"pods\"]\n    verbs: [\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"]\n  - apiGroups: [\"\"]\n    resources: [\"pods/exec\"]\n    verbs: [\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"]\n  - apiGroups: [\"\"]\n    resources: [\"pods/log\"]\n    verbs: [\"get\",\"list\",\"watch\"]\n  - apiGroups: [\"\"]\n    resources: [\"secrets\"]\n    verbs: [\"get\"]\n\n---\napiVersion: rbac.authorization.k8s.io/v1beta1\nkind: RoleBinding\nmetadata:\n  name: jenkins\n  namespace: kube-ops\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: Role\n  name: jenkins\nsubjects:\n  - kind: ServiceAccount\n    name: jenkins\n    namespace: kube-ops\n  \n---\n\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io/v1beta1\nmetadata:\n  name: jenkinsClusterRole\n  namespace: kube-ops\nrules:\n- apiGroups: [\"\"]\n  resources: [\"pods\"]\n  verbs: [\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"]\n- apiGroups: [\"\"]\n  resources: [\"pods/exec\"]\n  verbs: [\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"]\n- apiGroups: [\"\"]\n  resources: [\"pods/log\"]\n  verbs: [\"get\",\"list\",\"watch\"]\n- apiGroups: [\"\"]\n  resources: [\"secrets\"]\n  verbs: [\"get\"]\n \n---\napiVersion: rbac.authorization.k8s.io/v1beta1\nkind: RoleBinding\nmetadata:\n  name: jenkinsClusterRuleBinding\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: jenkinsClusterRole\nsubjects:\n- kind: ServiceAccount\n  name: jenkins\n  namespace: kube-ops\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230326223457-qt4qr0m",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20230326223457-qt4qr0m"
			},
			"Children": [
				{
					"ID": "20230326223457-t5coufd",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230326223457-t5coufd"
					},
					"Children": [
						{
							"ID": "20230326223457-0jhwmi1",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230326223457-0jhwmi1"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "ServiceaAcount.yaml"
								}
							]
						}
					]
				},
				{
					"ID": "20230326223457-zbgpbze",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230326223457-zbgpbze"
					},
					"Children": [
						{
							"ID": "20230326223457-arbr1ka",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230326223457-arbr1ka"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "jenkins主节点的一些ServiceaAcount信息"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230326223457-utfobv3",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230326223457-utfobv3",
				"updated": "20230326223936"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "eWFtbA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: jenkins\n  namespace: kube-ops\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230326223457-eawvvec",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20230326223457-eawvvec"
			},
			"Children": [
				{
					"ID": "20230326223457-6md6d4e",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230326223457-6md6d4e"
					},
					"Children": [
						{
							"ID": "20230326223457-mwvpiuo",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230326223457-mwvpiuo"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "StatefulSet.yaml"
								}
							]
						}
					]
				},
				{
					"ID": "20230326223457-8ogs3lc",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230326223457-8ogs3lc"
					},
					"Children": [
						{
							"ID": "20230326223457-g300f62",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230326223457-g300f62"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "是一个有状态应用，里面就定义了之前NFS的信息"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230326223457-kizlc48",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230326223457-kizlc48",
				"updated": "20230326223928"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "eWFtbA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "apiVersion: apps/v1\nkind: StatefulSet\nmetadata:\n  name: jenkins\n  labels:\n    name: jenkins\n  namespace: kube-ops\nspec:\n  serviceName: jenkins\n  selector:\n    matchLabels:\n      app: jenkins\n  replicas: 1\n  updateStrategy:\n    type: RollingUpdate\n  template:\n    metadata:\n      name: jenkins\n      labels:\n        app: jenkins\n    spec:\n      terminationGracePeriodSeconds: 10\n      serviceAccountName: jenkins\n      containers:\n        - name: jenkins\n          image: jenkins/jenkins:lts-alpine\n          imagePullPolicy: IfNotPresent\n          ports:\n          - containerPort: 8080\n            name: web\n            protocol: TCP\n          - containerPort: 50000\n            name: agent\n            protocol: TCP\n          resources:\n            limits:\n              cpu: 1\n              memory: 1Gi\n            requests:\n              cpu: 0.5\n              memory: 500Mi\n          env:\n            - name: LIMITS_MEMORY\n              valueFrom:\n                resourceFieldRef:\n                  resource: limits.memory\n                  divisor: 1Mi\n            - name: JAVA_OPTS\n              value: -Xmx$(LIMITS_MEMORY)m -XshowSettings:vm -Dhudson.slaves.NodeProvisioner.initialDelay=0 -Dhudson.slaves.NodeProvisioner.MARGIN=50 -Dhudson.slaves.NodeProvisioner.MARGIN0=0.85\n          volumeMounts:\n            - name: jenkins-home\n              mountPath: /var/jenkins_home\n          livenessProbe:\n            httpGet:\n              path: /login\n              port: 8080\n            initialDelaySeconds: 60\n            timeoutSeconds: 5\n            failureThreshold: 12\n          readinessProbe:\n            httpGet:\n              path: /login\n              port: 8080\n            initialDelaySeconds: 60\n            timeoutSeconds: 5\n            failureThreshold: 12\n      securityContext:\n        fsGroup: 1000\n  volumeClaimTemplates:\n  - metadata:\n      name: jenkins-home\n    spec:\n      storageClassName: \"managed-nfs-storage\"\n      accessModes: [ \"ReadWriteOnce\" ]\n      resources:\n        requests:\n          storage: 1Gi\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230326223457-4a153ce",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20230326223457-4a153ce"
			},
			"Children": [
				{
					"ID": "20230326223457-51liazf",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230326223457-51liazf"
					},
					"Children": [
						{
							"ID": "20230326223457-pin7ijm",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230326223457-pin7ijm"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Service.yaml"
								}
							]
						}
					]
				},
				{
					"ID": "20230326223457-tjsqy73",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230326223457-tjsqy73"
					},
					"Children": [
						{
							"ID": "20230326223457-43m0k3v",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230326223457-43m0k3v"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "对外暴露一些端口"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230326223457-bkaw7a1",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230326223457-bkaw7a1",
				"updated": "20230326223925"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "eWFtbA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "apiVersion: v1\nkind: Service\nmetadata:\n  name: jenkins\n  namespace: kube-ops\n  labels:\n    app: jenkins\nspec:\n  selector:\n    app: jenkins\n  type: NodePort\n  ports:\n  - name: web\n    port: 8080\n    targetPort: web\n  - name: agent\n    port: 50000\n    targetPort: agent\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230326223457-nwekfkv",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230326223457-nwekfkv",
				"updated": "20230326223920"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YmFzaA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "cd jenkins-master/\n[root@master jenkins-master]# ls\nrbac.yaml  ServiceaAcount.yaml  Service.yaml  StatefulSet.yaml\n\n创建一个新的命名空间\nkubectl create namespace kube-ops \n\n创建jenkins主节点的pod\nkubectl create -f .\n\n\n[root@master jenkins-master]# kubectl create namespace kube-ops\nnamespace/kube-ops created\n[root@master jenkins-master]# kubectl create -f .\nservice/jenkins created\nserviceaccount/jenkins created\nstatefulset.apps/jenkins created\nrole.rbac.authorization.k8s.io/jenkins created\nrolebinding.rbac.authorization.k8s.io/jenkins created\nclusterrole.rbac.authorization.k8s.io/jenkinsClusterRole created\nrolebinding.rbac.authorization.k8s.io/jenkinsClusterRuleBinding created\n\n我们可以通过很多个命令来查看pod和service的信息\n查看的时候需要加上我们自己的命名空间\nkubectl get pod --namespace kube-ops\n\n[root@master jenkins-master]# kubectl get pod --namespace kube-ops\nNAME        READY   STATUS    RESTARTS   AGE\njenkins-0   1/1     Running   0          7m38s\n\n查看服务的信息\nkubectl get service --namespace kube-ops\n\n[root@master jenkins-master]# kubectl get service --namespace kube-ops\nNAME      TYPE       CLUSTER-IP       EXTERNAL-IP   PORT(S)                          AGE\njenkins   NodePort   10.101.126.122   \u003cnone\u003e        8080:30942/TCP,50000:31796/TCP   8m2s\n\n-o wide查看更详细的信息\nkubectl get service --namespace kube-ops -o wide\n\n[root@master jenkins-master]# kubectl get service --namespace kube-ops -o wide\nNAME      TYPE       CLUSTER-IP       EXTERNAL-IP   PORT(S)                          AGE     SELECTOR\njenkins   NodePort   10.101.126.122   \u003cnone\u003e        8080:30942/TCP,50000:31796/TCP   8m20s   app=jenkins\n\n查看pod更详细的信息\nkubectl get pod --namespace kube-ops -o wide\n\n[root@master jenkins-master]# kubectl get pod --namespace kube-ops -o wide\nNAME        READY   STATUS    RESTARTS   AGE     IP               NODE    NOMINATED NODE   READINESS GATES\njenkins-0   1/1     Running   0          8m48s   10.244.166.129   node1   \u003cnone\u003e           \u003cnone\u003e\n\n通过详细信息发现，我们的jenkins是部署在node1节点上\n我们可以通过浏览器访问\nnode1的ip+端口\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230326223457-crjs0ki",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230326223457-crjs0ki"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "在这里插入图片描述"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/20210513163155117-20230326223456-atem1kd.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n 这里需要解锁jenkins，我们需要去jenkins的共享目录，NFS下寻找"
				}
			]
		},
		{
			"ID": "20230326223457-ecy85c5",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230326223457-ecy85c5",
				"updated": "20230326223917"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YmFzaA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "nfs目录在/opt/nfs\n[root@master jenkins-master]# cd /opt//nfs/\n[root@master nfs]# ls\njenkins\n[root@master nfs]# cd jenkins/\n[root@master jenkins]# ll\ntotal 4\ndrwxrwxrwx 13 root root 4096 May 13 16:26 kube-ops-jenkins-home-jenkins-0-pvc-0d59af09-0339-46eb-a6a0-550c40365efb\n\n这个就是jenkins的运行目录\n[root@master jenkins]# cd kube-ops-jenkins-home-jenkins-0-pvc-0d59af09-0339-46eb-a6a0-550c40365efb/\n[root@master kube-ops-jenkins-home-jenkins-0-pvc-0d59af09-0339-46eb-a6a0-550c40365efb]# ls\nconfig.xml                     jenkins.telemetry.Correlator.xml  nodes                     secrets      war\ncopy_reference_file.log        jobs                              plugins                   updates\nhudson.model.UpdateCenter.xml  logs                              secret.key                userContent\nidentity.key.enc               nodeMonitors.xml                  secret.key.not-so-secret  users\n[root@master kube-ops-jenkins-home-jenkins-0-pvc-0d59af09-0339-46eb-a6a0-550c40365efb]# cat secrets/initialAdminPassword \n5496a0ee3afd449fb65c709d6d721c5d\n\n这个就是管理员密码 将其复制到浏览器解锁jenkins\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230326223457-glit179",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230326223457-glit179"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "跳过插件安装，我们一会儿修改下载源之后再安装插件\n "
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "在这里插入图片描述"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/20210513163943115-20230326223456-1ywtn3b.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n 选择无\n "
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "在这里插入图片描述"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/20210513164020108-20230326223456-lu9cgj1.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n 创建用户\n "
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "在这里插入图片描述"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/20210513164055387-20230326223456-grv6433.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n "
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "在这里插入图片描述"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/20210513164108561-20230326223457-quf521l.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n "
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "在这里插入图片描述"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/20210513164114375-20230326223456-9a8j2i4.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n Jenkins在k8s的环境下运行成功"
				}
			]
		},
		{
			"ID": "20230326223457-5rw0d2s",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230326223457-5rw0d2s"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Jenkins插件管理"
				}
			]
		},
		{
			"ID": "20230326223457-vhbip6s",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230326223457-vhbip6s"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Jenkins国外官方插件地址下载速度非常慢，所以可以修改为国内插件地址\n Jenkins-\u003eManage Jenkins-\u003eManage Plugins，点击Available\n "
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "在这里插入图片描述"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/2021051316441718-20230326223456-0x8l7cs.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n 这样做是为了把Jenkins官方的插件列表下载到本地，接着修改地址文件，替换为国内插件地址"
				}
			]
		},
		{
			"ID": "20230326223457-yoriuq3",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230326223457-yoriuq3",
				"updated": "20230326223909"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YmFzaA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "[root@master kube-ops-jenkins-home-jenkins-0-pvc-0d59af09-0339-46eb-a6a0-550c40365efb]# pwd\n/opt/nfs/jenkins/kube-ops-jenkins-home-jenkins-0-pvc-0d59af09-0339-46eb-a6a0-550c40365efb\n[root@master kube-ops-jenkins-home-jenkins-0-pvc-0d59af09-0339-46eb-a6a0-550c40365efb]# cd updates/\n[root@master updates]# ls\ndefault.json  hudson.tasks.Maven.MavenInstaller\n\ndefault.json就是插件下载地址\n我们修改插件下载地址\n\nsed -i 's/http:\\/\\/updates.jenkins-ci.org\\/download/https:\\/\\/mirrors.tuna.tsinghua.edu.cn\\/jenkins/g' default.json \u0026\u0026 sed -i 's/http:\\/\\/www.google.com/https:\\/\\/www.baidu.com/g' default.json\n\nsed -i 's/http:\\/\\/updates.jenkins-ci.org\\/download/https:\\/\\/mirrors.tuna.tsinghua.edu.cn\\/jenkins/g'default.json \u0026\u0026 sed -i 's/http:\\/\\/www.google.com/https:\\/\\/www.baidu.com/g' default.json\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230326223457-ev0w28j",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230326223457-ev0w28j"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "最后，Manage Plugins点击Advanced，把Update Site改为国内插件下载地址"
				}
			]
		},
		{
			"ID": "20230326223457-gs5q6ds",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20230326223457-gs5q6ds"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20230326223457-6ut4gf5",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20230326223457-6ut4gf5"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "https://mirrors.tuna.tsinghua.edu.cn/jenkins/updates/update-center.json"
						}
					]
				}
			]
		},
		{
			"ID": "20230326223457-fqpk825",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230326223457-fqpk825"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "在这里插入图片描述"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/2021051316464672-20230326223456-kc9nx75.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n 在浏览器ip后面/restart 然后重启jenkins\n "
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "在这里插入图片描述"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/20210513164815855-20230326223456-ktq75at.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n "
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "在这里插入图片描述"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/20210513164825484-20230326223456-7b4t2bl.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n 安装基本插件"
				}
			]
		},
		{
			"ID": "20230326223457-ql93qrb",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20230326223457-ql93qrb"
			},
			"Children": [
				{
					"ID": "20230326223457-1jr3z4y",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230326223457-1jr3z4y"
					},
					"Children": [
						{
							"ID": "20230326223457-ju38zbt",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230326223457-ju38zbt"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Chinese"
								}
							]
						}
					]
				},
				{
					"ID": "20230326223457-7dcp0oe",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230326223457-7dcp0oe"
					},
					"Children": [
						{
							"ID": "20230326223457-hodw758",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230326223457-hodw758"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Git"
								}
							]
						}
					]
				},
				{
					"ID": "20230326223457-pzrng1x",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230326223457-pzrng1x"
					},
					"Children": [
						{
							"ID": "20230326223457-50fka5h",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230326223457-50fka5h"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Pipeline"
								}
							]
						}
					]
				},
				{
					"ID": "20230326223457-61qdjqk",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230326223457-61qdjqk"
					},
					"Children": [
						{
							"ID": "20230326223457-e2ltolz",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230326223457-e2ltolz"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Extended Choice Parameter"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230326223457-vhroz26",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230326223457-vhroz26"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "等待安装\n "
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "在这里插入图片描述"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/20210513170429826-20230326223457-jpracuo.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20230326223457-3lyufh0",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230326223457-3lyufh0"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Jenkins与Kubernetes整合"
				}
			]
		},
		{
			"ID": "20230326223457-jhwedsw",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230326223457-jhwedsw"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "安装"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "Kubernetes"
				},
				{
					"Type": "NodeText",
					"Data": "插件\n "
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "在这里插入图片描述"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/20210513172528616-20230326223456-n5y5gji.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20230326223457-p51skot",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230326223457-p51skot"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "安装完成之后前往全局配置最下面\n "
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "在这里插入图片描述"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/20210513173456285-20230326223456-dplxyhf.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n "
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "在这里插入图片描述"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/20210513173546313-20230326223456-oqk6ewi.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20230326223457-ra5yg17",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20230326223457-ra5yg17"
			},
			"Children": [
				{
					"ID": "20230326223457-wuvucmi",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230326223457-wuvucmi"
					},
					"Children": [
						{
							"ID": "20230326223457-dlnopxu",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230326223457-dlnopxu"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "kubernetes地址采用了kube的服务器发现：https://kubernetes.default.svc.cluster.local"
								}
							]
						}
					]
				},
				{
					"ID": "20230326223457-bdmgvnk",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230326223457-bdmgvnk"
					},
					"Children": [
						{
							"ID": "20230326223457-xbwfgle",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230326223457-xbwfgle"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "namespace填kube-ops，然后点击Test Connection，如果出现 Connection test successful 的提示信息证明 Jenkins 已经可以和 Kubernetes 系统正常通信"
								}
							]
						}
					]
				},
				{
					"ID": "20230326223457-di0tilk",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230326223457-di0tilk"
					},
					"Children": [
						{
							"ID": "20230326223457-i5qlk7j",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230326223457-i5qlk7j"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Jenkins URL 地址：http://jenkins.kube-ops.svc.cluster.local:8080"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230326223457-tv937xu",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230326223457-tv937xu"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "在这里插入图片描述"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/20210513173913504-20230326223456-2uaa05c.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n 点击连接测试\n "
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "在这里插入图片描述"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/20210513173952914-20230326223456-udl31st.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20230326223457-fs4cuyb",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230326223457-fs4cuyb"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "在这里插入图片描述"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/20210513174038135-20230326223456-5bstle5.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20230326223457-nyqzcuc",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230326223457-nyqzcuc"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "构建Jenkins-Slave自定义镜像"
				}
			]
		},
		{
			"ID": "20230326223457-03rs751",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230326223457-03rs751"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Jenkins-Master在构建Job的时候，Kubernetes会创建Jenkins-Slave的Pod来完成Job的构建。我们选择运行Jenkins-Slave的镜像为官方推荐镜像："
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "jenkins/jnlp-slave:latest"
				},
				{
					"Type": "NodeText",
					"Data": "，但是这个镜像里面并没有Maven环境，为了方便使用，我们需要=自定义=一个新的镜像"
				}
			]
		},
		{
			"ID": "20230326223457-ohk679s",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230326223457-ohk679s",
				"updated": "20230326223457"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "所以我们要编写Dockerfile自定义一个镜像"
				}
			]
		},
		{
			"ID": "20230326223457-tvd75xl",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230326223457-tvd75xl",
				"updated": "20230326223836"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YmFzaA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "vim Dockerfile\n\nFROM jenkins/jnlp-slave:latest\n\nMAINTAINER xiaotian\n\n# 切换到 root 账户进行操作\nUSER root\n\n# 安装 maven\nCOPY apache-maven-3.6.2-bin.tar.gz .\n\nRUN tar -zxf apache-maven-3.6.2-bin.tar.gz \u0026\u0026 \\\n    mv apache-maven-3.6.2 /usr/local \u0026\u0026 \\\n    rm -f apache-maven-3.6.2-bin.tar.gz \u0026\u0026 \\\n    ln -s /usr/local/apache-maven-3.6.2/bin/mvn /usr/bin/mvn \u0026\u0026 \\\n    ln -s /usr/local/apache-maven-3.6.2 /usr/local/apache-maven \u0026\u0026 \\\n    mkdir -p /usr/local/apache-maven/repo\n\nCOPY settings.xml /usr/local/apache-maven/conf/settings.xml\n\nUSER jenkins\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230326223457-vfvfaf0",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230326223457-vfvfaf0"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "还需要一个带有阿里源镜像的settings文件"
				}
			]
		},
		{
			"ID": "20230326223457-xzarm8z",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230326223457-xzarm8z",
				"updated": "20230326223827"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "eG1s"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "\u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e\n\n\u003c!--\nLicensed to the Apache Software Foundation (ASF) under one\nor more contributor license agreements.  See the NOTICE file\ndistributed with this work for additional information\nregarding copyright ownership.  The ASF licenses this file\nto you under the Apache License, Version 2.0 (the\n\"License\"); you may not use this file except in compliance\nwith the License.  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing,\nsoftware distributed under the License is distributed on an\n\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, either express or implied.  See the License for the\nspecific language governing permissions and limitations\nunder the License.\n--\u003e\n\n\u003c!--\n | This is the configuration file for Maven. It can be specified at two levels:\n |\n |  1. User Level. This settings.xml file provides configuration for a single user,\n |                 and is normally provided in ${user.home}/.m2/settings.xml.\n |\n |                 NOTE: This location can be overridden with the CLI option:\n |\n |                 -s /path/to/user/settings.xml\n |\n |  2. Global Level. This settings.xml file provides configuration for all Maven\n |                 users on a machine (assuming they're all using the same Maven\n |                 installation). It's normally provided in\n |                 ${maven.conf}/settings.xml.\n |\n |                 NOTE: This location can be overridden with the CLI option:\n |\n |                 -gs /path/to/global/settings.xml\n |\n | The sections in this sample file are intended to give you a running start at\n | getting the most out of your Maven installation. Where appropriate, the default\n | values (values used when the setting is not specified) are provided.\n |\n |--\u003e\n\u003csettings xmlns=\"http://maven.apache.org/SETTINGS/1.0.0\"\n          xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n          xsi:schemaLocation=\"http://maven.apache.org/SETTINGS/1.0.0 http://maven.apache.org/xsd/settings-1.0.0.xsd\"\u003e\n  \u003c!-- localRepository\n   | The path to the local repository maven will use to store artifacts.\n   |\n   | Default: ${user.home}/.m2/repository\n  \u003clocalRepository\u003e/path/to/local/repo\u003c/localRepository\u003e\n  --\u003e\n  \u003clocalRepository\u003e/usr/local/apache-maven/repo\u003c/localRepository\u003e\n\n  \u003c!-- interactiveMode\n   | This will determine whether maven prompts you when it needs input. If set to false,\n   | maven will use a sensible default value, perhaps based on some other setting, for\n   | the parameter in question.\n   |\n   | Default: true\n  \u003cinteractiveMode\u003etrue\u003c/interactiveMode\u003e\n  --\u003e\n\n  \u003c!-- offline\n   | Determines whether maven should attempt to connect to the network when executing a build.\n   | This will have an effect on artifact downloads, artifact deployment, and others.\n   |\n   | Default: false\n  \u003coffline\u003efalse\u003c/offline\u003e\n  --\u003e\n\n  \u003c!-- pluginGroups\n   | This is a list of additional group identifiers that will be searched when resolving plugins by their prefix, i.e.\n   | when invoking a command line like \"mvn prefix:goal\". Maven will automatically add the group identifiers\n   | \"org.apache.maven.plugins\" and \"org.codehaus.mojo\" if these are not already contained in the list.\n   |--\u003e\n  \u003cpluginGroups\u003e\n    \u003c!-- pluginGroup\n     | Specifies a further group identifier to use for plugin lookup.\n    \u003cpluginGroup\u003ecom.your.plugins\u003c/pluginGroup\u003e\n    --\u003e\n  \u003c/pluginGroups\u003e\n\n  \u003c!-- proxies\n   | This is a list of proxies which can be used on this machine to connect to the network.\n   | Unless otherwise specified (by system property or command-line switch), the first proxy\n   | specification in this list marked as active will be used.\n   |--\u003e\n  \u003cproxies\u003e\n    \u003c!-- proxy\n     | Specification for one proxy, to be used in connecting to the network.\n     |\n    \u003cproxy\u003e\n      \u003cid\u003eoptional\u003c/id\u003e\n      \u003cactive\u003etrue\u003c/active\u003e\n      \u003cprotocol\u003ehttp\u003c/protocol\u003e\n      \u003cusername\u003eproxyuser\u003c/username\u003e\n      \u003cpassword\u003eproxypass\u003c/password\u003e\n      \u003chost\u003eproxy.host.net\u003c/host\u003e\n      \u003cport\u003e80\u003c/port\u003e\n      \u003cnonProxyHosts\u003elocal.net|some.host.com\u003c/nonProxyHosts\u003e\n    \u003c/proxy\u003e\n    --\u003e\n  \u003c/proxies\u003e\n\n  \u003c!-- servers\n   | This is a list of authentication profiles, keyed by the server-id used within the system.\n   | Authentication profiles can be used whenever maven must make a connection to a remote server.\n   |--\u003e\n  \u003cservers\u003e\n    \u003c!-- server\n     | Specifies the authentication information to use when connecting to a particular server, identified by\n     | a unique name within the system (referred to by the 'id' attribute below).\n     |\n     | NOTE: You should either specify username/password OR privateKey/passphrase, since these pairings are\n     |       used together.\n     |\n    \u003cserver\u003e\n      \u003cid\u003edeploymentRepo\u003c/id\u003e\n      \u003cusername\u003erepouser\u003c/username\u003e\n      \u003cpassword\u003erepopwd\u003c/password\u003e\n    \u003c/server\u003e\n    --\u003e\n\n    \u003c!-- Another sample, using keys to authenticate.\n    \u003cserver\u003e\n      \u003cid\u003esiteServer\u003c/id\u003e\n      \u003cprivateKey\u003e/path/to/private/key\u003c/privateKey\u003e\n      \u003cpassphrase\u003eoptional; leave empty if not used.\u003c/passphrase\u003e\n    \u003c/server\u003e\n    --\u003e\n  \u003c/servers\u003e\n\n  \u003c!-- mirrors\n   | This is a list of mirrors to be used in downloading artifacts from remote repositories.\n   |\n   | It works like this: a POM may declare a repository to use in resolving certain artifacts.\n   | However, this repository may have problems with heavy traffic at times, so people have mirrored\n   | it to several places.\n   |\n   | That repository definition will have a unique id, so we can create a mirror reference for that\n   | repository, to be used as an alternate download site. The mirror site will be the preferred\n   | server for that repository.\n   |--\u003e\n  \u003cmirrors\u003e\n    \u003c!-- mirror\n     | Specifies a repository mirror site to use instead of a given repository. The repository that\n     | this mirror serves has an ID that matches the mirrorOf element of this mirror. IDs are used\n     | for inheritance and direct lookup purposes, and must be unique across the set of mirrors.\n     |\n    \u003cmirror\u003e\n      \u003cid\u003emirrorId\u003c/id\u003e\n      \u003cmirrorOf\u003erepositoryId\u003c/mirrorOf\u003e\n      \u003cname\u003eHuman Readable Name for this Mirror.\u003c/name\u003e\n      \u003curl\u003ehttp://my.repository.com/repo/path\u003c/url\u003e\n    \u003c/mirror\u003e\n     --\u003e\n    \u003cmirror\u003e   \n      \u003cid\u003ecentral\u003c/id\u003e   \n      \u003cmirrorOf\u003ecentral\u003c/mirrorOf\u003e   \n      \u003cname\u003ealiyun maven\u003c/name\u003e\n      \u003curl\u003ehttps://maven.aliyun.com/repository/public\u003c/url\u003e   \n    \u003c/mirror\u003e\n  \u003c/mirrors\u003e\n\n  \u003c!-- profiles\n   | This is a list of profiles which can be activated in a variety of ways, and which can modify\n   | the build process. Profiles provided in the settings.xml are intended to provide local machine-\n   | specific paths and repository locations which allow the build to work in the local environment.\n   |\n   | For example, if you have an integration testing plugin - like cactus - that needs to know where\n   | your Tomcat instance is installed, you can provide a variable here such that the variable is\n   | dereferenced during the build process to configure the cactus plugin.\n   |\n   | As noted above, profiles can be activated in a variety of ways. One way - the activeProfiles\n   | section of this document (settings.xml) - will be discussed later. Another way essentially\n   | relies on the detection of a system property, either matching a particular value for the property,\n   | or merely testing its existence. Profiles can also be activated by JDK version prefix, where a\n   | value of '1.4' might activate a profile when the build is executed on a JDK version of '1.4.2_07'.\n   | Finally, the list of active profiles can be specified directly from the command line.\n   |\n   | NOTE: For profiles defined in the settings.xml, you are restricted to specifying only artifact\n   |       repositories, plugin repositories, and free-form properties to be used as configuration\n   |       variables for plugins in the POM.\n   |\n   |--\u003e\n  \u003cprofiles\u003e\n    \u003c!-- profile\n     | Specifies a set of introductions to the build process, to be activated using one or more of the\n     | mechanisms described above. For inheritance purposes, and to activate profiles via \u003cactivatedProfiles/\u003e\n     | or the command line, profiles have to have an ID that is unique.\n     |\n     | An encouraged best practice for profile identification is to use a consistent naming convention\n     | for profiles, such as 'env-dev', 'env-test', 'env-production', 'user-jdcasey', 'user-brett', etc.\n     | This will make it more intuitive to understand what the set of introduced profiles is attempting\n     | to accomplish, particularly when you only have a list of profile id's for debug.\n     |\n     | This profile example uses the JDK version to trigger activation, and provides a JDK-specific repo.\n    \u003cprofile\u003e\n      \u003cid\u003ejdk-1.4\u003c/id\u003e\n\n      \u003cactivation\u003e\n        \u003cjdk\u003e1.4\u003c/jdk\u003e\n      \u003c/activation\u003e\n\n      \u003crepositories\u003e\n        \u003crepository\u003e\n          \u003cid\u003ejdk14\u003c/id\u003e\n          \u003cname\u003eRepository for JDK 1.4 builds\u003c/name\u003e\n          \u003curl\u003ehttp://www.myhost.com/maven/jdk14\u003c/url\u003e\n          \u003clayout\u003edefault\u003c/layout\u003e\n          \u003csnapshotPolicy\u003ealways\u003c/snapshotPolicy\u003e\n        \u003c/repository\u003e\n      \u003c/repositories\u003e\n    \u003c/profile\u003e\n    --\u003e\n\n    \u003c!--\n     | Here is another profile, activated by the system property 'target-env' with a value of 'dev',\n     | which provides a specific path to the Tomcat instance. To use this, your plugin configuration\n     | might hypothetically look like:\n     |\n     | ...\n     | \u003cplugin\u003e\n     |   \u003cgroupId\u003eorg.myco.myplugins\u003c/groupId\u003e\n     |   \u003cartifactId\u003emyplugin\u003c/artifactId\u003e\n     |\n     |   \u003cconfiguration\u003e\n     |     \u003ctomcatLocation\u003e${tomcatPath}\u003c/tomcatLocation\u003e\n     |   \u003c/configuration\u003e\n     | \u003c/plugin\u003e\n     | ...\n     |\n     | NOTE: If you just wanted to inject this configuration whenever someone set 'target-env' to\n     |       anything, you could just leave off the \u003cvalue/\u003e inside the activation-property.\n     |\n    \u003cprofile\u003e\n      \u003cid\u003eenv-dev\u003c/id\u003e\n\n      \u003cactivation\u003e\n        \u003cproperty\u003e\n          \u003cname\u003etarget-env\u003c/name\u003e\n          \u003cvalue\u003edev\u003c/value\u003e\n        \u003c/property\u003e\n      \u003c/activation\u003e\n\n      \u003cproperties\u003e\n        \u003ctomcatPath\u003e/path/to/tomcat/instance\u003c/tomcatPath\u003e\n      \u003c/properties\u003e\n    \u003c/profile\u003e\n    --\u003e\n  \u003c/profiles\u003e\n\n  \u003c!-- activeProfiles\n   | List of profiles that are active for all builds.\n   |\n  \u003cactiveProfiles\u003e\n    \u003cactiveProfile\u003ealwaysActiveProfile\u003c/activeProfile\u003e\n    \u003cactiveProfile\u003eanotherAlwaysActiveProfile\u003c/activeProfile\u003e\n  \u003c/activeProfiles\u003e\n  --\u003e\n\u003c/settings\u003e\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230326223457-3nwv521",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230326223457-3nwv521",
				"updated": "20230326223457"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "最后需要一个maven的安装包\n 我这里使用 apache-maven-3.6.2-bin.tar"
				}
			]
		},
		{
			"ID": "20230326223457-ews2bjq",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230326223457-ews2bjq",
				"updated": "20230326223824"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YmFzaA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "[root@master jenkins-slave]# ls\napache-maven-3.6.2-bin.tar.gz  Dockerfile  settings.xml\n\n创建镜像\ndocker build -t jenkins-slave-maven:latest .\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230326223457-9b5pdig",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230326223457-9b5pdig"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "在这里插入图片描述"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/2021051317520393-20230326223457-kdlxsvf.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20230326223457-os3oxe3",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230326223457-os3oxe3",
				"updated": "20230326223821"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YmFzaA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "查看镜像\ndocker images \n\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230326223457-1gkok27",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230326223457-1gkok27"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "在这里插入图片描述"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/20210513175259997-20230326223456-ftk9ifl.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n 然后把镜像上传到Harbor的公共库library中（因为k8s从节点都需要下载此镜像，因此放在公共库最方便）"
				}
			]
		},
		{
			"ID": "20230326223457-wsfrxw2",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230326223457-wsfrxw2",
				"updated": "20230326223818"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YmFzaA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "打标签\ndocker tag jenkins-slave-maven:latest 192.168.188.119:85/library/jenkins-slave-maven:latest\n\nvim /etc/docker/daemon.json\n\n { \n   \"registry-mirrors\": [\"https://m0rsqupc.mirror.aliyuncs.com\"],\n   \"insecure-registries\": [\"192.168.188.119:85\"]\n }\n\n登录\ndocker login -u admin -p Harbor12345 192.168.188.119:85\n\n上传镜像\ndocker push 192.168.188.119:85/library/jenkins-slave-maven:latest\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230326223457-9s1wvyv",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230326223457-9s1wvyv"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "镜像上传成功\n "
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "在这里插入图片描述"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/20210513180958561-20230326223456-5yrxxj9.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20230326223457-vo46v8q",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230326223457-vo46v8q"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "测试Jenkins-Slave是否可以创建"
				}
			]
		},
		{
			"ID": "20230326223457-17427o1",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230326223457-17427o1"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "创建一个Jenkins流水线项目\n "
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "在这里插入图片描述"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/20210513181155684-20230326223456-b400l6z.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20230326223457-3x480kg",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230326223457-3x480kg"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "添加gitlab的凭据，一会儿流水线脚本需要使用\n "
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "在这里插入图片描述"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/20210513195711474-20230326223457-diae7lu.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20230326223457-qjscc7r",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230326223457-qjscc7r"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "编写Pipeline，从GItlab拉取代码"
				}
			]
		},
		{
			"ID": "20230326223457-cqb9ct5",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230326223457-cqb9ct5",
				"updated": "20230326223814"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "Z3Jvb3Z5"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "def git_address = \"http://47.108.13.86:82/maomao_group/tensquare_back.git\" \ndef git_auth = \"bb5a1b2e-8dfa-4557-a79b-66d0f1f05f5c\" \n\n//创建一个Pod的模板，label为jenkins-slave \npodTemplate(label: 'jenkins-slave', cloud: 'kubernetes', containers: [ \n    containerTemplate( \n        name: 'jnlp', \n        image: \"192.168.188.119:85/library/jenkins-slave-maven:latest\"\n    ) \n  ]\n)\n{  \n  //引用jenkins-slave的pod模块来构建Jenkins-Slave的pod\n  node(\"jenkins-slave\"){  \n      // 第一步 \n      stage('拉取代码'){  \n          checkout([$class: 'GitSCM', branches: [[name: 'master']], \n          userRemoteConfigs: [[credentialsId: \"${git_auth}\", url: \"${git_address}\"]]])\n      } \n  }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230326223457-ew1qiqy",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20230326223457-ew1qiqy"
			},
			"Children": [
				{
					"ID": "20230326223457-kvmf48v",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230326223457-kvmf48v"
					},
					"Children": [
						{
							"ID": "20230326223457-2w5xht2",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230326223457-2w5xht2"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "podTemplate 就是k8s的pod模板"
								}
							]
						}
					]
				},
				{
					"ID": "20230326223457-r2ajhkc",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230326223457-r2ajhkc"
					},
					"Children": [
						{
							"ID": "20230326223457-5tdcjuj",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230326223457-5tdcjuj"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "label 是模板名字"
								}
							]
						}
					]
				},
				{
					"ID": "20230326223457-onetpi6",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230326223457-onetpi6"
					},
					"Children": [
						{
							"ID": "20230326223457-2wt5t4s",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230326223457-2wt5t4s"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "cloud 是云名字 在全局配置里的Cloud里自己填写的"
								}
							]
						}
					]
				},
				{
					"ID": "20230326223457-rvfm3un",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230326223457-rvfm3un"
					},
					"Children": [
						{
							"ID": "20230326223457-dv5esww",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230326223457-dv5esww"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "containerTemplate 指定在pod里运行的容器"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230326223457-rs7b4xj",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230326223457-rs7b4xj"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "构建成功"
				}
			]
		},
		{
			"ID": "20230326223457-h9kcrah",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230326223457-h9kcrah"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "在这里插入图片描述"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/20210513205236528-20230326223456-0aq4tk2.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n 中间遇到的错误\n "
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "在这里插入图片描述"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/20210513205418356-20230326223456-c5iv9ja.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n 所有k8s节点必须授权harbor仓库地址"
				}
			]
		},
		{
			"ID": "20230326223457-jcali08",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230326223457-jcali08",
				"updated": "20230326223810"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YmFzaA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "vi /etc/docker/daemon.json\n\n{ \n\"registry-mirrors\": [\"https://zydiol88.mirror.aliyuncs.com\"],\n\"insecure-registries\": [\"harbor-ip:85\"]\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230326223457-nuyb26d",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230326223457-nuyb26d"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Jenkins+Kubernetes+Docker完成微服务持续集成"
				}
			]
		},
		{
			"ID": "20230326223457-v3ehxkc",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230326223457-v3ehxkc"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "拉取代码，构建镜像"
				}
			]
		},
		{
			"ID": "20230326223457-ssnbmqm",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20230326223457-ssnbmqm"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "创建NFS共享目录"
				}
			]
		},
		{
			"ID": "20230326223457-nmpmwvf",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230326223457-nmpmwvf"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "让所有Jenkins-Slave构建指向NFS的Maven的共享仓库目录"
				}
			]
		},
		{
			"ID": "20230326223457-tb4e3it",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230326223457-tb4e3it",
				"updated": "20230326223806"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YmFzaA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "mkdir -p /opt/nfs/maven\nvi /etc/exports\n\n/opt/nfs/jenkins        *(rw,no_root_squash)\n/opt/nfs/maven          *(rw,no_root_squash)\n\nsystemctl restart nfs\n\nshowmount -e 192.168.188.116 \nExport list for 192.168.188.116:\n/opt/nfs/maven   *\n/opt/nfs/jenkins *\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230326223457-pyl53ul",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20230326223457-pyl53ul"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "创建项目，编写构建Pipeline"
				}
			]
		},
		{
			"ID": "20230326223457-9fjajmb",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230326223457-9fjajmb"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在流水线里添加多选项参数\n "
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "在这里插入图片描述"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/20210513214315411-20230326223456-vfh7pwi.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n "
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "在这里插入图片描述"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/20210513214404229-20230326223457-iqw4fya.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n "
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "在这里插入图片描述"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/20210513214427314-20230326223457-o8sinvy.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n "
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "在这里插入图片描述"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/20210513214632110-20230326223457-o07wbgc.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n "
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "在这里插入图片描述"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/20210513214710487-20230326223456-v6latmv.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n 再添加字符参数\n "
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "在这里插入图片描述"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/20210513221533408-20230326223456-szk4ctr.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n "
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "在这里插入图片描述"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/20210513221601718-20230326223457-o1lg21e.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20230326223457-8ljumwo",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230326223457-8ljumwo"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "保存"
				}
			]
		},
		{
			"ID": "20230326223457-308t1z7",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230326223457-308t1z7"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "接着去添加harbor的凭证\n "
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "在这里插入图片描述"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/20210513232056445-20230326223456-2rccw0e.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n 编写流水线脚本"
				}
			]
		},
		{
			"ID": "20230326223457-2mtuod0",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230326223457-2mtuod0",
				"updated": "20230326224328"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "Z3Jvb3Z5"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "def git_address = \"http://192.168.188.120:82/maomao_group/tensquare_back.git\"\ndef git_auth = \"bb5a1b2e-8dfa-4557-a79b-66d0f1f05f5c\" \n//构建版本的名称 \ndef tag = \"latest\" \n//Harbor私服地址 \ndef harbor_url = \"192.168.188.119:85\" \n//Harbor的项目名称 \ndef harbor_project_name = \"tensquare\" \n//Harbor的凭证 \ndef harbor_auth = \"4fe90544-8b7b-4f81-b282-d20a2eb6e437\" \n\npodTemplate(label: 'jenkins-slave', cloud: 'kubernetes', containers: [ \n\tcontainerTemplate( \n\t\tname: 'jnlp',\n\t\timage: \"192.168.188.119:85/library/jenkins-slave-maven:latest\"\n\t),\n\tcontainerTemplate(\n\t\tname: 'docker',\n\t\timage: \"docker:stable\",\n\t\tttyEnabled: true,\n\t\tcommand: 'cat'\n\t),\n  ],\n  volumes: [\n    hostPathVolume(mountPath: '/var/run/docker.sock', hostPath:'/var/run/docker.sock'),\n\tnfsVolume(mountPath: '/usr/local/apache-maven/repo', serverAddress: '192.168.188.116' , serverPath: '/opt/nfs/maven'),\n\t],\n)\n{  \n  node(\"jenkins-slave\"){ \n\t   // 第一步\n\t   stage('拉取代码'){ \n\t\t  checkout([$class: 'GitSCM', branches: [[name: '${branch}']],\n\t\t  userRemoteConfigs: [[credentialsId: \"${git_auth}\", url: \"${git_address}\"]]])\n\t   }\n\t   // 第二步\n\t   stage('公共工程代码编译'){ \n\t\t\t//编译并安装公共工程\n\t\t  sh \"mvn -f tensquare_common clean install\"\n\t   }\n\t   // 第三步\n\t   stage('构建镜像，部署项目'){ \n\t\t\t //把选择的项目信息转为数组\n\t\t\t def selectedProjects = \"${project_name}\".split(',')\n\t\t\t \n\t\t\t for(int i=0;i\u003cselectedProjects.size();i++){ \n\t\t\t\t//取出每个项目的名称和端口 \n\t\t\t\tdef currentProject = selectedProjects[i];\n\t\t\t\t//项目名称\n\t\t\t\tdef currentProjectName = currentProject.split('@')[0]\n\t\t\t\t//项目启动端口\n\t\t\t\tdef currentProjectPort = currentProject.split('@')[1]\n\n\t\t\t\t//定义镜像名称\n\t\t\t\tdef imageName = \"${currentProjectName}:${tag}\"\n\n\t\t\t\t//编译，构建本地镜像\n\t\t\t\tsh \"mvn -f ${currentProjectName} clean package dockerfile:build\"\n\n\t\t\t\tcontainer('docker') { \n\n\t\t\t\t\t//给镜像打标签\n\t\t\t\t\tsh \"docker tag ${imageName} ${harbor_url}/${harbor_project_name}/${imageName}\"\n\t\n\t\t\t\t\t//登录Harbor，并上传镜像\n\t\t\t\t\twithCredentials([usernamePassword(credentialsId:\"${harbor_auth}\", passwordVariable: 'password', usernameVariable: 'username')])\n\t\t\t\t{ \n\t\t\t\t\t\t  //登录\n\t\t\t\t\t\t  sh \"docker login -u ${username} -p ${password} ${harbor_url}\"\n\t\t\t\t\t\t  \n\t\t\t\t\t\t  //上传镜像\n\t\t\t\t\t\t  sh \"docker push ${harbor_url}/${harbor_project_name}/${imageName}\"\n\t\t\t\t\t}\n\t\t\t\t\t//删除本地镜像\n\t\t\t\t\tsh \"docker rmi -f ${imageName}\"\n\t\t\t\t\tsh \"docker rmi -f ${harbor_url}/${harbor_project_name}/${imageName}\"\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230326223457-chel16e",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230326223457-chel16e"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "注意：在构建过程会发现无法创建仓库目录，是因为NFS共享目录权限不足，需更改权限"
				}
			]
		},
		{
			"ID": "20230326223457-rvp2hhl",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230326223457-rvp2hhl"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "只用在k8s主节点"
				}
			]
		},
		{
			"ID": "20230326223457-5ruedh4",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230326223457-5ruedh4",
				"updated": "20230326223754"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YmFzaA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "chmod -R 777 /opt/nfs/maven\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230326223457-mescupz",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230326223457-mescupz"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "如果出现这种错误\n "
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "在这里插入图片描述"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/20210513231201498-20230326223456-rb5qq0r.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20230326223457-7vmi1hd",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230326223457-7vmi1hd"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "是Docker命令执行权限问题，所有k8s服务器都需要执行"
				}
			]
		},
		{
			"ID": "20230326223457-a2sxozg",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230326223457-a2sxozg",
				"updated": "20230326223752"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YmFzaA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "chmod 777 /var/run/docker.sock\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230326223457-vtny6if",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230326223457-vtny6if"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "需要手动上传父工程依赖到NFS的Maven共享仓库目录中"
				}
			]
		},
		{
			"ID": "20230326223457-16mymh7",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20230326223457-16mymh7"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "记录"
				}
			]
		},
		{
			"ID": "20230326223457-jvav4cy",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230326223457-jvav4cy"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "在这里插入图片描述"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/20210513233049479-20230326223456-6mf7eu7.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n 脚本写好之后，都能错这么多次，真的太难了"
				}
			]
		},
		{
			"ID": "20230326223457-1an6oxp",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230326223457-1an6oxp"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "错了只能看日志一步一步进行排错"
				}
			]
		},
		{
			"ID": "20230326223457-kvcsdqt",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230326223457-kvcsdqt"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "因为这一步实在是太容易错了，我记录一下构建过程，以后遇到问题可以查看"
				}
			]
		},
		{
			"ID": "20230326223457-avo644j",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230326223457-avo644j",
				"updated": "20230326224341"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YmFzaA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "Started by user maomao\nRunning in Durability level: MAX_SURVIVABILITY\n[Pipeline] Start of Pipeline\n[Pipeline] podTemplate\n[Pipeline] { \n[Pipeline] node\nCreated Pod: kubernetes kube-ops/jenkins-slave-qv8g5-p9qlr\nAgent jenkins-slave-qv8g5-p9qlr is provisioned from template jenkins-slave-qv8g5\n---\napiVersion: \"v1\"\nkind: \"Pod\"\nmetadata:\n  annotations:\n    buildUrl: \"http://jenkins.kube-ops.svc.cluster.local:8080/job/tensquare__back/15/\"\n    runUrl: \"job/tensquare__back/15/\"\n  labels:\n    jenkins: \"slave\"\n    jenkins/label-digest: \"5059d2cd0054f9fe75d61f97723d98ab1a42d71a\"\n    jenkins/label: \"jenkins-slave\"\n  name: \"jenkins-slave-qv8g5-p9qlr\"\nspec:\n  containers:\n  - env:\n    - name: \"JENKINS_SECRET\"\n      value: \"********\"\n    - name: \"JENKINS_AGENT_NAME\"\n      value: \"jenkins-slave-qv8g5-p9qlr\"\n    - name: \"JENKINS_NAME\"\n      value: \"jenkins-slave-qv8g5-p9qlr\"\n    - name: \"JENKINS_AGENT_WORKDIR\"\n      value: \"/home/jenkins/agent\"\n    - name: \"JENKINS_URL\"\n      value: \"http://jenkins.kube-ops.svc.cluster.local:8080/\"\n    image: \"192.168.188.119:85/library/jenkins-slave-maven:latest\"\n    imagePullPolicy: \"IfNotPresent\"\n    name: \"jnlp\"\n    resources:\n      limits: { }\n      requests: { }\n    tty: false\n    volumeMounts:\n    - mountPath: \"/usr/local/apache-maven/repo\"\n      name: \"volume-1\"\n      readOnly: false\n    - mountPath: \"/var/run/docker.sock\"\n      name: \"volume-0\"\n      readOnly: false\n    - mountPath: \"/home/jenkins/agent\"\n      name: \"workspace-volume\"\n      readOnly: false\n  - command:\n    - \"cat\"\n    image: \"docker:stable\"\n    imagePullPolicy: \"IfNotPresent\"\n    name: \"docker\"\n    resources:\n      limits: { }\n      requests: { }\n    tty: true\n    volumeMounts:\n    - mountPath: \"/usr/local/apache-maven/repo\"\n      name: \"volume-1\"\n      readOnly: false\n    - mountPath: \"/var/run/docker.sock\"\n      name: \"volume-0\"\n      readOnly: false\n    - mountPath: \"/home/jenkins/agent\"\n      name: \"workspace-volume\"\n      readOnly: false\n  nodeSelector:\n    kubernetes.io/os: \"linux\"\n  restartPolicy: \"Never\"\n  volumes:\n  - hostPath:\n      path: \"/var/run/docker.sock\"\n    name: \"volume-0\"\n  - name: \"volume-1\"\n    nfs:\n      path: \"/opt/nfs/maven\"\n      readOnly: false\n      server: \"192.168.188.116\"\n  - emptyDir:\n      medium: \"\"\n    name: \"workspace-volume\"\n\nRunning on jenkins-slave-qv8g5-p9qlr in /home/jenkins/agent/workspace/tensquare__back\n[Pipeline] { \n[Pipeline] stage\n[Pipeline] {  (拉取代码)\n[Pipeline] checkout\nThe recommended git tool is: NONE\nusing credential bb5a1b2e-8dfa-4557-a79b-66d0f1f05f5c\nCloning the remote Git repository\nCloning repository http://192.168.188.120:82/maomao_group/tensquare_back.git\n \u003e git init /home/jenkins/agent/workspace/tensquare__back # timeout=10\nFetching upstream changes from http://192.168.188.120:82/maomao_group/tensquare_back.git\n \u003e git --version # timeout=10\n \u003e git --version # 'git version 2.20.1'\nusing GIT_ASKPASS to set credentials gitlab-http-auth\n \u003e git fetch --tags --force --progress -- http://192.168.188.120:82/maomao_group/tensquare_back.git +refs/heads/*:refs/remotes/origin/* # timeout=10\nAvoid second fetch\nChecking out Revision dba0faf11591dc9aa572e43bb0b5134b3ebf195e (origin/master)\n \u003e git config remote.origin.url http://192.168.188.120:82/maomao_group/tensquare_back.git # timeout=10\n \u003e git config --add remote.origin.fetch +refs/heads/*:refs/remotes/origin/* # timeout=10\n \u003e git rev-parse origin/master^{ commit} # timeout=10\n \u003e git config core.sparsecheckout # timeout=10\n \u003e git checkout -f dba0faf11591dc9aa572e43bb0b5134b3ebf195e # timeout=10\nCommit message: \"牛\"\n \u003e git rev-list --no-walk dba0faf11591dc9aa572e43bb0b5134b3ebf195e # timeout=10\n[Pipeline] }\n[Pipeline] // stage\n[Pipeline] stage\n[Pipeline] {  (公共工程代码编译)\n[Pipeline] sh\n+ mvn -f tensquare_common clean install\n[INFO] Scanning for projects...\n[INFO] \n[INFO] -------------------\u003c com.tensquare:tensquare_common \u003e-------------------\n[INFO] Building tensquare_common 1.0-SNAPSHOT\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- maven-clean-plugin:3.0.0:clean (default-clean) @ tensquare_common ---\n[INFO] Deleting /home/jenkins/agent/workspace/tensquare__back/tensquare_common/target\n[INFO] \n[INFO] --- maven-resources-plugin:3.0.1:resources (default-resources) @ tensquare_common ---\n[INFO] Using 'UTF-8' encoding to copy filtered resources.\n[INFO] skip non existing resourceDirectory /home/jenkins/agent/workspace/tensquare__back/tensquare_common/src/main/resources\n[INFO] skip non existing resourceDirectory /home/jenkins/agent/workspace/tensquare__back/tensquare_common/src/main/resources\n[INFO] \n[INFO] --- maven-compiler-plugin:3.7.0:compile (default-compile) @ tensquare_common ---\n[INFO] Changes detected - recompiling the module!\n[INFO] Compiling 5 source files to /home/jenkins/agent/workspace/tensquare__back/tensquare_common/target/classes\n[INFO] \n[INFO] --- maven-resources-plugin:3.0.1:testResources (default-testResources) @ tensquare_common ---\n[INFO] Using 'UTF-8' encoding to copy filtered resources.\n[INFO] skip non existing resourceDirectory /home/jenkins/agent/workspace/tensquare__back/tensquare_common/src/test/resources\n[INFO] \n[INFO] --- maven-compiler-plugin:3.7.0:testCompile (default-testCompile) @ tensquare_common ---\n[INFO] No sources to compile\n[INFO] \n[INFO] --- maven-surefire-plugin:2.21.0:test (default-test) @ tensquare_common ---\n[INFO] No tests to run.\n[INFO] \n[INFO] --- maven-jar-plugin:3.0.2:jar (default-jar) @ tensquare_common ---\n[INFO] Building jar: /home/jenkins/agent/workspace/tensquare__back/tensquare_common/target/tensquare_common-1.0-SNAPSHOT.jar\n[INFO] \n[INFO] --- maven-install-plugin:2.5.2:install (default-install) @ tensquare_common ---\n[INFO] Installing /home/jenkins/agent/workspace/tensquare__back/tensquare_common/target/tensquare_common-1.0-SNAPSHOT.jar to /usr/local/apache-maven/repo/com/tensquare/tensquare_common/1.0-SNAPSHOT/tensquare_common-1.0-SNAPSHOT.jar\n[INFO] Installing /home/jenkins/agent/workspace/tensquare__back/tensquare_common/pom.xml to /usr/local/apache-maven/repo/com/tensquare/tensquare_common/1.0-SNAPSHOT/tensquare_common-1.0-SNAPSHOT.pom\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  4.162 s\n[INFO] Finished at: 2021-05-13T15:27:00Z\n[INFO] ------------------------------------------------------------------------\n[Pipeline] }\n[Pipeline] // stage\n[Pipeline] stage\n[Pipeline] {  (构建镜像，部署项目)\n[Pipeline] sh\n+ mvn -f tensquare_eureka_server clean package dockerfile:build\n[INFO] Scanning for projects...\n[INFO] \n[INFO] ---------------\u003c com.tensquare:tensquare_eureka_server \u003e----------------\n[INFO] Building tensquare_eureka_server 1.0-SNAPSHOT\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- maven-clean-plugin:3.0.0:clean (default-clean) @ tensquare_eureka_server ---\n[INFO] Deleting /home/jenkins/agent/workspace/tensquare__back/tensquare_eureka_server/target\n[INFO] \n[INFO] --- maven-resources-plugin:3.0.1:resources (default-resources) @ tensquare_eureka_server ---\n[INFO] Using 'UTF-8' encoding to copy filtered resources.\n[INFO] Copying 1 resource\n[INFO] Copying 0 resource\n[INFO] \n[INFO] --- maven-compiler-plugin:3.7.0:compile (default-compile) @ tensquare_eureka_server ---\n[INFO] Changes detected - recompiling the module!\n[INFO] Compiling 1 source file to /home/jenkins/agent/workspace/tensquare__back/tensquare_eureka_server/target/classes\n[INFO] \n[INFO] --- maven-resources-plugin:3.0.1:testResources (default-testResources) @ tensquare_eureka_server ---\n[INFO] Using 'UTF-8' encoding to copy filtered resources.\n[INFO] skip non existing resourceDirectory /home/jenkins/agent/workspace/tensquare__back/tensquare_eureka_server/src/test/resources\n[INFO] \n[INFO] --- maven-compiler-plugin:3.7.0:testCompile (default-testCompile) @ tensquare_eureka_server ---\n[INFO] No sources to compile\n[INFO] \n[INFO] --- maven-surefire-plugin:2.21.0:test (default-test) @ tensquare_eureka_server ---\n[INFO] No tests to run.\n[INFO] \n[INFO] --- maven-jar-plugin:3.0.2:jar (default-jar) @ tensquare_eureka_server ---\n[INFO] Building jar: /home/jenkins/agent/workspace/tensquare__back/tensquare_eureka_server/target/tensquare_eureka_server-1.0-SNAPSHOT.jar\n[INFO] \n[INFO] --- spring-boot-maven-plugin:2.0.1.RELEASE:repackage (default) @ tensquare_eureka_server ---\n[INFO] \n[INFO] --- dockerfile-maven-plugin:1.3.6:build (default-cli) @ tensquare_eureka_server ---\n[INFO] Building Docker context /home/jenkins/agent/workspace/tensquare__back/tensquare_eureka_server\n[INFO] \n[INFO] Image will be built as tensquare_eureka_server:latest\n[INFO] \n[INFO] Step 1/5 : FROM openjdk:8-jdk-alpine\n[INFO] \n[INFO] Pulling from library/openjdk\n[INFO] Digest: sha256:94792824df2df33402f201713f932b58cb9de94a0cd524164a0f2283343547b3\n[INFO] Status: Image is up to date for openjdk:8-jdk-alpine\n[INFO]  ---\u003e a3562aa0b991\n[INFO] Step 2/5 : ARG JAR_FILE\n[INFO] \n[INFO]  ---\u003e Using cache\n[INFO]  ---\u003e a2a3b3df4f15\n[INFO] Step 3/5 : COPY ${JAR_FILE} app.jar\n[INFO] \n[INFO]  ---\u003e 656a595f07ab\n[INFO] Step 4/5 : EXPOSE 10086\n[INFO] \n[INFO]  ---\u003e Running in 868cfdbdd284\n[INFO] Removing intermediate container 868cfdbdd284\n[INFO]  ---\u003e 4fa7a8297ad1\n[INFO] Step 5/5 : ENTRYPOINT [\"java\",\"-jar\",\"/app.jar\"]\n[INFO] \n[INFO]  ---\u003e Running in bee52b92749b\n[INFO] Removing intermediate container bee52b92749b\n[INFO]  ---\u003e d0ec04357240\n[INFO] Successfully built d0ec04357240\n[INFO] Successfully tagged tensquare_eureka_server:latest\n[INFO] \n[INFO] Detected build of image with id d0ec04357240\n[INFO] Building jar: /home/jenkins/agent/workspace/tensquare__back/tensquare_eureka_server/target/tensquare_eureka_server-1.0-SNAPSHOT-docker-info.jar\n[INFO] Successfully built tensquare_eureka_server:latest\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  27.874 s\n[INFO] Finished at: 2021-05-13T15:27:29Z\n[INFO] ------------------------------------------------------------------------\n[Pipeline] container\n[Pipeline] { \n[Pipeline] sh\n+ docker tag tensquare_eureka_server:latest 192.168.188.119:85/tensquare/tensquare_eureka_server:latest\n[Pipeline] withCredentials\nMasking supported pattern matches of $username or $password\n[Pipeline] { \n[Pipeline] sh\nWarning: A secret was passed to \"sh\" using Groovy String interpolation, which is insecure.\n\t\t Affected argument(s) used the following variable(s): [password, username]\n\t\t See https://jenkins.io/redirect/groovy-string-interpolation for details.\n+ docker login -u **** -p **** 192.168.188.119:85\nWARNING! Using --password via the CLI is insecure. Use --password-stdin.\nWARNING! Your password will be stored unencrypted in /root/.docker/config.json.\nConfigure a credential helper to remove this warning. See\nhttps://docs.docker.com/engine/reference/commandline/login/#credentials-store\n\nLogin Succeeded\n[Pipeline] sh\n+ docker push 192.168.188.119:85/tensquare/tensquare_eureka_server:latest\nThe push refers to repository [192.168.188.119:85/tensquare/tensquare_eureka_server]\nc8a7e30e2667: Preparing\nceaf9e1ebef5: Preparing\n9b9b7f3d56a0: Preparing\nf1b5933fe4b5: Preparing\nceaf9e1ebef5: Layer already exists\n9b9b7f3d56a0: Layer already exists\nf1b5933fe4b5: Layer already exists\nc8a7e30e2667: Pushed\nlatest: digest: sha256:320a88f1b5efa46bc74643c156652ca724211fff07578c8733ac7208f2ffa8a9 size: 1159\n[Pipeline] }\n[Pipeline] // withCredentials\n[Pipeline] sh\n+ docker rmi -f tensquare_eureka_server:latest\nUntagged: tensquare_eureka_server:latest\n[Pipeline] sh\n+ docker rmi -f 192.168.188.119:85/tensquare/tensquare_eureka_server:latest\nUntagged: 192.168.188.119:85/tensquare/tensquare_eureka_server:latest\nUntagged: 192.168.188.119:85/tensquare/tensquare_eureka_server@sha256:320a88f1b5efa46bc74643c156652ca724211fff07578c8733ac7208f2ffa8a9\nDeleted: sha256:d0ec043572402382bd3610e7fe9c63642c838edb43f7a16d822c374d231f9e9a\nDeleted: sha256:4fa7a8297ad170d46a9b5774b6f6adacd6276e9acae9a4cbbb918286a7617c67\nDeleted: sha256:656a595f07ab8eb40c24f787cdff50cbf0082e450251cc007a6bb055e67824e2\nDeleted: sha256:caa525b07e2d84ac4c0ef38c69f193cd72d094c285d2971b5017359b9c9cb1d5\n[Pipeline] }\n[Pipeline] // container\n[Pipeline] }\n[Pipeline] // stage\n[Pipeline] }\n[Pipeline] // node\n[Pipeline] }\n[Pipeline] // podTemplate\n[Pipeline] End of Pipeline\nFinished: SUCCESS\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230326223457-rvo1xam",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230326223457-rvo1xam"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "微服务部署到k8s"
				}
			]
		},
		{
			"ID": "20230326223457-cxhfx8x",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20230326223457-cxhfx8x"
			},
			"Children": [
				{
					"ID": "20230326223457-38vigac",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230326223457-38vigac"
					},
					"Children": [
						{
							"ID": "20230326223457-kvrf4dz",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230326223457-kvrf4dz"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "需要把构建好的微服务镜像 交给k8s的环境来进行运行，因此需要一个"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Kubernetes Continuous Deploy"
								},
								{
									"Type": "NodeText",
									"Data": "插件"
								}
							]
						}
					]
				},
				{
					"ID": "20230326223457-kqeu6ag",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230326223457-kqeu6ag"
					},
					"Children": [
						{
							"ID": "20230326223457-b98nvzv",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230326223457-b98nvzv"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "这是一个持续集成的插件"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230326223457-035sptr",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230326223457-035sptr"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "在这里插入图片描述"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/20210513233416567-20230326223457-svifobq.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n 修改后的流水线脚本"
				}
			]
		},
		{
			"ID": "20230326223457-nt5m9h3",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20230326223457-nt5m9h3"
			},
			"Children": [
				{
					"ID": "20230326223457-kswyiak",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230326223457-kswyiak"
					},
					"Children": [
						{
							"ID": "20230326223457-5cs8frp",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230326223457-5cs8frp"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "deploy.yml"
								},
								{
									"Type": "NodeText",
									"Data": "描述了 在k8s里怎么部署不同微服务"
								}
							]
						}
					]
				},
				{
					"ID": "20230326223457-9xlp1tc",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230326223457-9xlp1tc"
					},
					"Children": [
						{
							"ID": "20230326223457-g9dp5xz",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230326223457-g9dp5xz"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "kubeconfigId 是证书，需要在jenkins环境里创建出来"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230326223457-iiu3q3m",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230326223457-iiu3q3m"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "添加k8s证书，添加凭据\n "
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "在这里插入图片描述"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/20210513234849476-20230326223457-kakbeew.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n 这个证书在k8s主节点"
				}
			]
		},
		{
			"ID": "20230326223457-m8v9nl6",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230326223457-m8v9nl6",
				"updated": "20230326223741"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YmFzaA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "cd /root/.kube\ncat config\n\n显示的内容就是证书，我们需要把内容原封不动的全部复制过来\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230326223457-wtdm9oc",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230326223457-wtdm9oc"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "在这里插入图片描述"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/20210513235020353-20230326223457-giodyjx.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n 然后再次查看 会产生一个id，这个id添加到脚本里\n "
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "在这里插入图片描述"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/20210513235049487-20230326223456-i67abth.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n "
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "在这里插入图片描述"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/20210513235432534-20230326223457-dudh7hh.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20230326223457-x0nm4w9",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230326223457-x0nm4w9",
				"updated": "20230326223735"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "Z3Jvb3Z5"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "def git_address = \"http://192.168.188.120:82/maomao_group/tensquare_back.git\"\ndef git_auth = \"bb5a1b2e-8dfa-4557-a79b-66d0f1f05f5c\" \n//构建版本的名称 \ndef tag = \"latest\" \n//Harbor私服地址 \ndef harbor_url = \"192.168.188.119:85\" \n//Harbor的项目名称 \ndef harbor_project_name = \"tensquare\" \n//Harbor的凭证 \ndef harbor_auth = \"2ec3c8b6-f9b6-4ef6-b4bc-fdba74f99420\" \n//k8s的凭证\ndef k8s_auth = \"\"9565b450-3899-4892-8aed-d15b6f26f8fd\n\npodTemplate(label: 'jenkins-slave', cloud: 'kubernetes', containers: [ \n\tcontainerTemplate( \n\t\tname: 'jnlp',\n\t\timage: \"192.168.188.119:85/library/jenkins-slave-maven:latest\"\n\t),\n\tcontainerTemplate(\n\t\tname: 'docker',\n\t\timage: \"docker:stable\",\n\t\tttyEnabled: true,\n\t\tcommand: 'cat'\n\t),\n  ],\n  volumes: [\n    hostPathVolume(mountPath: '/var/run/docker.sock', hostPath:'/var/run/docker.sock'),\n\tnfsVolume(mountPath: '/usr/local/apache-maven/repo', serverAddress: '192.168.188.116' , serverPath: '/opt/nfs/maven'),\n\t],\n)\n{  \n  node(\"jenkins-slave\"){ \n\t   // 第一步\n\t   stage('拉取代码'){ \n\t\t  checkout([$class: 'GitSCM', branches: [[name: '${branch}']],\n\t\t  userRemoteConfigs: [[credentialsId: \"${git_auth}\", url: \"${git_address}\"]]])\n\t   }\n\t   // 第二步\n\t   stage('公共工程代码编译'){ \n\t\t\t//编译并安装公共工程\n\t\t  sh \"mvn -f tensquare_common clean install\"\n\t   }\n\t   // 第三步\n\t   stage('构建镜像，部署项目'){ \n\t\t\t //把选择的项目信息转为数组\n\t\t\t def selectedProjects = \"${project_name}\".split(',')\n\t\t\t \n\t\t\t for(int i=0;i\u003cselectedProjects.size();i++){ \n\t\t\t\t//取出每个项目的名称和端口 \n\t\t\t\tdef currentProject = selectedProjects[i];\n\t\t\t\t//项目名称\n\t\t\t\tdef currentProjectName = currentProject.split('@')[0]\n\t\t\t\t//项目启动端口\n\t\t\t\tdef currentProjectPort = currentProject.split('@')[1]\n\n\t\t\t\t//定义镜像名称\n\t\t\t\tdef imageName = \"${currentProjectName}:${tag}\"\n\n\t\t\t\t//编译，构建本地镜像\n\t\t\t\tsh \"mvn -f ${currentProjectName} clean package dockerfile:build\"\n\n\t\t\t\tcontainer('docker') { \n\n\t\t\t\t\t//给镜像打标签\n\t\t\t\t\tsh \"docker tag ${imageName} ${harbor_url}/${harbor_project_name}/${imageName}\"\n\t\n\t\t\t\t\t//登录Harbor，并上传镜像\n\t\t\t\t\twithCredentials([usernamePassword(credentialsId:\"${harbor_auth}\", passwordVariable: 'password', usernameVariable: 'username')])\n\t\t\t\t{ \n\t\t\t\t\t\t  //登录\n\t\t\t\t\t\t  sh \"docker login -u ${username} -p ${password} ${harbor_url}\"\n\t\t\t\t\t\t  \n\t\t\t\t\t\t  //上传镜像\n\t\t\t\t\t\t  sh \"docker push ${harbor_url}/${harbor_project_name}/${imageName}\"\n\t\t\t\t\t}\n\t\t\t\t\t//删除本地镜像\n\t\t\t\t\tsh \"docker rmi -f ${imageName}\"\n\t\t\t\t\tsh \"docker rmi -f ${harbor_url}/${harbor_project_name}/${imageName}\"\n\t\t\t\t}\n\t\t\t\tdef deploy_image_name = \"${harbor_url}/${harbor_project_name}/${imageName}\"\n\n\t\t\t\t//部署到K8S\n\t\t\t\tsh \"\"\"\n\t\t\t\t\t\tsed -i 's#\\$IMAGE_NAME#${deploy_image_name}#' ${currentProjectName}/deploy.yml \n\t\t\t\t\t\tsed -i 's#\\$SECRET_NAME#${secret_name}#' ${currentProjectName}/deploy.yml \n\t\t\t\t   \"\"\"\n\n\t\t\t\t   kubernetesDeploy configs: \"${currentProjectName}/deploy.yml\", kubeconfigId: \"${k8s_auth}\"\n\n\t\t\t}\n\t\t}\n\t}\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230326223457-jzq5lxv",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230326223457-jzq5lxv"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "完成eureka集群部署到Kubernetes"
				}
			]
		},
		{
			"ID": "20230326223457-yla5tyt",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230326223457-yla5tyt"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "我们在eureka项目下创建一个"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "deploy.yml"
				},
				{
					"Type": "NodeText",
					"Data": "文件"
				}
			]
		},
		{
			"ID": "20230326223457-hrdmt2m",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230326223457-hrdmt2m",
				"updated": "20230326224351"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "eWFtbA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "---\napiVersion: v1\nkind: Service\nmetadata:\n  name: eureka\n  labels:\n    app: eureka\nspec:\n  type: NodePort\n  ports:\n    - port: 10086\n      name: eureka\n      targetPort: 10086\n  selector:\n    app: eureka\n---\napiVersion: apps/v1\nkind: StatefulSet\nmetadata:\n  name: eureka\nspec:\n  serviceName: \"eureka\"\n  replicas: 2\n  selector:\n    matchLabels:\n      app: eureka\n  template:\n    metadata:\n      labels:\n        app: eureka\n    spec:\n      imagePullSecrets:\n        - name: $SECRET_NAME\n      containers:\n        - name: eureka\n          image: $IMAGE_NAME\n          ports:\n            - containerPort: 10086\n          env:\n            - name: MY_POD_NAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: metadata.name\n            - name: EUREKA_SERVER\n              value: \"http://eureka-0.eureka:10086/eureka/,http://eureka-1.eureka:10086/eureka/\"\n            - name: EUREKA_INSTANCE_HOSTNAME\n              value: ${ MY_POD_NAME}.eureka\n  podManagementPolicy: \"Parallel\"\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230326223457-6nfu2x9",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230326223457-6nfu2x9"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "接着更改eruka的配置文件"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "application.yml"
				}
			]
		},
		{
			"ID": "20230326223457-rv2jiv5",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230326223457-rv2jiv5",
				"updated": "20230326224355"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "eWFtbA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "server:\n  port: ${ PORT:10086}\nspring:\n  application:\n    name: eureka\n\neureka:\n  server:\n    # 续期时间，即扫描失效服务的间隔时间（缺省为60*1000ms）\n    eviction-interval-timer-in-ms: 5000\n    enable-self-preservation: false\n    use-read-only-response-cache: false\n  client:\n    # eureka client间隔多久去拉取服务注册信息 默认30s\n    registry-fetch-interval-seconds: 5\n    serviceUrl:\n      defaultZone: ${ EUREKA_SERVER:http://127.0.0.1:${ server.port}/eureka/}\n  instance:\n    # 心跳间隔时间，即发送一次心跳之后，多久在发起下一次（缺省为30s）\n    lease-renewal-interval-in-seconds: 5\n    # 在收到一次心跳之后，等待下一次心跳的空档时间，大于心跳间隔即可，即服务续约到期时间（缺省为90s）\n    lease-expiration-duration-in-seconds: 10\n    instance-id: ${ EUREKA_INSTANCE_HOSTNAME:${ spring.application.name}}:${ server.port}@${ random.long(1000000,9999999)}\n    hostname: ${ EUREKA_INSTANCE_HOSTNAME:${ spring.application.name}}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230326223457-ak2jk81",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230326223457-ak2jk81"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "提交代码到仓库\n "
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "在这里插入图片描述"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/20210514000442599-20230326223456-x7gn1bs.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n 尝试构建eruka服务器，但报错显示找不到"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "secret_name"
				},
				{
					"Type": "NodeText",
					"Data": "这个属性\n "
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "在这里插入图片描述"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/20210514000950195-20230326223457-tyjl4yo.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n 修改脚本定义一个secret_name的变量\n "
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "在这里插入图片描述"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/20210514001357731-20230326223457-6lzpn5o.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n 然后我们去制作凭证"
				}
			]
		},
		{
			"ID": "20230326223457-wcaugp7",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230326223457-wcaugp7",
				"updated": "20230326223722"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YmFzaA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "首先在k8s主节点登录harbor仓库\ndocker login -u maomao -p Xiaotian123 192.168.188.119:85\n\n然后使用一串命令生成证书\nkubectl create secret docker-registry registry-auth-secret --docker-server=192.168.188.119:85 --docker-username=maomao --docker-password=Xiaotian123 --docker-email=123@qq.com\n\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230326223457-q0n7vao",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230326223457-q0n7vao"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "在这里插入图片描述"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/20210514001747109-20230326223456-o37rl37.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n 查看证书"
				}
			]
		},
		{
			"ID": "20230326223457-d9hk61y",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230326223457-d9hk61y",
				"updated": "20230326223718"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YmFzaA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "kubectl get secret\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230326223457-p7gx1eu",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230326223457-p7gx1eu"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "在这里插入图片描述"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/20210514001821477-20230326223457-tzfubwb.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n 然后再次构建eruka服务器\n "
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "在这里插入图片描述"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/20210514001915678-20230326223456-mkvqfd3.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n 构建成功之后，可以在主节点查看信息"
				}
			]
		},
		{
			"ID": "20230326223457-8srrz02",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230326223457-8srrz02"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "在这里插入图片描述"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/2021051400360013-20230326223456-44aoejs.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20230326223457-o5hju32",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230326223457-o5hju32",
				"updated": "20230326223703"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YmFzaA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "kubectl get pods\n\n查看端口\nkubectl get svc\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230326223457-offs36p",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230326223457-offs36p"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "在这里插入图片描述"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/20210514004103917-20230326223456-gfp80nc.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n "
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "在这里插入图片描述"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/20210514004135836-20230326223457-pqdsqe4.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n "
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "在这里插入图片描述"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/20210514004529763-20230326223457-20f1jtj.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20230326223457-xzdv0n1",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230326223457-xzdv0n1"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "我们可以通过端口访问 所有k8s服务器ip"
				}
			]
		},
		{
			"ID": "20230326223457-m966n87",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230326223457-m966n87"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "在这里插入图片描述"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/20210514005147936-20230326223456-s3ho69l.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n "
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "在这里插入图片描述"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/20210514005156196-20230326223457-upd55lz.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "在这里插入图片描述"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/20210514005202228-20230326223457-iq9wg0c.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20230326223457-iruwpan",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230326223457-iruwpan"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "在这里插入图片描述"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/20210514005213833-20230326223457-cm5kpbe.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20230326223457-jejumjs",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230326223457-jejumjs"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "错误排查"
				}
			]
		},
		{
			"ID": "20230326223457-m5k69av",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230326223457-m5k69av"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "在这里插入图片描述"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/20210514002811780-20230326223456-6qg9mew.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n 经过我的深思熟虑，发现是密钥的问题\n 因为直接复制，导致有些地方本来是一行的结果变成了两行\n "
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "在这里插入图片描述"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/20210514002913764-20230326223456-70kdc72.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n 将换行删除就行了\n "
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "在这里插入图片描述"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/202105140029320-20230326223457-8f5hd7j.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20230326223457-redzkzm",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230326223457-redzkzm"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "结果又错了\n "
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "在这里插入图片描述"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/20210514003255262-20230326223457-kr1hs3e.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n 我干脆直接把密钥文件拷贝到自己电脑上进行复制，这样格式就不会错了"
				}
			]
		},
		{
			"ID": "20230326223457-t0pg4xo",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230326223457-t0pg4xo"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "记录一下构建过程"
				}
			]
		},
		{
			"ID": "20230326223457-i03b8hg",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230326223457-i03b8hg",
				"updated": "20230326224417"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YmFzaA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "Started by user maomao\nRunning in Durability level: MAX_SURVIVABILITY\n[Pipeline] Start of Pipeline\n[Pipeline] podTemplate\n[Pipeline] { \n[Pipeline] node\nCreated Pod: kubernetes kube-ops/jenkins-slave-dlxsx-7pxm1\nAgent jenkins-slave-dlxsx-7pxm1 is provisioned from template jenkins-slave-dlxsx\n---\napiVersion: \"v1\"\nkind: \"Pod\"\nmetadata:\n  annotations:\n    buildUrl: \"http://jenkins.kube-ops.svc.cluster.local:8080/job/tensquare__back/20/\"\n    runUrl: \"job/tensquare__back/20/\"\n  labels:\n    jenkins: \"slave\"\n    jenkins/label-digest: \"5059d2cd0054f9fe75d61f97723d98ab1a42d71a\"\n    jenkins/label: \"jenkins-slave\"\n  name: \"jenkins-slave-dlxsx-7pxm1\"\nspec:\n  containers:\n  - env:\n    - name: \"JENKINS_SECRET\"\n      value: \"********\"\n    - name: \"JENKINS_AGENT_NAME\"\n      value: \"jenkins-slave-dlxsx-7pxm1\"\n    - name: \"JENKINS_NAME\"\n      value: \"jenkins-slave-dlxsx-7pxm1\"\n    - name: \"JENKINS_AGENT_WORKDIR\"\n      value: \"/home/jenkins/agent\"\n    - name: \"JENKINS_URL\"\n      value: \"http://jenkins.kube-ops.svc.cluster.local:8080/\"\n    image: \"192.168.188.119:85/library/jenkins-slave-maven:latest\"\n    imagePullPolicy: \"IfNotPresent\"\n    name: \"jnlp\"\n    resources:\n      limits: { }\n      requests: { }\n    tty: false\n    volumeMounts:\n    - mountPath: \"/usr/local/apache-maven/repo\"\n      name: \"volume-1\"\n      readOnly: false\n    - mountPath: \"/var/run/docker.sock\"\n      name: \"volume-0\"\n      readOnly: false\n    - mountPath: \"/home/jenkins/agent\"\n      name: \"workspace-volume\"\n      readOnly: false\n  - command:\n    - \"cat\"\n    image: \"docker:stable\"\n    imagePullPolicy: \"IfNotPresent\"\n    name: \"docker\"\n    resources:\n      limits: { }\n      requests: { }\n    tty: true\n    volumeMounts:\n    - mountPath: \"/usr/local/apache-maven/repo\"\n      name: \"volume-1\"\n      readOnly: false\n    - mountPath: \"/var/run/docker.sock\"\n      name: \"volume-0\"\n      readOnly: false\n    - mountPath: \"/home/jenkins/agent\"\n      name: \"workspace-volume\"\n      readOnly: false\n  nodeSelector:\n    kubernetes.io/os: \"linux\"\n  restartPolicy: \"Never\"\n  volumes:\n  - hostPath:\n      path: \"/var/run/docker.sock\"\n    name: \"volume-0\"\n  - name: \"volume-1\"\n    nfs:\n      path: \"/opt/nfs/maven\"\n      readOnly: false\n      server: \"192.168.188.116\"\n  - emptyDir:\n      medium: \"\"\n    name: \"workspace-volume\"\n\nRunning on jenkins-slave-dlxsx-7pxm1 in /home/jenkins/agent/workspace/tensquare__back\n[Pipeline] { \n[Pipeline] stage\n[Pipeline] {  (拉取代码)\n[Pipeline] checkout\nThe recommended git tool is: NONE\nusing credential bb5a1b2e-8dfa-4557-a79b-66d0f1f05f5c\nCloning the remote Git repository\nCloning repository http://192.168.188.120:82/maomao_group/tensquare_back.git\n \u003e git init /home/jenkins/agent/workspace/tensquare__back # timeout=10\nFetching upstream changes from http://192.168.188.120:82/maomao_group/tensquare_back.git\n \u003e git --version # timeout=10\n \u003e git --version # 'git version 2.20.1'\nusing GIT_ASKPASS to set credentials gitlab-http-auth\n \u003e git fetch --tags --force --progress -- http://192.168.188.120:82/maomao_group/tensquare_back.git +refs/heads/*:refs/remotes/origin/* # timeout=10\nAvoid second fetch\nChecking out Revision a35a2f630f44b425c52aa483aef1b7dc64539940 (origin/master)\n \u003e git config remote.origin.url http://192.168.188.120:82/maomao_group/tensquare_back.git # timeout=10\n \u003e git config --add remote.origin.fetch +refs/heads/*:refs/remotes/origin/* # timeout=10\n \u003e git rev-parse origin/master^{ commit} # timeout=10\n \u003e git config core.sparsecheckout # timeout=10\n \u003e git checkout -f a35a2f630f44b425c52aa483aef1b7dc64539940 # timeout=10\nCommit message: \"K8S\"\n \u003e git rev-list --no-walk a35a2f630f44b425c52aa483aef1b7dc64539940 # timeout=10\n[Pipeline] }\n[Pipeline] // stage\n[Pipeline] stage\n[Pipeline] {  (公共工程代码编译)\n[Pipeline] sh\n+ mvn -f tensquare_common clean install\n[INFO] Scanning for projects...\n[INFO] \n[INFO] -------------------\u003c com.tensquare:tensquare_common \u003e-------------------\n[INFO] Building tensquare_common 1.0-SNAPSHOT\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- maven-clean-plugin:3.0.0:clean (default-clean) @ tensquare_common ---\n[INFO] Deleting /home/jenkins/agent/workspace/tensquare__back/tensquare_common/target\n[INFO] \n[INFO] --- maven-resources-plugin:3.0.1:resources (default-resources) @ tensquare_common ---\n[INFO] Using 'UTF-8' encoding to copy filtered resources.\n[INFO] skip non existing resourceDirectory /home/jenkins/agent/workspace/tensquare__back/tensquare_common/src/main/resources\n[INFO] skip non existing resourceDirectory /home/jenkins/agent/workspace/tensquare__back/tensquare_common/src/main/resources\n[INFO] \n[INFO] --- maven-compiler-plugin:3.7.0:compile (default-compile) @ tensquare_common ---\n[INFO] Changes detected - recompiling the module!\n[INFO] Compiling 5 source files to /home/jenkins/agent/workspace/tensquare__back/tensquare_common/target/classes\n[INFO] \n[INFO] --- maven-resources-plugin:3.0.1:testResources (default-testResources) @ tensquare_common ---\n[INFO] Using 'UTF-8' encoding to copy filtered resources.\n[INFO] skip non existing resourceDirectory /home/jenkins/agent/workspace/tensquare__back/tensquare_common/src/test/resources\n[INFO] \n[INFO] --- maven-compiler-plugin:3.7.0:testCompile (default-testCompile) @ tensquare_common ---\n[INFO] No sources to compile\n[INFO] \n[INFO] --- maven-surefire-plugin:2.21.0:test (default-test) @ tensquare_common ---\n[INFO] No tests to run.\n[INFO] \n[INFO] --- maven-jar-plugin:3.0.2:jar (default-jar) @ tensquare_common ---\n[INFO] Building jar: /home/jenkins/agent/workspace/tensquare__back/tensquare_common/target/tensquare_common-1.0-SNAPSHOT.jar\n[INFO] \n[INFO] --- maven-install-plugin:2.5.2:install (default-install) @ tensquare_common ---\n[INFO] Installing /home/jenkins/agent/workspace/tensquare__back/tensquare_common/target/tensquare_common-1.0-SNAPSHOT.jar to /usr/local/apache-maven/repo/com/tensquare/tensquare_common/1.0-SNAPSHOT/tensquare_common-1.0-SNAPSHOT.jar\n[INFO] Installing /home/jenkins/agent/workspace/tensquare__back/tensquare_common/pom.xml to /usr/local/apache-maven/repo/com/tensquare/tensquare_common/1.0-SNAPSHOT/tensquare_common-1.0-SNAPSHOT.pom\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  4.069 s\n[INFO] Finished at: 2021-05-13T16:34:40Z\n[INFO] ------------------------------------------------------------------------\n[Pipeline] }\n[Pipeline] // stage\n[Pipeline] stage\n[Pipeline] {  (构建镜像，部署项目)\n[Pipeline] sh\n+ mvn -f tensquare_eureka_server clean package dockerfile:build\n[INFO] Scanning for projects...\n[INFO] \n[INFO] ---------------\u003c com.tensquare:tensquare_eureka_server \u003e----------------\n[INFO] Building tensquare_eureka_server 1.0-SNAPSHOT\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- maven-clean-plugin:3.0.0:clean (default-clean) @ tensquare_eureka_server ---\n[INFO] Deleting /home/jenkins/agent/workspace/tensquare__back/tensquare_eureka_server/target\n[INFO] \n[INFO] --- maven-resources-plugin:3.0.1:resources (default-resources) @ tensquare_eureka_server ---\n[INFO] Using 'UTF-8' encoding to copy filtered resources.\n[INFO] Copying 1 resource\n[INFO] Copying 0 resource\n[INFO] \n[INFO] --- maven-compiler-plugin:3.7.0:compile (default-compile) @ tensquare_eureka_server ---\n[INFO] Changes detected - recompiling the module!\n[INFO] Compiling 1 source file to /home/jenkins/agent/workspace/tensquare__back/tensquare_eureka_server/target/classes\n[INFO] \n[INFO] --- maven-resources-plugin:3.0.1:testResources (default-testResources) @ tensquare_eureka_server ---\n[INFO] Using 'UTF-8' encoding to copy filtered resources.\n[INFO] skip non existing resourceDirectory /home/jenkins/agent/workspace/tensquare__back/tensquare_eureka_server/src/test/resources\n[INFO] \n[INFO] --- maven-compiler-plugin:3.7.0:testCompile (default-testCompile) @ tensquare_eureka_server ---\n[INFO] No sources to compile\n[INFO] \n[INFO] --- maven-surefire-plugin:2.21.0:test (default-test) @ tensquare_eureka_server ---\n[INFO] No tests to run.\n[INFO] \n[INFO] --- maven-jar-plugin:3.0.2:jar (default-jar) @ tensquare_eureka_server ---\n[INFO] Building jar: /home/jenkins/agent/workspace/tensquare__back/tensquare_eureka_server/target/tensquare_eureka_server-1.0-SNAPSHOT.jar\n[INFO] \n[INFO] --- spring-boot-maven-plugin:2.0.1.RELEASE:repackage (default) @ tensquare_eureka_server ---\n[INFO] \n[INFO] --- dockerfile-maven-plugin:1.3.6:build (default-cli) @ tensquare_eureka_server ---\n[INFO] Building Docker context /home/jenkins/agent/workspace/tensquare__back/tensquare_eureka_server\n[INFO] \n[INFO] Image will be built as tensquare_eureka_server:latest\n[INFO] \n[INFO] Step 1/5 : FROM openjdk:8-jdk-alpine\n[INFO] \n[INFO] Pulling from library/openjdk\n[INFO] Digest: sha256:94792824df2df33402f201713f932b58cb9de94a0cd524164a0f2283343547b3\n[INFO] Status: Image is up to date for openjdk:8-jdk-alpine\n[INFO]  ---\u003e a3562aa0b991\n[INFO] Step 2/5 : ARG JAR_FILE\n[INFO] \n[INFO]  ---\u003e Using cache\n[INFO]  ---\u003e a2a3b3df4f15\n[INFO] Step 3/5 : COPY ${JAR_FILE} app.jar\n[INFO] \n[INFO]  ---\u003e 1b476689026f\n[INFO] Step 4/5 : EXPOSE 10086\n[INFO] \n[INFO]  ---\u003e Running in 68e029b5bdac\n[INFO] Removing intermediate container 68e029b5bdac\n[INFO]  ---\u003e f76e827eb058\n[INFO] Step 5/5 : ENTRYPOINT [\"java\",\"-jar\",\"/app.jar\"]\n[INFO] \n[INFO]  ---\u003e Running in 92ad4dcb6596\n[INFO] Removing intermediate container 92ad4dcb6596\n[INFO]  ---\u003e ce5f4598f452\n[INFO] Successfully built ce5f4598f452\n[INFO] Successfully tagged tensquare_eureka_server:latest\n[INFO] \n[INFO] Detected build of image with id ce5f4598f452\n[INFO] Building jar: /home/jenkins/agent/workspace/tensquare__back/tensquare_eureka_server/target/tensquare_eureka_server-1.0-SNAPSHOT-docker-info.jar\n[INFO] Successfully built tensquare_eureka_server:latest\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  28.550 s\n[INFO] Finished at: 2021-05-13T16:35:10Z\n[INFO] ------------------------------------------------------------------------\n[Pipeline] container\n[Pipeline] { \n[Pipeline] sh\n+ docker tag tensquare_eureka_server:latest 192.168.188.119:85/tensquare/tensquare_eureka_server:latest\n[Pipeline] withCredentials\nMasking supported pattern matches of $username or $password\n[Pipeline] { \n[Pipeline] sh\nWarning: A secret was passed to \"sh\" using Groovy String interpolation, which is insecure.\n\t\t Affected argument(s) used the following variable(s): [password, username]\n\t\t See https://jenkins.io/redirect/groovy-string-interpolation for details.\n+ docker login -u **** -p **** 192.168.188.119:85\nWARNING! Using --password via the CLI is insecure. Use --password-stdin.\nWARNING! Your password will be stored unencrypted in /root/.docker/config.json.\nConfigure a credential helper to remove this warning. See\nhttps://docs.docker.com/engine/reference/commandline/login/#credentials-store\n\nLogin Succeeded\n[Pipeline] sh\n+ docker push 192.168.188.119:85/tensquare/tensquare_eureka_server:latest\nThe push refers to repository [192.168.188.119:85/tensquare/tensquare_eureka_server]\n6b8a8e1926e4: Preparing\nceaf9e1ebef5: Preparing\n9b9b7f3d56a0: Preparing\nf1b5933fe4b5: Preparing\nf1b5933fe4b5: Layer already exists\n9b9b7f3d56a0: Layer already exists\nceaf9e1ebef5: Layer already exists\n6b8a8e1926e4: Pushed\nlatest: digest: sha256:584ab9d6bd684636dfef55c2a2ac3d36d445b287f5a0a89a6694823655f909b1 size: 1159\n[Pipeline] }\n[Pipeline] // withCredentials\n[Pipeline] sh\n+ docker rmi -f tensquare_eureka_server:latest\nUntagged: tensquare_eureka_server:latest\n[Pipeline] sh\n+ docker rmi -f 192.168.188.119:85/tensquare/tensquare_eureka_server:latest\nUntagged: 192.168.188.119:85/tensquare/tensquare_eureka_server:latest\nUntagged: 192.168.188.119:85/tensquare/tensquare_eureka_server@sha256:584ab9d6bd684636dfef55c2a2ac3d36d445b287f5a0a89a6694823655f909b1\nDeleted: sha256:ce5f4598f452e300f537deacab64ee958f93a7c39ced0ff71f360f9c4d5d7572\nDeleted: sha256:f76e827eb0580d99d60f8709608850589404666611fae1068e4e2231d100e6a3\nDeleted: sha256:1b476689026f842092261a4d524043b6c4aa754e6b7b68c25501269fa1e17dce\nDeleted: sha256:731b8259434bd270843c034ed36011581a2371daf28f682a6e3d0fa8b713545a\n[Pipeline] }\n[Pipeline] // container\n[Pipeline] sh\n+ sed -i s#$IMAGE_NAME#192.168.188.119:85/tensquare/tensquare_eureka_server:latest# tensquare_eureka_server/deploy.yml\n+ sed -i s#$SECRET_NAME#registry-auth-secret# tensquare_eureka_server/deploy.yml\n[Pipeline] kubernetesDeploy\nStarting Kubernetes deployment\nLoading configuration: /home/jenkins/agent/workspace/tensquare__back/tensquare_eureka_server/deploy.yml\nFinished Kubernetes deployment\n[Pipeline] }\n[Pipeline] // stage\n[Pipeline] }\n[Pipeline] // node\n[Pipeline] }\n[Pipeline] // podTemplate\n[Pipeline] End of Pipeline\nFinished: SUCCESS\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230326223457-ryuq3m7",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230326223457-ryuq3m7"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "网关集群部署到k8s"
				}
			]
		},
		{
			"ID": "20230326223457-v01264p",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230326223457-v01264p"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "更改zull的配置，将地址换成这个"
				}
			]
		},
		{
			"ID": "20230326223457-mhwmo0t",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230326223457-mhwmo0t",
				"updated": "20230326224421"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "eWFtbA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "defaultZone: http://eureka-0.eureka:10086/eureka/,http://eureka-1.eureka:10086/eureka/\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230326223457-y1d3dgr",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230326223457-y1d3dgr"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "编写一个deploy.yml文件"
				}
			]
		},
		{
			"ID": "20230326223457-0oqvycb",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230326223457-0oqvycb",
				"updated": "20230326231143"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "eWFtbA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "---\napiVersion: v1\nkind: Service\nmetadata:\n  name: zuul\n  labels:\n    app: zuul\nspec:\n  type: NodePort\n  ports:\n    - port: 10020\n      name: zuul\n      targetPort: 10020\n  selector:\n    app: zuul\n---\napiVersion: apps/v1\nkind: StatefulSet\nmetadata:\n  name: zuul\nspec:\n  serviceName: \"zuul\"\n  replicas: 2\n  selector:\n    matchLabels:\n      app: zuul\n  template:\n    metadata:\n      labels:\n        app: zuul\n    spec:\n      imagePullSecrets:\n        - name: $SECRET_NAME\n      containers:\n        - name: zuul\n          image: $IMAGE_NAME\n          ports:\n            - containerPort: 10020\n  podManagementPolicy: \"Parallel\"\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230326223457-4xoamx7",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230326223457-4xoamx7"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "去进行任务构建\n "
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "在这里插入图片描述"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/20210514010107481-20230326223456-rgfdt8t.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n 报错了\n "
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "在这里插入图片描述"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/20210514010434852-20230326223456-1q4klsy.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n 原来时需要 =手动上传父工程依赖到NFS的Maven共享仓库目录中="
				}
			]
		},
		{
			"ID": "20230326223457-nk71z0f",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230326223457-nk71z0f",
				"updated": "20230326231148"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YmFzaA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "[root@master tensquare]# pwd\n/opt/nfs/maven/com/tensquare\n\n[root@master tensquare]# mv /root/tensquare_parent/ ./\n[root@master tensquare]# ls\ntensquare_common  tensquare_parent\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230326223457-9vfb4m4",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230326223457-9vfb4m4"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "上传完父工程依赖之后再次进行构建\n "
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "在这里插入图片描述"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/20210514011730938-20230326223456-lkci79t.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20230326223457-ar5enck",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230326223457-ar5enck"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "已经有两个网关了\n "
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "在这里插入图片描述"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/2021051401175525-20230326223457-u119zjn.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n "
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "在这里插入图片描述"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/20210514011812456-20230326223457-bh6m67w.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20230326223457-v7ka7k1",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230326223457-v7ka7k1"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "在这里插入图片描述"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/20210514011853739-20230326223456-jo7hyg9.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		}
	]
}