{
	"ID": "20230621154701-4f7ixq1",
	"Spec": "1",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20230621154701-4f7ixq1",
		"title": "Keepalived脑裂的解决和预防(附脚本)",
		"updated": "20230626015854"
	},
	"Children": [
		{
			"ID": "20230621154701-kiw9sy5",
			"Type": "NodeThematicBreak",
			"Properties": {
				"id": "20230621154701-kiw9sy5",
				"updated": "20230621154701"
			}
		},
		{
			"ID": "20230621154701-aujyofw",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20230621154701-aujyofw",
				"updated": "20230621154701"
			},
			"Children": [
				{
					"ID": "20230621154701-xxzp4fg",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230621154701-xxzp4fg",
						"updated": "20230621154701"
					},
					"Children": [
						{
							"ID": "20230621154701-plybrt1",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230621154701-plybrt1",
								"updated": "20230621154701"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "a",
									"TextMarkAHref": "https://mp.weixin.qq.com/s/ij5Tq8l-86qK0JSZigWaXw",
									"TextMarkTextContent": "https://mp.weixin.qq.com/s/ij5Tq8l-86qK0JSZigWaXw - 微信公众平台"
								}
							]
						}
					]
				},
				{
					"ID": "20230621154701-wn2xy1y",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230621154701-wn2xy1y",
						"updated": "20230621154701"
					},
					"Children": [
						{
							"ID": "20230621154701-anlp455",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230621154701-anlp455",
								"updated": "20230621154701"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "在实际生产环境中，我们可以从以下几个方面来防止裂脑问题的发生：同时使用串行电缆和以太网电缆连接，同时用两条心"
								}
							]
						}
					]
				},
				{
					"ID": "20230621154701-78dq3g7",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230621154701-78dq3g7",
						"updated": "20230621154701"
					},
					"Children": [
						{
							"ID": "20230621154701-cbdyjnn",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230621154701-cbdyjnn",
								"updated": "20230621154701"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "2023-06-21 15:47:01"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230621154701-qc1s1g3",
			"Type": "NodeThematicBreak",
			"Properties": {
				"id": "20230621154701-qc1s1g3",
				"updated": "20230621154701"
			}
		},
		{
			"ID": "20230621154701-b2jwblq",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230621154701-b2jwblq",
				"updated": "20230626015841"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​​"
				}
			]
		},
		{
			"ID": "20230621154701-xxxvgcw",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230621154701-xxxvgcw",
				"updated": "20230621154701"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "在实际生产环境中"
				},
				{
					"Type": "NodeText",
					"Data": "​，我们可以从以下几个方面来防止裂脑问题的发生："
				}
			]
		},
		{
			"ID": "20230621154701-2v8qpgc",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230621154701-2v8qpgc",
				"updated": "20230621154701"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "同时使用串行电缆和以太网电缆连接，同时用两条心跳线路，这样一条线路坏了，另一个还是好的，依然能传送心跳消息。"
				}
			]
		},
		{
			"ID": "20230621154701-9ywqa9j",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230621154701-9ywqa9j",
				"updated": "20230621154701"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "当检测到裂脑时强行关闭一个心跳节点（这个功能需特殊设备支持，如Stonith、feyce）。相当于备节点接收不到心跳消患，通过单独的线路发送关机命令关闭主节点的电源。"
				}
			]
		},
		{
			"ID": "20230621154701-55bz5u1",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230621154701-55bz5u1",
				"updated": "20230621154701"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "做好对裂脑的监控报警（如邮件及手机短信等或值班）.在问题发生时人为第一时间介入仲裁，降低损失。例如，百度的监控报警短倍就有上行和下行的区别。报警消息发送到管理员手机上，管理员可以通过手机回复对应数字或简单的字符串操作返回给服务器.让服务器根据指令自动处理相应故障，这样解决故障的时间更短."
				}
			]
		},
		{
			"ID": "20230621154701-olxol6a",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230621154701-olxol6a",
				"updated": "20230621154701"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "当然，在实施高可用方案时，要根据业务实际需求确定是否能容忍这样的损失。对于一般的网站常规业务.这个损失是可容忍的。"
				}
			]
		},
		{
			"ID": "20230621154701-7tgicu2",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230621154701-7tgicu2",
				"updated": "20230621154701"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "多节点集群中，可以通过增加仲裁的机制，确定谁该获得资源，这里面有几个参考的思路："
				}
			]
		},
		{
			"ID": "20230621154701-pjjh99m",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230621154701-pjjh99m",
				"updated": "20230621154701"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "      1.增加一个仲裁机制。例如设置参考的IP，当心跳完全断开的时候，2个节点各自都ping一下参考的IP，不同则表明断点就出现在本段，这样就主动放弃竞争，让能够ping通参考IP的一端去接管服务。      \n\n      2.通过第三方软件仲裁谁该获得资源，这个在阿里有类似的软件应用\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230621154701-0f56dc3",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230621154701-0f56dc3",
				"updated": "20230621154701"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "启用磁盘锁。正在服务一方锁住共享磁盘，脑裂发生的时候，让对方完全抢不走共享的磁盘资源。但使用锁磁盘也会有一个不小的问题，如果占用共享盘的乙方不主动解锁，另一方就永远得不到共享磁盘。现实中介入服务节点突然死机或者崩溃，另一方就永远不可能执行解锁命令。后备节点也就截关不了共享的资源和应用服务。于是有人在HA中涉及了“智能”锁，正在服务的一方只在发现心跳线全部断开时才启用磁盘锁，平时就不上锁了"
				}
			]
		},
		{
			"ID": "20230621154701-hwjydc8",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230621154701-hwjydc8",
				"updated": "20230621154701"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "报警报在服务器接管之前，给人员处理留足够的时间就是1分钟内报警了，但是服务器不接管，而是5分钟之后接管，接管的时间较长。数据不会丢失，但就是会导致用户无法写数据。报警后，不直接自动服务器接管，而是由人员接管。"
				}
			]
		},
		{
			"ID": "20230621154701-85onrkc",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230621154701-85onrkc",
				"updated": "20230621154701"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "检查处理脚本（供参考）"
				}
			]
		},
		{
			"ID": "20230621154701-6u9zs3k",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230621154701-6u9zs3k",
				"updated": "20230621154701"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "注："
				}
			]
		},
		{
			"ID": "20230621154701-l3k2j2z",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230621154701-l3k2j2z",
				"updated": "20230621154701"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "1.脚本无法解决服务器主备之间因为防火墙，配置等产生的脑裂问题（安装配置时注意检查，keepalived服务正常运行后再加入检查处理脚本），脚本只能处理自身网络问题产生的脑裂，必须保证网关服务器稳定"
				}
			]
		},
		{
			"ID": "20230621154701-t5k1thc",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230621154701-t5k1thc",
				"updated": "20230621154701"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "2.备机获取vip有2种情况:A主机keepalived服务发生故障vip漂移（非脑裂）;B主机通信异常vip漂移（脑裂）。"
				}
			]
		},
		{
			"ID": "20230621154701-y515vqr",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230621154701-y515vqr",
				"updated": "20230621154701"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "脚本使用机制（引入第三方仲裁），步骤："
				}
			]
		},
		{
			"ID": "20230621154701-k8cepfv",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230621154701-k8cepfv",
				"updated": "20230621154701"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "1.查看是否可获取vip，未获取：判断keepalived服务运行状态，运行中不操作，未运行重新启动，结束脚本。"
				}
			]
		},
		{
			"ID": "20230621154701-54ir55d",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230621154701-54ir55d",
				"updated": "20230621154701"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "2.服务器周期性地ping一下网关（第三方仲裁ip地址），如果ping通:判断keepalived服务运行状态，运行中不操作，未运行重新启动，结束脚本;如果ping不通则认为自身有问题，累计次数达到阈值，关闭keepalived。"
				}
			]
		},
		{
			"ID": "20230621154701-kexujdx",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230621154701-kexujdx",
				"updated": "20230621154701"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "脚本执行方式："
				}
			]
		},
		{
			"ID": "20230621154701-5dk3rps",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230621154701-5dk3rps",
				"updated": "20230621154701"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "1.借助keepalived提供的vrrp_script及track_script实现（脚本内keepalived服务如果被关闭，脚本将不在执行,重新启动不生效），配置："
				}
			]
		},
		{
			"ID": "20230621154701-py4tv5s",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230621154701-py4tv5s",
				"updated": "20230621154701"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "...\nvrrp_script check_local {\nscript \"/usr/local/src/check_gateway.sh 192.168.1.198\" #192.168.1.198 需要检查的vip\ninterval 10 #10秒一次\n...\ntrack_script {\ncheck_local\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230621154701-nng8ylu",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230621154701-nng8ylu",
				"updated": "20230621154701"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "2.linux定时任务（查看 tailf /var/spool/mail/root）"
				}
			]
		},
		{
			"ID": "20230621154701-oefhqge",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230621154701-oefhqge",
				"updated": "20230621154701"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "crontab -e"
				}
			]
		},
		{
			"ID": "20230621154701-fbb19v7",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230621154701-fbb19v7",
				"updated": "20230621154701"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "#1分1次 延迟10秒实现(时间自定义) keepalived服务脑裂脚本\n* * * * * sleep 10; bash /usr/local/src/check_gateway.sh 192.168.1.198\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230621154701-2tywsqu",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230621154701-2tywsqu",
				"updated": "20230621154701"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "脚本内容（根据实际环境修改网关ip，是否重新启动keepalived服务）："
				}
			]
		},
		{
			"ID": "20230621154701-n3ykohu",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230621154701-n3ykohu",
				"updated": "20230621154701"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "vim /usr/local/src/check_gateway.sh"
				}
			]
		},
		{
			"ID": "20230621154701-12xwiun",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230621154701-12xwiun",
				"updated": "20230621154701"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "#!/bin/bash\nexport PATH=$PATH:/usr/sbin\n#脑裂检查及控制：第三方仲裁机制，使用ping网关ip方式\n#循环次数\nCHECK_TIME=3\n#虚拟ip\nVIP=$1\n#网关ip(根据实际环境修改)\nGATEWAY=192.168.1.8\n#本机网卡\neth=enp2s0\n#服务器和网关通信状态  0=失败，1=成功\nkeepalived_communication_status=1\n#是否获取vip状态 0=失败，1=成功\nget_vip_status=1\n#keepalived服务状态 0=未运行，1=运行中\nkeepalived_service_status=1\n#服务状态运行中字符串\nactive_status_str='active (running)'\necho \"开始执行脚本 check_gateway.sh $VIP；时间:\"\ndate\n#查看是否获取vip状态\nfunction check_get_vip_status() {\n  #通过ip add命令查看ip信息，搜索$VIP，统计行数，是否等于1\n  if [ $(ip add | grep \"$VIP\" | wc -l) -eq 1 ]; then\n    get_vip_status=1\n  else\n    get_vip_status=0\n  fi\n  return $get_vip_status\n}\n \n#检查通信状态\nfunction check_keepalived_status() {\n  #检测$VIP 能否ping通$GATEWAY：使用$eth网络设备（-I $eth），发送数据包5（-c 5），源地址$VIP询问目的地[vip] $GATEWAY [网关地址 公用参考ip]（-s $VIP $GATEWAY） 日志不保存 \u003e/dev/null 2\u003e\u00261\n  /sbin/arping -I $eth -c 5 -s $VIP $GATEWAY \u003e/dev/null 2\u003e\u00261\n  #判断上一步执行结果 等于0成功\n  if [ $? = 0 ]; then\n    keepalived_communication_status=1\n  else\n    keepalived_communication_status=0\n  fi\n  return $keepalived_communication_status\n}\n \n#检查keepalived服务状态\nfunction check_keepalived_service_status() {\n  #通过systemctl status keepalived.service命令查看keepalived服务状态，搜索$active_status_str，统计行数，是否等于1\n  if [ $(systemctl status keepalived.service | grep \"$active_status_str\" | wc -l) -eq 1 ]; then\n    keepalived_service_status=1\n  else\n    keepalived_service_status=0\n  fi\n  return $keepalived_service_status\n}\n \n#循环执行\n#判断$CHECK_TIME 不等于 0\nwhile [ $CHECK_TIME -ne 0 ]; do\n  #执行check_get_vip_status获取get_vip_status\n  check_get_vip_status\n  #未获取vip\n  if [ $get_vip_status = 0 ]; then\n    #修改CHECK_TIME值 结束循环\n    CHECK_TIME=0\n    #检查服务状态 执行check_keepalived_service_status获取keepalived_service_status\n    if [ $keepalived_service_status = 0 ]; then\n      echo \"执行脚本 check_gateway.sh $VIP；启动keepalived服务\"\n      systemctl start keepalived.service\n    fi\n \n    echo \"执行脚本 check_gateway.sh $VIP；执行结果：未获取vip，无需处理，脚本执行结束，时间:\"\n    date\n    #正常运行程序并退出程序\n    exit 0\n  fi\n  #$CHECK_TIME  = $CHECK_TIME-1\n  let \"CHECK_TIME -= 1\"\n  #执行check_keepalived_status获取keepalived_communication_status\n  check_keepalived_status\n  #判断 $keepalived_communication_status = 1 通信成功\n  if [ $keepalived_communication_status = 1 ]; then\n    #修改CHECK_TIME值 结束循环\n    CHECK_TIME=0\n    #检查服务状态 执行check_keepalived_service_status获取keepalived_service_status\n    check_keepalived_service_status\n    if [ $keepalived_service_status = 0 ]; then\n      echo \"执行脚本 check_gateway.sh $VIP；启动keepalived服务\"\n      systemctl start keepalived.service\n    fi\n \n    echo \"执行脚本 check_gateway.sh $VIP；GATEWAY=$GATEWAY，执行结果：通信正常，无需处理，脚本执行结束，时间:\"\n    date\n    #正常运行程序并退出程序\n    exit 0\n  fi\n  #通信失败\u0026\u0026连续3次\n  if [ $keepalived_communication_status -eq 0 ] \u0026\u0026 [ $CHECK_TIME -eq 0 ]; then\n    #关闭keepalived\n    echo \"执行脚本 check_gateway.sh $VIP；关闭keepalived服务\"\n    systemctl stop keepalived.service\n    echo \"执行脚本 check_gateway.sh $VIP；GATEWAY=$GATEWAY，执行结果：通信失败\u0026\u0026连续3次 关闭keepalived，脚本执行结束，时间:\"\n    date\n    #非正常运行程序并退出程序\n    exit 1\n  fi\n  sleep 3\ndone\n\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230621154701-tc64dyx",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230621154701-tc64dyx",
				"updated": "20230621154701"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "em",
					"TextMarkTextContent": "链接："
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong strong strong strong strong strong strong a",
					"TextMarkAHref": "http://www.syrr.cn/news/61094.html",
					"TextMarkTextContent": "http://www.syrr.cn/news/61094.html"
				},
				{
					"Type": "NodeText",
					"Data": "**"
				}
			]
		},
		{
			"ID": "20230626015854-xdxle54",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230626015854-xdxle54"
			}
		}
	]
}